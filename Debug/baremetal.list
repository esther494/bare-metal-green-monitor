
baremetal.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004448  080001a0  080001a0  000011a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000003a0  080045e8  080045e8  000055e8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08004988  08004988  000061c8  2**0
                  CONTENTS
  4 .ARM          00000008  08004988  08004988  00005988  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08004990  08004990  000061c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08004990  08004990  00005990  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08004994  08004994  00005994  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000001c8  20000000  08004998  00006000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000188  200001c8  08004b60  000061c8  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000350  08004b60  00006350  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000061c8  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001cae  00000000  00000000  000061f8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000988  00000000  00000000  00007ea6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000248  00000000  00000000  00008830  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 0000018e  00000000  00000000  00008a78  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00010551  00000000  00000000  00008c06  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000039c9  00000000  00000000  00019157  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00056c97  00000000  00000000  0001cb20  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000737b7  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000017e4  00000000  00000000  000737fc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000051  00000000  00000000  00074fe0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	@ (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	@ (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	@ (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	200001c8 	.word	0x200001c8
 80001bc:	00000000 	.word	0x00000000
 80001c0:	080045d0 	.word	0x080045d0

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	@ (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	@ (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	@ (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	200001cc 	.word	0x200001cc
 80001dc:	080045d0 	.word	0x080045d0

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <strlen>:
 8000280:	4603      	mov	r3, r0
 8000282:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000286:	2a00      	cmp	r2, #0
 8000288:	d1fb      	bne.n	8000282 <strlen+0x2>
 800028a:	1a18      	subs	r0, r3, r0
 800028c:	3801      	subs	r0, #1
 800028e:	4770      	bx	lr

08000290 <__aeabi_drsub>:
 8000290:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000294:	e002      	b.n	800029c <__adddf3>
 8000296:	bf00      	nop

08000298 <__aeabi_dsub>:
 8000298:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800029c <__adddf3>:
 800029c:	b530      	push	{r4, r5, lr}
 800029e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002a6:	ea94 0f05 	teq	r4, r5
 80002aa:	bf08      	it	eq
 80002ac:	ea90 0f02 	teqeq	r0, r2
 80002b0:	bf1f      	itttt	ne
 80002b2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002b6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002c2:	f000 80e2 	beq.w	800048a <__adddf3+0x1ee>
 80002c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ce:	bfb8      	it	lt
 80002d0:	426d      	neglt	r5, r5
 80002d2:	dd0c      	ble.n	80002ee <__adddf3+0x52>
 80002d4:	442c      	add	r4, r5
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	ea82 0000 	eor.w	r0, r2, r0
 80002e2:	ea83 0101 	eor.w	r1, r3, r1
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	2d36      	cmp	r5, #54	@ 0x36
 80002f0:	bf88      	it	hi
 80002f2:	bd30      	pophi	{r4, r5, pc}
 80002f4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80002f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002fc:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000300:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000304:	d002      	beq.n	800030c <__adddf3+0x70>
 8000306:	4240      	negs	r0, r0
 8000308:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800030c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000310:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000314:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000318:	d002      	beq.n	8000320 <__adddf3+0x84>
 800031a:	4252      	negs	r2, r2
 800031c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000320:	ea94 0f05 	teq	r4, r5
 8000324:	f000 80a7 	beq.w	8000476 <__adddf3+0x1da>
 8000328:	f1a4 0401 	sub.w	r4, r4, #1
 800032c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000330:	db0d      	blt.n	800034e <__adddf3+0xb2>
 8000332:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000336:	fa22 f205 	lsr.w	r2, r2, r5
 800033a:	1880      	adds	r0, r0, r2
 800033c:	f141 0100 	adc.w	r1, r1, #0
 8000340:	fa03 f20e 	lsl.w	r2, r3, lr
 8000344:	1880      	adds	r0, r0, r2
 8000346:	fa43 f305 	asr.w	r3, r3, r5
 800034a:	4159      	adcs	r1, r3
 800034c:	e00e      	b.n	800036c <__adddf3+0xd0>
 800034e:	f1a5 0520 	sub.w	r5, r5, #32
 8000352:	f10e 0e20 	add.w	lr, lr, #32
 8000356:	2a01      	cmp	r2, #1
 8000358:	fa03 fc0e 	lsl.w	ip, r3, lr
 800035c:	bf28      	it	cs
 800035e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000362:	fa43 f305 	asr.w	r3, r3, r5
 8000366:	18c0      	adds	r0, r0, r3
 8000368:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800036c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000370:	d507      	bpl.n	8000382 <__adddf3+0xe6>
 8000372:	f04f 0e00 	mov.w	lr, #0
 8000376:	f1dc 0c00 	rsbs	ip, ip, #0
 800037a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800037e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000382:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000386:	d31b      	bcc.n	80003c0 <__adddf3+0x124>
 8000388:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800038c:	d30c      	bcc.n	80003a8 <__adddf3+0x10c>
 800038e:	0849      	lsrs	r1, r1, #1
 8000390:	ea5f 0030 	movs.w	r0, r0, rrx
 8000394:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000398:	f104 0401 	add.w	r4, r4, #1
 800039c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003a0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80003a4:	f080 809a 	bcs.w	80004dc <__adddf3+0x240>
 80003a8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80003ac:	bf08      	it	eq
 80003ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003b2:	f150 0000 	adcs.w	r0, r0, #0
 80003b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ba:	ea41 0105 	orr.w	r1, r1, r5
 80003be:	bd30      	pop	{r4, r5, pc}
 80003c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003c4:	4140      	adcs	r0, r0
 80003c6:	eb41 0101 	adc.w	r1, r1, r1
 80003ca:	3c01      	subs	r4, #1
 80003cc:	bf28      	it	cs
 80003ce:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80003d2:	d2e9      	bcs.n	80003a8 <__adddf3+0x10c>
 80003d4:	f091 0f00 	teq	r1, #0
 80003d8:	bf04      	itt	eq
 80003da:	4601      	moveq	r1, r0
 80003dc:	2000      	moveq	r0, #0
 80003de:	fab1 f381 	clz	r3, r1
 80003e2:	bf08      	it	eq
 80003e4:	3320      	addeq	r3, #32
 80003e6:	f1a3 030b 	sub.w	r3, r3, #11
 80003ea:	f1b3 0220 	subs.w	r2, r3, #32
 80003ee:	da0c      	bge.n	800040a <__adddf3+0x16e>
 80003f0:	320c      	adds	r2, #12
 80003f2:	dd08      	ble.n	8000406 <__adddf3+0x16a>
 80003f4:	f102 0c14 	add.w	ip, r2, #20
 80003f8:	f1c2 020c 	rsb	r2, r2, #12
 80003fc:	fa01 f00c 	lsl.w	r0, r1, ip
 8000400:	fa21 f102 	lsr.w	r1, r1, r2
 8000404:	e00c      	b.n	8000420 <__adddf3+0x184>
 8000406:	f102 0214 	add.w	r2, r2, #20
 800040a:	bfd8      	it	le
 800040c:	f1c2 0c20 	rsble	ip, r2, #32
 8000410:	fa01 f102 	lsl.w	r1, r1, r2
 8000414:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000418:	bfdc      	itt	le
 800041a:	ea41 010c 	orrle.w	r1, r1, ip
 800041e:	4090      	lslle	r0, r2
 8000420:	1ae4      	subs	r4, r4, r3
 8000422:	bfa2      	ittt	ge
 8000424:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000428:	4329      	orrge	r1, r5
 800042a:	bd30      	popge	{r4, r5, pc}
 800042c:	ea6f 0404 	mvn.w	r4, r4
 8000430:	3c1f      	subs	r4, #31
 8000432:	da1c      	bge.n	800046e <__adddf3+0x1d2>
 8000434:	340c      	adds	r4, #12
 8000436:	dc0e      	bgt.n	8000456 <__adddf3+0x1ba>
 8000438:	f104 0414 	add.w	r4, r4, #20
 800043c:	f1c4 0220 	rsb	r2, r4, #32
 8000440:	fa20 f004 	lsr.w	r0, r0, r4
 8000444:	fa01 f302 	lsl.w	r3, r1, r2
 8000448:	ea40 0003 	orr.w	r0, r0, r3
 800044c:	fa21 f304 	lsr.w	r3, r1, r4
 8000450:	ea45 0103 	orr.w	r1, r5, r3
 8000454:	bd30      	pop	{r4, r5, pc}
 8000456:	f1c4 040c 	rsb	r4, r4, #12
 800045a:	f1c4 0220 	rsb	r2, r4, #32
 800045e:	fa20 f002 	lsr.w	r0, r0, r2
 8000462:	fa01 f304 	lsl.w	r3, r1, r4
 8000466:	ea40 0003 	orr.w	r0, r0, r3
 800046a:	4629      	mov	r1, r5
 800046c:	bd30      	pop	{r4, r5, pc}
 800046e:	fa21 f004 	lsr.w	r0, r1, r4
 8000472:	4629      	mov	r1, r5
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f094 0f00 	teq	r4, #0
 800047a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800047e:	bf06      	itte	eq
 8000480:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000484:	3401      	addeq	r4, #1
 8000486:	3d01      	subne	r5, #1
 8000488:	e74e      	b.n	8000328 <__adddf3+0x8c>
 800048a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800048e:	bf18      	it	ne
 8000490:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000494:	d029      	beq.n	80004ea <__adddf3+0x24e>
 8000496:	ea94 0f05 	teq	r4, r5
 800049a:	bf08      	it	eq
 800049c:	ea90 0f02 	teqeq	r0, r2
 80004a0:	d005      	beq.n	80004ae <__adddf3+0x212>
 80004a2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004a6:	bf04      	itt	eq
 80004a8:	4619      	moveq	r1, r3
 80004aa:	4610      	moveq	r0, r2
 80004ac:	bd30      	pop	{r4, r5, pc}
 80004ae:	ea91 0f03 	teq	r1, r3
 80004b2:	bf1e      	ittt	ne
 80004b4:	2100      	movne	r1, #0
 80004b6:	2000      	movne	r0, #0
 80004b8:	bd30      	popne	{r4, r5, pc}
 80004ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004be:	d105      	bne.n	80004cc <__adddf3+0x230>
 80004c0:	0040      	lsls	r0, r0, #1
 80004c2:	4149      	adcs	r1, r1
 80004c4:	bf28      	it	cs
 80004c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004ca:	bd30      	pop	{r4, r5, pc}
 80004cc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80004d0:	bf3c      	itt	cc
 80004d2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80004d6:	bd30      	popcc	{r4, r5, pc}
 80004d8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004dc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80004e0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80004e4:	f04f 0000 	mov.w	r0, #0
 80004e8:	bd30      	pop	{r4, r5, pc}
 80004ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ee:	bf1a      	itte	ne
 80004f0:	4619      	movne	r1, r3
 80004f2:	4610      	movne	r0, r2
 80004f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004f8:	bf1c      	itt	ne
 80004fa:	460b      	movne	r3, r1
 80004fc:	4602      	movne	r2, r0
 80004fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000502:	bf06      	itte	eq
 8000504:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000508:	ea91 0f03 	teqeq	r1, r3
 800050c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000510:	bd30      	pop	{r4, r5, pc}
 8000512:	bf00      	nop

08000514 <__aeabi_ui2d>:
 8000514:	f090 0f00 	teq	r0, #0
 8000518:	bf04      	itt	eq
 800051a:	2100      	moveq	r1, #0
 800051c:	4770      	bxeq	lr
 800051e:	b530      	push	{r4, r5, lr}
 8000520:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000524:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000528:	f04f 0500 	mov.w	r5, #0
 800052c:	f04f 0100 	mov.w	r1, #0
 8000530:	e750      	b.n	80003d4 <__adddf3+0x138>
 8000532:	bf00      	nop

08000534 <__aeabi_i2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000548:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800054c:	bf48      	it	mi
 800054e:	4240      	negmi	r0, r0
 8000550:	f04f 0100 	mov.w	r1, #0
 8000554:	e73e      	b.n	80003d4 <__adddf3+0x138>
 8000556:	bf00      	nop

08000558 <__aeabi_f2d>:
 8000558:	0042      	lsls	r2, r0, #1
 800055a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800055e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000562:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000566:	bf1f      	itttt	ne
 8000568:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800056c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000570:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000574:	4770      	bxne	lr
 8000576:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800057a:	bf08      	it	eq
 800057c:	4770      	bxeq	lr
 800057e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000582:	bf04      	itt	eq
 8000584:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000588:	4770      	bxeq	lr
 800058a:	b530      	push	{r4, r5, lr}
 800058c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000590:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000594:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000598:	e71c      	b.n	80003d4 <__adddf3+0x138>
 800059a:	bf00      	nop

0800059c <__aeabi_ul2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f04f 0500 	mov.w	r5, #0
 80005aa:	e00a      	b.n	80005c2 <__aeabi_l2d+0x16>

080005ac <__aeabi_l2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005ba:	d502      	bpl.n	80005c2 <__aeabi_l2d+0x16>
 80005bc:	4240      	negs	r0, r0
 80005be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005c2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005c6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ce:	f43f aed8 	beq.w	8000382 <__adddf3+0xe6>
 80005d2:	f04f 0203 	mov.w	r2, #3
 80005d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005da:	bf18      	it	ne
 80005dc:	3203      	addne	r2, #3
 80005de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005e2:	bf18      	it	ne
 80005e4:	3203      	addne	r2, #3
 80005e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005ea:	f1c2 0320 	rsb	r3, r2, #32
 80005ee:	fa00 fc03 	lsl.w	ip, r0, r3
 80005f2:	fa20 f002 	lsr.w	r0, r0, r2
 80005f6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005fa:	ea40 000e 	orr.w	r0, r0, lr
 80005fe:	fa21 f102 	lsr.w	r1, r1, r2
 8000602:	4414      	add	r4, r2
 8000604:	e6bd      	b.n	8000382 <__adddf3+0xe6>
 8000606:	bf00      	nop

08000608 <__aeabi_dmul>:
 8000608:	b570      	push	{r4, r5, r6, lr}
 800060a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 800060e:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000612:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000616:	bf1d      	ittte	ne
 8000618:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800061c:	ea94 0f0c 	teqne	r4, ip
 8000620:	ea95 0f0c 	teqne	r5, ip
 8000624:	f000 f8de 	bleq	80007e4 <__aeabi_dmul+0x1dc>
 8000628:	442c      	add	r4, r5
 800062a:	ea81 0603 	eor.w	r6, r1, r3
 800062e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000632:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000636:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800063a:	bf18      	it	ne
 800063c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000640:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000644:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000648:	d038      	beq.n	80006bc <__aeabi_dmul+0xb4>
 800064a:	fba0 ce02 	umull	ip, lr, r0, r2
 800064e:	f04f 0500 	mov.w	r5, #0
 8000652:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000656:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800065a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800065e:	f04f 0600 	mov.w	r6, #0
 8000662:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000666:	f09c 0f00 	teq	ip, #0
 800066a:	bf18      	it	ne
 800066c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000670:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000674:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000678:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800067c:	d204      	bcs.n	8000688 <__aeabi_dmul+0x80>
 800067e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000682:	416d      	adcs	r5, r5
 8000684:	eb46 0606 	adc.w	r6, r6, r6
 8000688:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800068c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000690:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000694:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000698:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800069c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80006a0:	bf88      	it	hi
 80006a2:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80006a6:	d81e      	bhi.n	80006e6 <__aeabi_dmul+0xde>
 80006a8:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 80006ac:	bf08      	it	eq
 80006ae:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006b2:	f150 0000 	adcs.w	r0, r0, #0
 80006b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ba:	bd70      	pop	{r4, r5, r6, pc}
 80006bc:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006c0:	ea46 0101 	orr.w	r1, r6, r1
 80006c4:	ea40 0002 	orr.w	r0, r0, r2
 80006c8:	ea81 0103 	eor.w	r1, r1, r3
 80006cc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006d0:	bfc2      	ittt	gt
 80006d2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006da:	bd70      	popgt	{r4, r5, r6, pc}
 80006dc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80006e0:	f04f 0e00 	mov.w	lr, #0
 80006e4:	3c01      	subs	r4, #1
 80006e6:	f300 80ab 	bgt.w	8000840 <__aeabi_dmul+0x238>
 80006ea:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80006ee:	bfde      	ittt	le
 80006f0:	2000      	movle	r0, #0
 80006f2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80006f6:	bd70      	pople	{r4, r5, r6, pc}
 80006f8:	f1c4 0400 	rsb	r4, r4, #0
 80006fc:	3c20      	subs	r4, #32
 80006fe:	da35      	bge.n	800076c <__aeabi_dmul+0x164>
 8000700:	340c      	adds	r4, #12
 8000702:	dc1b      	bgt.n	800073c <__aeabi_dmul+0x134>
 8000704:	f104 0414 	add.w	r4, r4, #20
 8000708:	f1c4 0520 	rsb	r5, r4, #32
 800070c:	fa00 f305 	lsl.w	r3, r0, r5
 8000710:	fa20 f004 	lsr.w	r0, r0, r4
 8000714:	fa01 f205 	lsl.w	r2, r1, r5
 8000718:	ea40 0002 	orr.w	r0, r0, r2
 800071c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000720:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000724:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000728:	fa21 f604 	lsr.w	r6, r1, r4
 800072c:	eb42 0106 	adc.w	r1, r2, r6
 8000730:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000734:	bf08      	it	eq
 8000736:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800073a:	bd70      	pop	{r4, r5, r6, pc}
 800073c:	f1c4 040c 	rsb	r4, r4, #12
 8000740:	f1c4 0520 	rsb	r5, r4, #32
 8000744:	fa00 f304 	lsl.w	r3, r0, r4
 8000748:	fa20 f005 	lsr.w	r0, r0, r5
 800074c:	fa01 f204 	lsl.w	r2, r1, r4
 8000750:	ea40 0002 	orr.w	r0, r0, r2
 8000754:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000758:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800075c:	f141 0100 	adc.w	r1, r1, #0
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 0520 	rsb	r5, r4, #32
 8000770:	fa00 f205 	lsl.w	r2, r0, r5
 8000774:	ea4e 0e02 	orr.w	lr, lr, r2
 8000778:	fa20 f304 	lsr.w	r3, r0, r4
 800077c:	fa01 f205 	lsl.w	r2, r1, r5
 8000780:	ea43 0302 	orr.w	r3, r3, r2
 8000784:	fa21 f004 	lsr.w	r0, r1, r4
 8000788:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800078c:	fa21 f204 	lsr.w	r2, r1, r4
 8000790:	ea20 0002 	bic.w	r0, r0, r2
 8000794:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000798:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800079c:	bf08      	it	eq
 800079e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007a2:	bd70      	pop	{r4, r5, r6, pc}
 80007a4:	f094 0f00 	teq	r4, #0
 80007a8:	d10f      	bne.n	80007ca <__aeabi_dmul+0x1c2>
 80007aa:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 80007ae:	0040      	lsls	r0, r0, #1
 80007b0:	eb41 0101 	adc.w	r1, r1, r1
 80007b4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007b8:	bf08      	it	eq
 80007ba:	3c01      	subeq	r4, #1
 80007bc:	d0f7      	beq.n	80007ae <__aeabi_dmul+0x1a6>
 80007be:	ea41 0106 	orr.w	r1, r1, r6
 80007c2:	f095 0f00 	teq	r5, #0
 80007c6:	bf18      	it	ne
 80007c8:	4770      	bxne	lr
 80007ca:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007ce:	0052      	lsls	r2, r2, #1
 80007d0:	eb43 0303 	adc.w	r3, r3, r3
 80007d4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3d01      	subeq	r5, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1c6>
 80007de:	ea43 0306 	orr.w	r3, r3, r6
 80007e2:	4770      	bx	lr
 80007e4:	ea94 0f0c 	teq	r4, ip
 80007e8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007ec:	bf18      	it	ne
 80007ee:	ea95 0f0c 	teqne	r5, ip
 80007f2:	d00c      	beq.n	800080e <__aeabi_dmul+0x206>
 80007f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007f8:	bf18      	it	ne
 80007fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007fe:	d1d1      	bne.n	80007a4 <__aeabi_dmul+0x19c>
 8000800:	ea81 0103 	eor.w	r1, r1, r3
 8000804:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000808:	f04f 0000 	mov.w	r0, #0
 800080c:	bd70      	pop	{r4, r5, r6, pc}
 800080e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000812:	bf06      	itte	eq
 8000814:	4610      	moveq	r0, r2
 8000816:	4619      	moveq	r1, r3
 8000818:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081c:	d019      	beq.n	8000852 <__aeabi_dmul+0x24a>
 800081e:	ea94 0f0c 	teq	r4, ip
 8000822:	d102      	bne.n	800082a <__aeabi_dmul+0x222>
 8000824:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000828:	d113      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800082a:	ea95 0f0c 	teq	r5, ip
 800082e:	d105      	bne.n	800083c <__aeabi_dmul+0x234>
 8000830:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000834:	bf1c      	itt	ne
 8000836:	4610      	movne	r0, r2
 8000838:	4619      	movne	r1, r3
 800083a:	d10a      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800083c:	ea81 0103 	eor.w	r1, r1, r3
 8000840:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000844:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000848:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800084c:	f04f 0000 	mov.w	r0, #0
 8000850:	bd70      	pop	{r4, r5, r6, pc}
 8000852:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000856:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800085a:	bd70      	pop	{r4, r5, r6, pc}

0800085c <__aeabi_ddiv>:
 800085c:	b570      	push	{r4, r5, r6, lr}
 800085e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000862:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000866:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800086a:	bf1d      	ittte	ne
 800086c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000870:	ea94 0f0c 	teqne	r4, ip
 8000874:	ea95 0f0c 	teqne	r5, ip
 8000878:	f000 f8a7 	bleq	80009ca <__aeabi_ddiv+0x16e>
 800087c:	eba4 0405 	sub.w	r4, r4, r5
 8000880:	ea81 0e03 	eor.w	lr, r1, r3
 8000884:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000888:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800088c:	f000 8088 	beq.w	80009a0 <__aeabi_ddiv+0x144>
 8000890:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000894:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000898:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800089c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008a0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008a4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008a8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008ac:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008b0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008b4:	429d      	cmp	r5, r3
 80008b6:	bf08      	it	eq
 80008b8:	4296      	cmpeq	r6, r2
 80008ba:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008be:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008c2:	d202      	bcs.n	80008ca <__aeabi_ddiv+0x6e>
 80008c4:	085b      	lsrs	r3, r3, #1
 80008c6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ca:	1ab6      	subs	r6, r6, r2
 80008cc:	eb65 0503 	sbc.w	r5, r5, r3
 80008d0:	085b      	lsrs	r3, r3, #1
 80008d2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008d6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80008da:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80008de:	ebb6 0e02 	subs.w	lr, r6, r2
 80008e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008e6:	bf22      	ittt	cs
 80008e8:	1ab6      	subcs	r6, r6, r2
 80008ea:	4675      	movcs	r5, lr
 80008ec:	ea40 000c 	orrcs.w	r0, r0, ip
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008fe:	bf22      	ittt	cs
 8000900:	1ab6      	subcs	r6, r6, r2
 8000902:	4675      	movcs	r5, lr
 8000904:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000908:	085b      	lsrs	r3, r3, #1
 800090a:	ea4f 0232 	mov.w	r2, r2, rrx
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000938:	ea55 0e06 	orrs.w	lr, r5, r6
 800093c:	d018      	beq.n	8000970 <__aeabi_ddiv+0x114>
 800093e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000942:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000946:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800094a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800094e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000952:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000956:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800095a:	d1c0      	bne.n	80008de <__aeabi_ddiv+0x82>
 800095c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000960:	d10b      	bne.n	800097a <__aeabi_ddiv+0x11e>
 8000962:	ea41 0100 	orr.w	r1, r1, r0
 8000966:	f04f 0000 	mov.w	r0, #0
 800096a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800096e:	e7b6      	b.n	80008de <__aeabi_ddiv+0x82>
 8000970:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000974:	bf04      	itt	eq
 8000976:	4301      	orreq	r1, r0
 8000978:	2000      	moveq	r0, #0
 800097a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800097e:	bf88      	it	hi
 8000980:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000984:	f63f aeaf 	bhi.w	80006e6 <__aeabi_dmul+0xde>
 8000988:	ebb5 0c03 	subs.w	ip, r5, r3
 800098c:	bf04      	itt	eq
 800098e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000992:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000996:	f150 0000 	adcs.w	r0, r0, #0
 800099a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800099e:	bd70      	pop	{r4, r5, r6, pc}
 80009a0:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 80009a4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009a8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009ac:	bfc2      	ittt	gt
 80009ae:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009b2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009b6:	bd70      	popgt	{r4, r5, r6, pc}
 80009b8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009bc:	f04f 0e00 	mov.w	lr, #0
 80009c0:	3c01      	subs	r4, #1
 80009c2:	e690      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009c4:	ea45 0e06 	orr.w	lr, r5, r6
 80009c8:	e68d      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009ca:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ce:	ea94 0f0c 	teq	r4, ip
 80009d2:	bf08      	it	eq
 80009d4:	ea95 0f0c 	teqeq	r5, ip
 80009d8:	f43f af3b 	beq.w	8000852 <__aeabi_dmul+0x24a>
 80009dc:	ea94 0f0c 	teq	r4, ip
 80009e0:	d10a      	bne.n	80009f8 <__aeabi_ddiv+0x19c>
 80009e2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009e6:	f47f af34 	bne.w	8000852 <__aeabi_dmul+0x24a>
 80009ea:	ea95 0f0c 	teq	r5, ip
 80009ee:	f47f af25 	bne.w	800083c <__aeabi_dmul+0x234>
 80009f2:	4610      	mov	r0, r2
 80009f4:	4619      	mov	r1, r3
 80009f6:	e72c      	b.n	8000852 <__aeabi_dmul+0x24a>
 80009f8:	ea95 0f0c 	teq	r5, ip
 80009fc:	d106      	bne.n	8000a0c <__aeabi_ddiv+0x1b0>
 80009fe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a02:	f43f aefd 	beq.w	8000800 <__aeabi_dmul+0x1f8>
 8000a06:	4610      	mov	r0, r2
 8000a08:	4619      	mov	r1, r3
 8000a0a:	e722      	b.n	8000852 <__aeabi_dmul+0x24a>
 8000a0c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a10:	bf18      	it	ne
 8000a12:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a16:	f47f aec5 	bne.w	80007a4 <__aeabi_dmul+0x19c>
 8000a1a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a1e:	f47f af0d 	bne.w	800083c <__aeabi_dmul+0x234>
 8000a22:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a26:	f47f aeeb 	bne.w	8000800 <__aeabi_dmul+0x1f8>
 8000a2a:	e712      	b.n	8000852 <__aeabi_dmul+0x24a>

08000a2c <__gedf2>:
 8000a2c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a30:	e006      	b.n	8000a40 <__cmpdf2+0x4>
 8000a32:	bf00      	nop

08000a34 <__ledf2>:
 8000a34:	f04f 0c01 	mov.w	ip, #1
 8000a38:	e002      	b.n	8000a40 <__cmpdf2+0x4>
 8000a3a:	bf00      	nop

08000a3c <__cmpdf2>:
 8000a3c:	f04f 0c01 	mov.w	ip, #1
 8000a40:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a44:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a48:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a50:	bf18      	it	ne
 8000a52:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a56:	d01b      	beq.n	8000a90 <__cmpdf2+0x54>
 8000a58:	b001      	add	sp, #4
 8000a5a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a5e:	bf0c      	ite	eq
 8000a60:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a64:	ea91 0f03 	teqne	r1, r3
 8000a68:	bf02      	ittt	eq
 8000a6a:	ea90 0f02 	teqeq	r0, r2
 8000a6e:	2000      	moveq	r0, #0
 8000a70:	4770      	bxeq	lr
 8000a72:	f110 0f00 	cmn.w	r0, #0
 8000a76:	ea91 0f03 	teq	r1, r3
 8000a7a:	bf58      	it	pl
 8000a7c:	4299      	cmppl	r1, r3
 8000a7e:	bf08      	it	eq
 8000a80:	4290      	cmpeq	r0, r2
 8000a82:	bf2c      	ite	cs
 8000a84:	17d8      	asrcs	r0, r3, #31
 8000a86:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a8a:	f040 0001 	orr.w	r0, r0, #1
 8000a8e:	4770      	bx	lr
 8000a90:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d102      	bne.n	8000aa0 <__cmpdf2+0x64>
 8000a9a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a9e:	d107      	bne.n	8000ab0 <__cmpdf2+0x74>
 8000aa0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d1d6      	bne.n	8000a58 <__cmpdf2+0x1c>
 8000aaa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000aae:	d0d3      	beq.n	8000a58 <__cmpdf2+0x1c>
 8000ab0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ab4:	4770      	bx	lr
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdrcmple>:
 8000ab8:	4684      	mov	ip, r0
 8000aba:	4610      	mov	r0, r2
 8000abc:	4662      	mov	r2, ip
 8000abe:	468c      	mov	ip, r1
 8000ac0:	4619      	mov	r1, r3
 8000ac2:	4663      	mov	r3, ip
 8000ac4:	e000      	b.n	8000ac8 <__aeabi_cdcmpeq>
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdcmpeq>:
 8000ac8:	b501      	push	{r0, lr}
 8000aca:	f7ff ffb7 	bl	8000a3c <__cmpdf2>
 8000ace:	2800      	cmp	r0, #0
 8000ad0:	bf48      	it	mi
 8000ad2:	f110 0f00 	cmnmi.w	r0, #0
 8000ad6:	bd01      	pop	{r0, pc}

08000ad8 <__aeabi_dcmpeq>:
 8000ad8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000adc:	f7ff fff4 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000ae0:	bf0c      	ite	eq
 8000ae2:	2001      	moveq	r0, #1
 8000ae4:	2000      	movne	r0, #0
 8000ae6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aea:	bf00      	nop

08000aec <__aeabi_dcmplt>:
 8000aec:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af0:	f7ff ffea 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000af4:	bf34      	ite	cc
 8000af6:	2001      	movcc	r0, #1
 8000af8:	2000      	movcs	r0, #0
 8000afa:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afe:	bf00      	nop

08000b00 <__aeabi_dcmple>:
 8000b00:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b04:	f7ff ffe0 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000b08:	bf94      	ite	ls
 8000b0a:	2001      	movls	r0, #1
 8000b0c:	2000      	movhi	r0, #0
 8000b0e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b12:	bf00      	nop

08000b14 <__aeabi_dcmpge>:
 8000b14:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b18:	f7ff ffce 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b1c:	bf94      	ite	ls
 8000b1e:	2001      	movls	r0, #1
 8000b20:	2000      	movhi	r0, #0
 8000b22:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b26:	bf00      	nop

08000b28 <__aeabi_dcmpgt>:
 8000b28:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b2c:	f7ff ffc4 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b30:	bf34      	ite	cc
 8000b32:	2001      	movcc	r0, #1
 8000b34:	2000      	movcs	r0, #0
 8000b36:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b3a:	bf00      	nop

08000b3c <__aeabi_dcmpun>:
 8000b3c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x10>
 8000b46:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b4a:	d10a      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x20>
 8000b56:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b5a:	d102      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b5c:	f04f 0000 	mov.w	r0, #0
 8000b60:	4770      	bx	lr
 8000b62:	f04f 0001 	mov.w	r0, #1
 8000b66:	4770      	bx	lr

08000b68 <__aeabi_d2iz>:
 8000b68:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b6c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000b70:	d215      	bcs.n	8000b9e <__aeabi_d2iz+0x36>
 8000b72:	d511      	bpl.n	8000b98 <__aeabi_d2iz+0x30>
 8000b74:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000b78:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b7c:	d912      	bls.n	8000ba4 <__aeabi_d2iz+0x3c>
 8000b7e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b82:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000b86:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b8a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000b8e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b92:	bf18      	it	ne
 8000b94:	4240      	negne	r0, r0
 8000b96:	4770      	bx	lr
 8000b98:	f04f 0000 	mov.w	r0, #0
 8000b9c:	4770      	bx	lr
 8000b9e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ba2:	d105      	bne.n	8000bb0 <__aeabi_d2iz+0x48>
 8000ba4:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000ba8:	bf08      	it	eq
 8000baa:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000bae:	4770      	bx	lr
 8000bb0:	f04f 0000 	mov.w	r0, #0
 8000bb4:	4770      	bx	lr
 8000bb6:	bf00      	nop

08000bb8 <ADC_Init>:
 *      Author: esthe
 */

#include "adcdma.h"

void ADC_Init(void) {
 8000bb8:	b480      	push	{r7}
 8000bba:	af00      	add	r7, sp, #0
    // Reset CR1 & CR2
    ADC1->CR2 = 0;
 8000bbc:	4b2c      	ldr	r3, [pc, #176]	@ (8000c70 <ADC_Init+0xb8>)
 8000bbe:	2200      	movs	r2, #0
 8000bc0:	609a      	str	r2, [r3, #8]
    ADC1->CR1 = 0;
 8000bc2:	4b2b      	ldr	r3, [pc, #172]	@ (8000c70 <ADC_Init+0xb8>)
 8000bc4:	2200      	movs	r2, #0
 8000bc6:	605a      	str	r2, [r3, #4]

    ADC->CCR |= (1U << ADC_CCR_ADCPRE_Pos);             // Set ADC prescaler to divide by 4
 8000bc8:	4b2a      	ldr	r3, [pc, #168]	@ (8000c74 <ADC_Init+0xbc>)
 8000bca:	685b      	ldr	r3, [r3, #4]
 8000bcc:	4a29      	ldr	r2, [pc, #164]	@ (8000c74 <ADC_Init+0xbc>)
 8000bce:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8000bd2:	6053      	str	r3, [r2, #4]
    ADC1->CR1 &= ~(3U << ADC_CR1_RES_Pos);              // Clear resolution bits (1 2-bit)
 8000bd4:	4b26      	ldr	r3, [pc, #152]	@ (8000c70 <ADC_Init+0xb8>)
 8000bd6:	685b      	ldr	r3, [r3, #4]
 8000bd8:	4a25      	ldr	r2, [pc, #148]	@ (8000c70 <ADC_Init+0xb8>)
 8000bda:	f023 7340 	bic.w	r3, r3, #50331648	@ 0x3000000
 8000bde:	6053      	str	r3, [r2, #4]

    // ADC1->CR2 |= ADC_CR2_CONT;                       // Set ADC to continuous mode
    ADC1->CR1 |= ADC_CR1_SCAN;                          // Enable scan mode
 8000be0:	4b23      	ldr	r3, [pc, #140]	@ (8000c70 <ADC_Init+0xb8>)
 8000be2:	685b      	ldr	r3, [r3, #4]
 8000be4:	4a22      	ldr	r2, [pc, #136]	@ (8000c70 <ADC_Init+0xb8>)
 8000be6:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000bea:	6053      	str	r3, [r2, #4]

    ADC1->SMPR2 |= (4U << ADC_SMPR2_SMP0_Pos);          // Set sampling time for channel 0 (PA0)
 8000bec:	4b20      	ldr	r3, [pc, #128]	@ (8000c70 <ADC_Init+0xb8>)
 8000bee:	691b      	ldr	r3, [r3, #16]
 8000bf0:	4a1f      	ldr	r2, [pc, #124]	@ (8000c70 <ADC_Init+0xb8>)
 8000bf2:	f043 0304 	orr.w	r3, r3, #4
 8000bf6:	6113      	str	r3, [r2, #16]
    ADC1->SMPR2 |= (4U << ADC_SMPR2_SMP1_Pos);          // Set sampling time for channel 1 (PA1)
 8000bf8:	4b1d      	ldr	r3, [pc, #116]	@ (8000c70 <ADC_Init+0xb8>)
 8000bfa:	691b      	ldr	r3, [r3, #16]
 8000bfc:	4a1c      	ldr	r2, [pc, #112]	@ (8000c70 <ADC_Init+0xb8>)
 8000bfe:	f043 0320 	orr.w	r3, r3, #32
 8000c02:	6113      	str	r3, [r2, #16]

    ADC1->SQR3 = (1 << ADC_SQR3_SQ2_Pos) | (0 << ADC_SQR3_SQ1_Pos); // Configure sequence order
 8000c04:	4b1a      	ldr	r3, [pc, #104]	@ (8000c70 <ADC_Init+0xb8>)
 8000c06:	2220      	movs	r2, #32
 8000c08:	635a      	str	r2, [r3, #52]	@ 0x34
    ADC1->SQR1 |= 1 << ADC_SQR1_L_Pos;                              // Set number of channels to convert (2 channels)
 8000c0a:	4b19      	ldr	r3, [pc, #100]	@ (8000c70 <ADC_Init+0xb8>)
 8000c0c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8000c0e:	4a18      	ldr	r2, [pc, #96]	@ (8000c70 <ADC_Init+0xb8>)
 8000c10:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000c14:	62d3      	str	r3, [r2, #44]	@ 0x2c

    ADC1->CR2 |= 0 << 10;                                // EOC configuration (Why set to 0?)
 8000c16:	4b16      	ldr	r3, [pc, #88]	@ (8000c70 <ADC_Init+0xb8>)
 8000c18:	4a15      	ldr	r2, [pc, #84]	@ (8000c70 <ADC_Init+0xb8>)
 8000c1a:	689b      	ldr	r3, [r3, #8]
 8000c1c:	6093      	str	r3, [r2, #8]
    ADC1->CR2 |= 0b0110 << 24;                           // Set TIM2 TRGO
 8000c1e:	4b14      	ldr	r3, [pc, #80]	@ (8000c70 <ADC_Init+0xb8>)
 8000c20:	689b      	ldr	r3, [r3, #8]
 8000c22:	4a13      	ldr	r2, [pc, #76]	@ (8000c70 <ADC_Init+0xb8>)
 8000c24:	f043 63c0 	orr.w	r3, r3, #100663296	@ 0x6000000
 8000c28:	6093      	str	r3, [r2, #8]
    ADC1->CR2 |= ADC_CR2_EXTEN_0;                        // Enable external trigger
 8000c2a:	4b11      	ldr	r3, [pc, #68]	@ (8000c70 <ADC_Init+0xb8>)
 8000c2c:	689b      	ldr	r3, [r3, #8]
 8000c2e:	4a10      	ldr	r2, [pc, #64]	@ (8000c70 <ADC_Init+0xb8>)
 8000c30:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8000c34:	6093      	str	r3, [r2, #8]

    ADC1->CR2 |= 1 << 8;                                 // Enable DMA
 8000c36:	4b0e      	ldr	r3, [pc, #56]	@ (8000c70 <ADC_Init+0xb8>)
 8000c38:	689b      	ldr	r3, [r3, #8]
 8000c3a:	4a0d      	ldr	r2, [pc, #52]	@ (8000c70 <ADC_Init+0xb8>)
 8000c3c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000c40:	6093      	str	r3, [r2, #8]
    ADC1->CR2 |= 1 << 9;                                 // Set DDS
 8000c42:	4b0b      	ldr	r3, [pc, #44]	@ (8000c70 <ADC_Init+0xb8>)
 8000c44:	689b      	ldr	r3, [r3, #8]
 8000c46:	4a0a      	ldr	r2, [pc, #40]	@ (8000c70 <ADC_Init+0xb8>)
 8000c48:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8000c4c:	6093      	str	r3, [r2, #8]

    ADC1->CR2 |= ADC_CR2_ADON;                           // Set ADON bit to enable ADC
 8000c4e:	4b08      	ldr	r3, [pc, #32]	@ (8000c70 <ADC_Init+0xb8>)
 8000c50:	689b      	ldr	r3, [r3, #8]
 8000c52:	4a07      	ldr	r2, [pc, #28]	@ (8000c70 <ADC_Init+0xb8>)
 8000c54:	f043 0301 	orr.w	r3, r3, #1
 8000c58:	6093      	str	r3, [r2, #8]
    ADC1->CR2 |= ADC_CR2_SWSTART;                        // Start conversion
 8000c5a:	4b05      	ldr	r3, [pc, #20]	@ (8000c70 <ADC_Init+0xb8>)
 8000c5c:	689b      	ldr	r3, [r3, #8]
 8000c5e:	4a04      	ldr	r2, [pc, #16]	@ (8000c70 <ADC_Init+0xb8>)
 8000c60:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8000c64:	6093      	str	r3, [r2, #8]
}
 8000c66:	bf00      	nop
 8000c68:	46bd      	mov	sp, r7
 8000c6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c6e:	4770      	bx	lr
 8000c70:	40012000 	.word	0x40012000
 8000c74:	40012300 	.word	0x40012300

08000c78 <DMA_Init>:

void DMA_Init(void) {
 8000c78:	b480      	push	{r7}
 8000c7a:	af00      	add	r7, sp, #0
    DMA2_Stream0->CR &= ~DMA_SxCR_EN;                     // Disable DMA Stream 0
 8000c7c:	4b1e      	ldr	r3, [pc, #120]	@ (8000cf8 <DMA_Init+0x80>)
 8000c7e:	681b      	ldr	r3, [r3, #0]
 8000c80:	4a1d      	ldr	r2, [pc, #116]	@ (8000cf8 <DMA_Init+0x80>)
 8000c82:	f023 0301 	bic.w	r3, r3, #1
 8000c86:	6013      	str	r3, [r2, #0]
    while (DMA2_Stream0->CR & DMA_SxCR_EN);               // Wait until DMA Stream 0 is disabled
 8000c88:	bf00      	nop
 8000c8a:	4b1b      	ldr	r3, [pc, #108]	@ (8000cf8 <DMA_Init+0x80>)
 8000c8c:	681b      	ldr	r3, [r3, #0]
 8000c8e:	f003 0301 	and.w	r3, r3, #1
 8000c92:	2b00      	cmp	r3, #0
 8000c94:	d1f9      	bne.n	8000c8a <DMA_Init+0x12>

    DMA2_Stream0->CR |= (0 << DMA_SxCR_CHSEL_Pos);        // Set Channel 0 for ADC1
 8000c96:	4b18      	ldr	r3, [pc, #96]	@ (8000cf8 <DMA_Init+0x80>)
 8000c98:	4a17      	ldr	r2, [pc, #92]	@ (8000cf8 <DMA_Init+0x80>)
 8000c9a:	681b      	ldr	r3, [r3, #0]
 8000c9c:	6013      	str	r3, [r2, #0]
    DMA2_Stream0->CR &= ~DMA_SxCR_DIR;                    // Clear direction bits (Peripheral-to-Memory)
 8000c9e:	4b16      	ldr	r3, [pc, #88]	@ (8000cf8 <DMA_Init+0x80>)
 8000ca0:	681b      	ldr	r3, [r3, #0]
 8000ca2:	4a15      	ldr	r2, [pc, #84]	@ (8000cf8 <DMA_Init+0x80>)
 8000ca4:	f023 03c0 	bic.w	r3, r3, #192	@ 0xc0
 8000ca8:	6013      	str	r3, [r2, #0]
    DMA2_Stream0->CR |= (2 << DMA_SxCR_MSIZE_Pos) |       // Set memory data size to 16 bits
 8000caa:	4b13      	ldr	r3, [pc, #76]	@ (8000cf8 <DMA_Init+0x80>)
 8000cac:	681b      	ldr	r3, [r3, #0]
 8000cae:	4a12      	ldr	r2, [pc, #72]	@ (8000cf8 <DMA_Init+0x80>)
 8000cb0:	f443 43a0 	orr.w	r3, r3, #20480	@ 0x5000
 8000cb4:	6013      	str	r3, [r2, #0]
                        (2 << DMA_SxCR_PSIZE_Pos);        // Set peripheral data size to 16 bits
    DMA2_Stream0->CR |= DMA_SxCR_MINC;                    // Enable memory increment mode
 8000cb6:	4b10      	ldr	r3, [pc, #64]	@ (8000cf8 <DMA_Init+0x80>)
 8000cb8:	681b      	ldr	r3, [r3, #0]
 8000cba:	4a0f      	ldr	r2, [pc, #60]	@ (8000cf8 <DMA_Init+0x80>)
 8000cbc:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8000cc0:	6013      	str	r3, [r2, #0]
    DMA2_Stream0->CR |= DMA_SxCR_CIRC;                    // Enable circular mode
 8000cc2:	4b0d      	ldr	r3, [pc, #52]	@ (8000cf8 <DMA_Init+0x80>)
 8000cc4:	681b      	ldr	r3, [r3, #0]
 8000cc6:	4a0c      	ldr	r2, [pc, #48]	@ (8000cf8 <DMA_Init+0x80>)
 8000cc8:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000ccc:	6013      	str	r3, [r2, #0]

    DMA2_Stream0->NDTR = 2;                               // Set number of data items to transfer
 8000cce:	4b0a      	ldr	r3, [pc, #40]	@ (8000cf8 <DMA_Init+0x80>)
 8000cd0:	2202      	movs	r2, #2
 8000cd2:	605a      	str	r2, [r3, #4]
    DMA2_Stream0->PAR = (uint32_t)&ADC1->DR;              // Set peripheral address to ADC1 data register
 8000cd4:	4b08      	ldr	r3, [pc, #32]	@ (8000cf8 <DMA_Init+0x80>)
 8000cd6:	4a09      	ldr	r2, [pc, #36]	@ (8000cfc <DMA_Init+0x84>)
 8000cd8:	609a      	str	r2, [r3, #8]
    DMA2_Stream0->M0AR = (uint32_t)ADC_Buffer;            // Set memory address to ADC_Buffer
 8000cda:	4b07      	ldr	r3, [pc, #28]	@ (8000cf8 <DMA_Init+0x80>)
 8000cdc:	4a08      	ldr	r2, [pc, #32]	@ (8000d00 <DMA_Init+0x88>)
 8000cde:	60da      	str	r2, [r3, #12]
    DMA2_Stream0->CR |= DMA_SxCR_EN;                      // Enable DMA Stream 0
 8000ce0:	4b05      	ldr	r3, [pc, #20]	@ (8000cf8 <DMA_Init+0x80>)
 8000ce2:	681b      	ldr	r3, [r3, #0]
 8000ce4:	4a04      	ldr	r2, [pc, #16]	@ (8000cf8 <DMA_Init+0x80>)
 8000ce6:	f043 0301 	orr.w	r3, r3, #1
 8000cea:	6013      	str	r3, [r2, #0]
}
 8000cec:	bf00      	nop
 8000cee:	46bd      	mov	sp, r7
 8000cf0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000cf4:	4770      	bx	lr
 8000cf6:	bf00      	nop
 8000cf8:	40026410 	.word	0x40026410
 8000cfc:	4001204c 	.word	0x4001204c
 8000d00:	200001e4 	.word	0x200001e4

08000d04 <GPIO_Init>:
 *      Author: esthe
 */

#include "gpio.h"

void GPIO_Init(void) {
 8000d04:	b480      	push	{r7}
 8000d06:	af00      	add	r7, sp, #0
    // Initialize PA0 as Moisture Sensor Sensor (ANALOG)
    SET_PIN_MODE(GPIOA, 0, GPIO_MODE_ANALOG);
 8000d08:	4b5e      	ldr	r3, [pc, #376]	@ (8000e84 <GPIO_Init+0x180>)
 8000d0a:	681b      	ldr	r3, [r3, #0]
 8000d0c:	4a5d      	ldr	r2, [pc, #372]	@ (8000e84 <GPIO_Init+0x180>)
 8000d0e:	f043 0303 	orr.w	r3, r3, #3
 8000d12:	6013      	str	r3, [r2, #0]

    // Initialize PA1 as Light Sensor (ANALOG)
    SET_PIN_MODE(GPIOA, 1, GPIO_MODE_ANALOG);
 8000d14:	4b5b      	ldr	r3, [pc, #364]	@ (8000e84 <GPIO_Init+0x180>)
 8000d16:	681b      	ldr	r3, [r3, #0]
 8000d18:	4a5a      	ldr	r2, [pc, #360]	@ (8000e84 <GPIO_Init+0x180>)
 8000d1a:	f043 030c 	orr.w	r3, r3, #12
 8000d1e:	6013      	str	r3, [r2, #0]

    // Configure PB6 for LCD SCL (I2C1)
    SET_PIN_MODE(GPIOB, 6, GPIO_MODE_AF);                  // Alternate Function Mode
 8000d20:	4b59      	ldr	r3, [pc, #356]	@ (8000e88 <GPIO_Init+0x184>)
 8000d22:	681b      	ldr	r3, [r3, #0]
 8000d24:	4a58      	ldr	r2, [pc, #352]	@ (8000e88 <GPIO_Init+0x184>)
 8000d26:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8000d2a:	6013      	str	r3, [r2, #0]
    SET_PIN_OTYPE(GPIOB, 6, GPIO_OTYPE_OPENDRAIN);         // Open-drain
 8000d2c:	4b56      	ldr	r3, [pc, #344]	@ (8000e88 <GPIO_Init+0x184>)
 8000d2e:	685b      	ldr	r3, [r3, #4]
 8000d30:	4a55      	ldr	r2, [pc, #340]	@ (8000e88 <GPIO_Init+0x184>)
 8000d32:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000d36:	6053      	str	r3, [r2, #4]
    SET_PIN_SPEED(GPIOB, 6, GPIO_OSPEED_HIGH);             // High Speed
 8000d38:	4b53      	ldr	r3, [pc, #332]	@ (8000e88 <GPIO_Init+0x184>)
 8000d3a:	689b      	ldr	r3, [r3, #8]
 8000d3c:	4a52      	ldr	r2, [pc, #328]	@ (8000e88 <GPIO_Init+0x184>)
 8000d3e:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8000d42:	6093      	str	r3, [r2, #8]
    SET_PIN_AF(GPIOB, 6, GPIO_AF4);                        // AF4
 8000d44:	4b50      	ldr	r3, [pc, #320]	@ (8000e88 <GPIO_Init+0x184>)
 8000d46:	6a1b      	ldr	r3, [r3, #32]
 8000d48:	4a4f      	ldr	r2, [pc, #316]	@ (8000e88 <GPIO_Init+0x184>)
 8000d4a:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 8000d4e:	6213      	str	r3, [r2, #32]
    SET_PIN_PUPD(GPIOB, 6, GPIO_PUPD_PULLUP);              // Pull-up
 8000d50:	4b4d      	ldr	r3, [pc, #308]	@ (8000e88 <GPIO_Init+0x184>)
 8000d52:	68db      	ldr	r3, [r3, #12]
 8000d54:	4a4c      	ldr	r2, [pc, #304]	@ (8000e88 <GPIO_Init+0x184>)
 8000d56:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8000d5a:	60d3      	str	r3, [r2, #12]

    // Configure PB7 for LCD SDA (I2C1)
    SET_PIN_MODE(GPIOB, 7, GPIO_MODE_AF);                  // Alternate Function Mode
 8000d5c:	4b4a      	ldr	r3, [pc, #296]	@ (8000e88 <GPIO_Init+0x184>)
 8000d5e:	681b      	ldr	r3, [r3, #0]
 8000d60:	4a49      	ldr	r2, [pc, #292]	@ (8000e88 <GPIO_Init+0x184>)
 8000d62:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8000d66:	6013      	str	r3, [r2, #0]
    SET_PIN_OTYPE(GPIOB, 7, GPIO_OTYPE_OPENDRAIN);         // Open-drain
 8000d68:	4b47      	ldr	r3, [pc, #284]	@ (8000e88 <GPIO_Init+0x184>)
 8000d6a:	685b      	ldr	r3, [r3, #4]
 8000d6c:	4a46      	ldr	r2, [pc, #280]	@ (8000e88 <GPIO_Init+0x184>)
 8000d6e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000d72:	6053      	str	r3, [r2, #4]
    SET_PIN_SPEED(GPIOB, 7, GPIO_OSPEED_HIGH);             // High Speed
 8000d74:	4b44      	ldr	r3, [pc, #272]	@ (8000e88 <GPIO_Init+0x184>)
 8000d76:	689b      	ldr	r3, [r3, #8]
 8000d78:	4a43      	ldr	r2, [pc, #268]	@ (8000e88 <GPIO_Init+0x184>)
 8000d7a:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8000d7e:	6093      	str	r3, [r2, #8]
    SET_PIN_AF(GPIOB, 7, GPIO_AF4);                        // AF4
 8000d80:	4b41      	ldr	r3, [pc, #260]	@ (8000e88 <GPIO_Init+0x184>)
 8000d82:	6a1b      	ldr	r3, [r3, #32]
 8000d84:	4a40      	ldr	r2, [pc, #256]	@ (8000e88 <GPIO_Init+0x184>)
 8000d86:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8000d8a:	6213      	str	r3, [r2, #32]
    SET_PIN_PUPD(GPIOB, 7, GPIO_PUPD_PULLUP);              // Pull-up
 8000d8c:	4b3e      	ldr	r3, [pc, #248]	@ (8000e88 <GPIO_Init+0x184>)
 8000d8e:	68db      	ldr	r3, [r3, #12]
 8000d90:	4a3d      	ldr	r2, [pc, #244]	@ (8000e88 <GPIO_Init+0x184>)
 8000d92:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8000d96:	60d3      	str	r3, [r2, #12]

    // Configure PA8 for Temperature Sensor SCL (I2C3)
    SET_PIN_MODE(GPIOA, 8, GPIO_MODE_AF);                  // Alternate Function Mode
 8000d98:	4b3a      	ldr	r3, [pc, #232]	@ (8000e84 <GPIO_Init+0x180>)
 8000d9a:	681b      	ldr	r3, [r3, #0]
 8000d9c:	4a39      	ldr	r2, [pc, #228]	@ (8000e84 <GPIO_Init+0x180>)
 8000d9e:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8000da2:	6013      	str	r3, [r2, #0]
    SET_PIN_OTYPE(GPIOA, 8, GPIO_OTYPE_OPENDRAIN);         // Open-drain
 8000da4:	4b37      	ldr	r3, [pc, #220]	@ (8000e84 <GPIO_Init+0x180>)
 8000da6:	685b      	ldr	r3, [r3, #4]
 8000da8:	4a36      	ldr	r2, [pc, #216]	@ (8000e84 <GPIO_Init+0x180>)
 8000daa:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000dae:	6053      	str	r3, [r2, #4]
    SET_PIN_SPEED(GPIOA, 8, GPIO_OSPEED_HIGH);             // High Speed
 8000db0:	4b34      	ldr	r3, [pc, #208]	@ (8000e84 <GPIO_Init+0x180>)
 8000db2:	689b      	ldr	r3, [r3, #8]
 8000db4:	4a33      	ldr	r2, [pc, #204]	@ (8000e84 <GPIO_Init+0x180>)
 8000db6:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8000dba:	6093      	str	r3, [r2, #8]
    SET_PIN_AF(GPIOA, 8, GPIO_AF4);                        // AF4
 8000dbc:	4b31      	ldr	r3, [pc, #196]	@ (8000e84 <GPIO_Init+0x180>)
 8000dbe:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8000dc0:	4a30      	ldr	r2, [pc, #192]	@ (8000e84 <GPIO_Init+0x180>)
 8000dc2:	f043 0304 	orr.w	r3, r3, #4
 8000dc6:	6253      	str	r3, [r2, #36]	@ 0x24
    SET_PIN_PUPD(GPIOA, 8, GPIO_PUPD_PULLUP);              // Pull-up
 8000dc8:	4b2e      	ldr	r3, [pc, #184]	@ (8000e84 <GPIO_Init+0x180>)
 8000dca:	68db      	ldr	r3, [r3, #12]
 8000dcc:	4a2d      	ldr	r2, [pc, #180]	@ (8000e84 <GPIO_Init+0x180>)
 8000dce:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8000dd2:	60d3      	str	r3, [r2, #12]

    // Configure PC9 for Temperature Sensor SDL (I2C3)
    SET_PIN_MODE(GPIOC, 9, GPIO_MODE_AF);                  // Alternate Function Mode
 8000dd4:	4b2d      	ldr	r3, [pc, #180]	@ (8000e8c <GPIO_Init+0x188>)
 8000dd6:	681b      	ldr	r3, [r3, #0]
 8000dd8:	4a2c      	ldr	r2, [pc, #176]	@ (8000e8c <GPIO_Init+0x188>)
 8000dda:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8000dde:	6013      	str	r3, [r2, #0]
    SET_PIN_OTYPE(GPIOC, 9, GPIO_OTYPE_OPENDRAIN);         // Open-drain
 8000de0:	4b2a      	ldr	r3, [pc, #168]	@ (8000e8c <GPIO_Init+0x188>)
 8000de2:	685b      	ldr	r3, [r3, #4]
 8000de4:	4a29      	ldr	r2, [pc, #164]	@ (8000e8c <GPIO_Init+0x188>)
 8000de6:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8000dea:	6053      	str	r3, [r2, #4]
    SET_PIN_SPEED(GPIOC, 9, GPIO_OSPEED_HIGH);             // High Speed
 8000dec:	4b27      	ldr	r3, [pc, #156]	@ (8000e8c <GPIO_Init+0x188>)
 8000dee:	689b      	ldr	r3, [r3, #8]
 8000df0:	4a26      	ldr	r2, [pc, #152]	@ (8000e8c <GPIO_Init+0x188>)
 8000df2:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8000df6:	6093      	str	r3, [r2, #8]
    SET_PIN_AF(GPIOC, 9, GPIO_AF4);                        // AF4
 8000df8:	4b24      	ldr	r3, [pc, #144]	@ (8000e8c <GPIO_Init+0x188>)
 8000dfa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8000dfc:	4a23      	ldr	r2, [pc, #140]	@ (8000e8c <GPIO_Init+0x188>)
 8000dfe:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000e02:	6253      	str	r3, [r2, #36]	@ 0x24
    SET_PIN_PUPD(GPIOC, 9, GPIO_PUPD_PULLUP);              // Pull-up
 8000e04:	4b21      	ldr	r3, [pc, #132]	@ (8000e8c <GPIO_Init+0x188>)
 8000e06:	68db      	ldr	r3, [r3, #12]
 8000e08:	4a20      	ldr	r2, [pc, #128]	@ (8000e8c <GPIO_Init+0x188>)
 8000e0a:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8000e0e:	60d3      	str	r3, [r2, #12]

    // Configure PA9 for UART Transmit
    SET_PIN_MODE(GPIOA, 9, GPIO_MODE_AF);                  // Alternate Function Mode
 8000e10:	4b1c      	ldr	r3, [pc, #112]	@ (8000e84 <GPIO_Init+0x180>)
 8000e12:	681b      	ldr	r3, [r3, #0]
 8000e14:	4a1b      	ldr	r2, [pc, #108]	@ (8000e84 <GPIO_Init+0x180>)
 8000e16:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8000e1a:	6013      	str	r3, [r2, #0]
    SET_PIN_OTYPE(GPIOA, 9, GPIO_OTYPE_PUSHPULL);          // Push-pull
 8000e1c:	4b19      	ldr	r3, [pc, #100]	@ (8000e84 <GPIO_Init+0x180>)
 8000e1e:	4a19      	ldr	r2, [pc, #100]	@ (8000e84 <GPIO_Init+0x180>)
 8000e20:	685b      	ldr	r3, [r3, #4]
 8000e22:	6053      	str	r3, [r2, #4]
    SET_PIN_SPEED(GPIOA, 9, GPIO_OSPEED_HIGH);             // High Speed
 8000e24:	4b17      	ldr	r3, [pc, #92]	@ (8000e84 <GPIO_Init+0x180>)
 8000e26:	689b      	ldr	r3, [r3, #8]
 8000e28:	4a16      	ldr	r2, [pc, #88]	@ (8000e84 <GPIO_Init+0x180>)
 8000e2a:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8000e2e:	6093      	str	r3, [r2, #8]
    SET_PIN_AF(GPIOA, 9, GPIO_AF7);                        // AF7
 8000e30:	4b14      	ldr	r3, [pc, #80]	@ (8000e84 <GPIO_Init+0x180>)
 8000e32:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8000e34:	4a13      	ldr	r2, [pc, #76]	@ (8000e84 <GPIO_Init+0x180>)
 8000e36:	f043 0370 	orr.w	r3, r3, #112	@ 0x70
 8000e3a:	6253      	str	r3, [r2, #36]	@ 0x24
    SET_PIN_PUPD(GPIOA, 9, GPIO_PUPD_NONE);                // No pull-up, pull-down
 8000e3c:	4b11      	ldr	r3, [pc, #68]	@ (8000e84 <GPIO_Init+0x180>)
 8000e3e:	4a11      	ldr	r2, [pc, #68]	@ (8000e84 <GPIO_Init+0x180>)
 8000e40:	68db      	ldr	r3, [r3, #12]
 8000e42:	60d3      	str	r3, [r2, #12]

    // Configure PA10 for UART Receive
    SET_PIN_MODE(GPIOA, 10, GPIO_MODE_AF);                 // Alternate Function Mode
 8000e44:	4b0f      	ldr	r3, [pc, #60]	@ (8000e84 <GPIO_Init+0x180>)
 8000e46:	681b      	ldr	r3, [r3, #0]
 8000e48:	4a0e      	ldr	r2, [pc, #56]	@ (8000e84 <GPIO_Init+0x180>)
 8000e4a:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8000e4e:	6013      	str	r3, [r2, #0]
    SET_PIN_OTYPE(GPIOA, 10, GPIO_OTYPE_PUSHPULL);         // Push-pull
 8000e50:	4b0c      	ldr	r3, [pc, #48]	@ (8000e84 <GPIO_Init+0x180>)
 8000e52:	4a0c      	ldr	r2, [pc, #48]	@ (8000e84 <GPIO_Init+0x180>)
 8000e54:	685b      	ldr	r3, [r3, #4]
 8000e56:	6053      	str	r3, [r2, #4]
    SET_PIN_SPEED(GPIOA, 10, GPIO_OSPEED_HIGH);            // High Speed
 8000e58:	4b0a      	ldr	r3, [pc, #40]	@ (8000e84 <GPIO_Init+0x180>)
 8000e5a:	689b      	ldr	r3, [r3, #8]
 8000e5c:	4a09      	ldr	r2, [pc, #36]	@ (8000e84 <GPIO_Init+0x180>)
 8000e5e:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8000e62:	6093      	str	r3, [r2, #8]
    SET_PIN_AF(GPIOA, 10, GPIO_AF7);                       // AF7
 8000e64:	4b07      	ldr	r3, [pc, #28]	@ (8000e84 <GPIO_Init+0x180>)
 8000e66:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8000e68:	4a06      	ldr	r2, [pc, #24]	@ (8000e84 <GPIO_Init+0x180>)
 8000e6a:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 8000e6e:	6253      	str	r3, [r2, #36]	@ 0x24
    SET_PIN_PUPD(GPIOA, 10, GPIO_PUPD_NONE);               // No pull-up, pull-down
 8000e70:	4b04      	ldr	r3, [pc, #16]	@ (8000e84 <GPIO_Init+0x180>)
 8000e72:	4a04      	ldr	r2, [pc, #16]	@ (8000e84 <GPIO_Init+0x180>)
 8000e74:	68db      	ldr	r3, [r3, #12]
 8000e76:	60d3      	str	r3, [r2, #12]
}
 8000e78:	bf00      	nop
 8000e7a:	46bd      	mov	sp, r7
 8000e7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e80:	4770      	bx	lr
 8000e82:	bf00      	nop
 8000e84:	40020000 	.word	0x40020000
 8000e88:	40020400 	.word	0x40020400
 8000e8c:	40020800 	.word	0x40020800

08000e90 <I2C1_Init>:
 *      Author: esthe
 */

#include "i2c.h"

void I2C1_Init(void) {
 8000e90:	b480      	push	{r7}
 8000e92:	af00      	add	r7, sp, #0
    I2C1->CR1 &= ~I2C_CR1_PE;                            // Turn off I2C1
 8000e94:	4b13      	ldr	r3, [pc, #76]	@ (8000ee4 <I2C1_Init+0x54>)
 8000e96:	681b      	ldr	r3, [r3, #0]
 8000e98:	4a12      	ldr	r2, [pc, #72]	@ (8000ee4 <I2C1_Init+0x54>)
 8000e9a:	f023 0301 	bic.w	r3, r3, #1
 8000e9e:	6013      	str	r3, [r2, #0]

    I2C1->CR1 = I2C_CR1_SWRST;                           // Reset I2C1
 8000ea0:	4b10      	ldr	r3, [pc, #64]	@ (8000ee4 <I2C1_Init+0x54>)
 8000ea2:	f44f 4200 	mov.w	r2, #32768	@ 0x8000
 8000ea6:	601a      	str	r2, [r3, #0]
    I2C1->CR1 &= ~I2C_CR1_SWRST;                         // Release reset
 8000ea8:	4b0e      	ldr	r3, [pc, #56]	@ (8000ee4 <I2C1_Init+0x54>)
 8000eaa:	681b      	ldr	r3, [r3, #0]
 8000eac:	4a0d      	ldr	r2, [pc, #52]	@ (8000ee4 <I2C1_Init+0x54>)
 8000eae:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 8000eb2:	6013      	str	r3, [r2, #0]

    I2C1->CR2 |= 0x10;                                   // Set the peripheral clock frequency (16 MHz)
 8000eb4:	4b0b      	ldr	r3, [pc, #44]	@ (8000ee4 <I2C1_Init+0x54>)
 8000eb6:	685b      	ldr	r3, [r3, #4]
 8000eb8:	4a0a      	ldr	r2, [pc, #40]	@ (8000ee4 <I2C1_Init+0x54>)
 8000eba:	f043 0310 	orr.w	r3, r3, #16
 8000ebe:	6053      	str	r3, [r2, #4]

    I2C1->CCR = 0x50;                                    // Set clock control register value
 8000ec0:	4b08      	ldr	r3, [pc, #32]	@ (8000ee4 <I2C1_Init+0x54>)
 8000ec2:	2250      	movs	r2, #80	@ 0x50
 8000ec4:	61da      	str	r2, [r3, #28]
    I2C1->TRISE = 0x11;                                  // Set rise time register value
 8000ec6:	4b07      	ldr	r3, [pc, #28]	@ (8000ee4 <I2C1_Init+0x54>)
 8000ec8:	2211      	movs	r2, #17
 8000eca:	621a      	str	r2, [r3, #32]

    I2C1->CR1 |= I2C_CR1_PE;                             // Enable I2C peripheral
 8000ecc:	4b05      	ldr	r3, [pc, #20]	@ (8000ee4 <I2C1_Init+0x54>)
 8000ece:	681b      	ldr	r3, [r3, #0]
 8000ed0:	4a04      	ldr	r2, [pc, #16]	@ (8000ee4 <I2C1_Init+0x54>)
 8000ed2:	f043 0301 	orr.w	r3, r3, #1
 8000ed6:	6013      	str	r3, [r2, #0]
}
 8000ed8:	bf00      	nop
 8000eda:	46bd      	mov	sp, r7
 8000edc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ee0:	4770      	bx	lr
 8000ee2:	bf00      	nop
 8000ee4:	40005400 	.word	0x40005400

08000ee8 <I2C3_Init>:

void I2C3_Init(void) {
 8000ee8:	b480      	push	{r7}
 8000eea:	af00      	add	r7, sp, #0
    // Turn off I2C3
    I2C3->CR1 &= ~I2C_CR1_PE;
 8000eec:	4b13      	ldr	r3, [pc, #76]	@ (8000f3c <I2C3_Init+0x54>)
 8000eee:	681b      	ldr	r3, [r3, #0]
 8000ef0:	4a12      	ldr	r2, [pc, #72]	@ (8000f3c <I2C3_Init+0x54>)
 8000ef2:	f023 0301 	bic.w	r3, r3, #1
 8000ef6:	6013      	str	r3, [r2, #0]

    // Reset I2C3
    I2C3->CR1 = I2C_CR1_SWRST;
 8000ef8:	4b10      	ldr	r3, [pc, #64]	@ (8000f3c <I2C3_Init+0x54>)
 8000efa:	f44f 4200 	mov.w	r2, #32768	@ 0x8000
 8000efe:	601a      	str	r2, [r3, #0]
    I2C3->CR1 &= ~I2C_CR1_SWRST;
 8000f00:	4b0e      	ldr	r3, [pc, #56]	@ (8000f3c <I2C3_Init+0x54>)
 8000f02:	681b      	ldr	r3, [r3, #0]
 8000f04:	4a0d      	ldr	r2, [pc, #52]	@ (8000f3c <I2C3_Init+0x54>)
 8000f06:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 8000f0a:	6013      	str	r3, [r2, #0]

    // Set I2C3 parameters
    I2C3->CR2 |= 0x10;                       // Set the peripheral clock frequency (assuming 16 MHz here)
 8000f0c:	4b0b      	ldr	r3, [pc, #44]	@ (8000f3c <I2C3_Init+0x54>)
 8000f0e:	685b      	ldr	r3, [r3, #4]
 8000f10:	4a0a      	ldr	r2, [pc, #40]	@ (8000f3c <I2C3_Init+0x54>)
 8000f12:	f043 0310 	orr.w	r3, r3, #16
 8000f16:	6053      	str	r3, [r2, #4]
    I2C3->CCR = 0x50;                        // Set the I2C3 clock control register
 8000f18:	4b08      	ldr	r3, [pc, #32]	@ (8000f3c <I2C3_Init+0x54>)
 8000f1a:	2250      	movs	r2, #80	@ 0x50
 8000f1c:	61da      	str	r2, [r3, #28]
    I2C3->TRISE = 0x11;                      // Set the rise time
 8000f1e:	4b07      	ldr	r3, [pc, #28]	@ (8000f3c <I2C3_Init+0x54>)
 8000f20:	2211      	movs	r2, #17
 8000f22:	621a      	str	r2, [r3, #32]

    I2C3->CR1 |= I2C_CR1_PE;                 // Enable I2C peripheral
 8000f24:	4b05      	ldr	r3, [pc, #20]	@ (8000f3c <I2C3_Init+0x54>)
 8000f26:	681b      	ldr	r3, [r3, #0]
 8000f28:	4a04      	ldr	r2, [pc, #16]	@ (8000f3c <I2C3_Init+0x54>)
 8000f2a:	f043 0301 	orr.w	r3, r3, #1
 8000f2e:	6013      	str	r3, [r2, #0]
}
 8000f30:	bf00      	nop
 8000f32:	46bd      	mov	sp, r7
 8000f34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f38:	4770      	bx	lr
 8000f3a:	bf00      	nop
 8000f3c:	40005c00 	.word	0x40005c00

08000f40 <Clock_Init>:
 *      Author: esthe
 */

#include "init.h"

void Clock_Init(void) {
 8000f40:	b480      	push	{r7}
 8000f42:	af00      	add	r7, sp, #0
    // Enable clocks for GPIO ports
    RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN;  // Enable GPIOA clock
 8000f44:	4b2a      	ldr	r3, [pc, #168]	@ (8000ff0 <Clock_Init+0xb0>)
 8000f46:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000f48:	4a29      	ldr	r2, [pc, #164]	@ (8000ff0 <Clock_Init+0xb0>)
 8000f4a:	f043 0301 	orr.w	r3, r3, #1
 8000f4e:	6313      	str	r3, [r2, #48]	@ 0x30
    RCC->AHB1ENR |= RCC_AHB1ENR_GPIOBEN;  // Enable GPIOB clock
 8000f50:	4b27      	ldr	r3, [pc, #156]	@ (8000ff0 <Clock_Init+0xb0>)
 8000f52:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000f54:	4a26      	ldr	r2, [pc, #152]	@ (8000ff0 <Clock_Init+0xb0>)
 8000f56:	f043 0302 	orr.w	r3, r3, #2
 8000f5a:	6313      	str	r3, [r2, #48]	@ 0x30
    RCC->AHB1ENR |= RCC_AHB1ENR_GPIOCEN;  // Enable GPIOC clock
 8000f5c:	4b24      	ldr	r3, [pc, #144]	@ (8000ff0 <Clock_Init+0xb0>)
 8000f5e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000f60:	4a23      	ldr	r2, [pc, #140]	@ (8000ff0 <Clock_Init+0xb0>)
 8000f62:	f043 0304 	orr.w	r3, r3, #4
 8000f66:	6313      	str	r3, [r2, #48]	@ 0x30

    // Enable clock for ADC
    RCC->APB2ENR |= RCC_APB2ENR_ADC1EN;    // Enable ADC1 clock
 8000f68:	4b21      	ldr	r3, [pc, #132]	@ (8000ff0 <Clock_Init+0xb0>)
 8000f6a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000f6c:	4a20      	ldr	r2, [pc, #128]	@ (8000ff0 <Clock_Init+0xb0>)
 8000f6e:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000f72:	6453      	str	r3, [r2, #68]	@ 0x44

    // Enable clock for DMA
    RCC->AHB1ENR |= RCC_AHB1ENR_DMA2EN;    // Enable DMA2 clock
 8000f74:	4b1e      	ldr	r3, [pc, #120]	@ (8000ff0 <Clock_Init+0xb0>)
 8000f76:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000f78:	4a1d      	ldr	r2, [pc, #116]	@ (8000ff0 <Clock_Init+0xb0>)
 8000f7a:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8000f7e:	6313      	str	r3, [r2, #48]	@ 0x30

    // Enable clocks for I2C peripherals
    RCC->APB1ENR |= RCC_APB1ENR_I2C1EN;    // Enable I2C1 clock
 8000f80:	4b1b      	ldr	r3, [pc, #108]	@ (8000ff0 <Clock_Init+0xb0>)
 8000f82:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000f84:	4a1a      	ldr	r2, [pc, #104]	@ (8000ff0 <Clock_Init+0xb0>)
 8000f86:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8000f8a:	6413      	str	r3, [r2, #64]	@ 0x40
    RCC->APB1ENR |= RCC_APB1ENR_I2C3EN;    // Enable I2C3 clock
 8000f8c:	4b18      	ldr	r3, [pc, #96]	@ (8000ff0 <Clock_Init+0xb0>)
 8000f8e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000f90:	4a17      	ldr	r2, [pc, #92]	@ (8000ff0 <Clock_Init+0xb0>)
 8000f92:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8000f96:	6413      	str	r3, [r2, #64]	@ 0x40

    // Enable clock for UART
    RCC->APB2ENR |= RCC_APB2ENR_USART1EN;  // Enable USART1 clock
 8000f98:	4b15      	ldr	r3, [pc, #84]	@ (8000ff0 <Clock_Init+0xb0>)
 8000f9a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000f9c:	4a14      	ldr	r2, [pc, #80]	@ (8000ff0 <Clock_Init+0xb0>)
 8000f9e:	f043 0310 	orr.w	r3, r3, #16
 8000fa2:	6453      	str	r3, [r2, #68]	@ 0x44

    // Configure TIM2
    RCC->APB1ENR |= RCC_APB1ENR_TIM2EN;     // Enable TIM2 clock
 8000fa4:	4b12      	ldr	r3, [pc, #72]	@ (8000ff0 <Clock_Init+0xb0>)
 8000fa6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000fa8:	4a11      	ldr	r2, [pc, #68]	@ (8000ff0 <Clock_Init+0xb0>)
 8000faa:	f043 0301 	orr.w	r3, r3, #1
 8000fae:	6413      	str	r3, [r2, #64]	@ 0x40
    TIM2->PSC = 16000 - 1;                  // Set prescaler to 16000
 8000fb0:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8000fb4:	f643 627f 	movw	r2, #15999	@ 0x3e7f
 8000fb8:	629a      	str	r2, [r3, #40]	@ 0x28
    TIM2->ARR = 10000 - 1;                  // Set auto-reload value to 10000
 8000fba:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8000fbe:	f242 720f 	movw	r2, #9999	@ 0x270f
 8000fc2:	62da      	str	r2, [r3, #44]	@ 0x2c
    TIM2->CR2 |= TIM_CR2_MMS_1;             // Set Master Mode Selection
 8000fc4:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8000fc8:	685b      	ldr	r3, [r3, #4]
 8000fca:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8000fce:	f043 0320 	orr.w	r3, r3, #32
 8000fd2:	6053      	str	r3, [r2, #4]
    TIM2->CR1 |= TIM_CR1_CEN;               // Enable the timer
 8000fd4:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8000fd8:	681b      	ldr	r3, [r3, #0]
 8000fda:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8000fde:	f043 0301 	orr.w	r3, r3, #1
 8000fe2:	6013      	str	r3, [r2, #0]
}
 8000fe4:	bf00      	nop
 8000fe6:	46bd      	mov	sp, r7
 8000fe8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fec:	4770      	bx	lr
 8000fee:	bf00      	nop
 8000ff0:	40023800 	.word	0x40023800

08000ff4 <delay_ms>:
#define CLOCK_FREQUENCY 16000000UL // 16 MHz
#define CYCLES_PER_MS (CLOCK_FREQUENCY / 1000)

static inline void delay_ms(uint32_t ms);

static inline void delay_ms(uint32_t ms) {
 8000ff4:	b480      	push	{r7}
 8000ff6:	b085      	sub	sp, #20
 8000ff8:	af00      	add	r7, sp, #0
 8000ffa:	6078      	str	r0, [r7, #4]
    uint32_t total_cycles = ms * CYCLES_PER_MS;
 8000ffc:	687b      	ldr	r3, [r7, #4]
 8000ffe:	f44f 527a 	mov.w	r2, #16000	@ 0x3e80
 8001002:	fb02 f303 	mul.w	r3, r2, r3
 8001006:	60fb      	str	r3, [r7, #12]
    while (total_cycles--) {
 8001008:	e000      	b.n	800100c <delay_ms+0x18>
        __asm("nop");
 800100a:	bf00      	nop
    while (total_cycles--) {
 800100c:	68fb      	ldr	r3, [r7, #12]
 800100e:	1e5a      	subs	r2, r3, #1
 8001010:	60fa      	str	r2, [r7, #12]
 8001012:	2b00      	cmp	r3, #0
 8001014:	d1f9      	bne.n	800100a <delay_ms+0x16>
    }
}
 8001016:	bf00      	nop
 8001018:	bf00      	nop
 800101a:	3714      	adds	r7, #20
 800101c:	46bd      	mov	sp, r7
 800101e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001022:	4770      	bx	lr

08001024 <LCD_Send_Command>:
void LCD_Init(void);
void LCD_Send_String (char *str);
void LCD_Clear_Display (void);
void LCD_Cursor_Position(int row, int col);

void LCD_Send_Command(char cmd) {
 8001024:	b480      	push	{r7}
 8001026:	b087      	sub	sp, #28
 8001028:	af00      	add	r7, sp, #0
 800102a:	4603      	mov	r3, r0
 800102c:	71fb      	strb	r3, [r7, #7]
    uint16_t reg;
    char data = cmd;
 800102e:	79fb      	ldrb	r3, [r7, #7]
 8001030:	74fb      	strb	r3, [r7, #19]

    char data_u, data_l;
    uint8_t data_t[4];
    data_u = (data&0xf0);
 8001032:	7cfb      	ldrb	r3, [r7, #19]
 8001034:	f023 030f 	bic.w	r3, r3, #15
 8001038:	74bb      	strb	r3, [r7, #18]
    data_l = ((data<<4)&0xf0);
 800103a:	7cfb      	ldrb	r3, [r7, #19]
 800103c:	011b      	lsls	r3, r3, #4
 800103e:	747b      	strb	r3, [r7, #17]
    data_t[0] = data_u|0x0C;  //en=1, rs=0
 8001040:	7cbb      	ldrb	r3, [r7, #18]
 8001042:	f043 030c 	orr.w	r3, r3, #12
 8001046:	b2db      	uxtb	r3, r3
 8001048:	723b      	strb	r3, [r7, #8]
    data_t[1] = data_u|0x08;  //en=0, rs=0
 800104a:	7cbb      	ldrb	r3, [r7, #18]
 800104c:	f043 0308 	orr.w	r3, r3, #8
 8001050:	b2db      	uxtb	r3, r3
 8001052:	727b      	strb	r3, [r7, #9]
    data_t[2] = data_l|0x0C;  //en=1, rs=0
 8001054:	7c7b      	ldrb	r3, [r7, #17]
 8001056:	f043 030c 	orr.w	r3, r3, #12
 800105a:	b2db      	uxtb	r3, r3
 800105c:	72bb      	strb	r3, [r7, #10]
    data_t[3] = data_l|0x08;  //en=0, rs=0
 800105e:	7c7b      	ldrb	r3, [r7, #17]
 8001060:	f043 0308 	orr.w	r3, r3, #8
 8001064:	b2db      	uxtb	r3, r3
 8001066:	72fb      	strb	r3, [r7, #11]

    // START CONDITION
    while (I2C1->SR2 & I2C_SR2_BUSY);
 8001068:	bf00      	nop
 800106a:	4b24      	ldr	r3, [pc, #144]	@ (80010fc <LCD_Send_Command+0xd8>)
 800106c:	699b      	ldr	r3, [r3, #24]
 800106e:	f003 0302 	and.w	r3, r3, #2
 8001072:	2b00      	cmp	r3, #0
 8001074:	d1f9      	bne.n	800106a <LCD_Send_Command+0x46>
    I2C1->CR1 |= I2C_CR1_START;
 8001076:	4b21      	ldr	r3, [pc, #132]	@ (80010fc <LCD_Send_Command+0xd8>)
 8001078:	681b      	ldr	r3, [r3, #0]
 800107a:	4a20      	ldr	r2, [pc, #128]	@ (80010fc <LCD_Send_Command+0xd8>)
 800107c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001080:	6013      	str	r3, [r2, #0]
    while (!(I2C1->SR1 & I2C_SR1_SB));
 8001082:	bf00      	nop
 8001084:	4b1d      	ldr	r3, [pc, #116]	@ (80010fc <LCD_Send_Command+0xd8>)
 8001086:	695b      	ldr	r3, [r3, #20]
 8001088:	f003 0301 	and.w	r3, r3, #1
 800108c:	2b00      	cmp	r3, #0
 800108e:	d0f9      	beq.n	8001084 <LCD_Send_Command+0x60>

    // SLAVE ADDRESS
    I2C1->DR = 0x4E; // 0 is write 0x4E for LCD 0x5C << 1 for sensor
 8001090:	4b1a      	ldr	r3, [pc, #104]	@ (80010fc <LCD_Send_Command+0xd8>)
 8001092:	224e      	movs	r2, #78	@ 0x4e
 8001094:	611a      	str	r2, [r3, #16]
    while (!(I2C1->SR1 & I2C_SR1_ADDR));
 8001096:	bf00      	nop
 8001098:	4b18      	ldr	r3, [pc, #96]	@ (80010fc <LCD_Send_Command+0xd8>)
 800109a:	695b      	ldr	r3, [r3, #20]
 800109c:	f003 0302 	and.w	r3, r3, #2
 80010a0:	2b00      	cmp	r3, #0
 80010a2:	d0f9      	beq.n	8001098 <LCD_Send_Command+0x74>
    reg = I2C1->SR1 | I2C1->SR2;
 80010a4:	4b15      	ldr	r3, [pc, #84]	@ (80010fc <LCD_Send_Command+0xd8>)
 80010a6:	695b      	ldr	r3, [r3, #20]
 80010a8:	b29a      	uxth	r2, r3
 80010aa:	4b14      	ldr	r3, [pc, #80]	@ (80010fc <LCD_Send_Command+0xd8>)
 80010ac:	699b      	ldr	r3, [r3, #24]
 80010ae:	b29b      	uxth	r3, r3
 80010b0:	4313      	orrs	r3, r2
 80010b2:	81fb      	strh	r3, [r7, #14]

    for (int i = 0; i < 4; i++) {
 80010b4:	2300      	movs	r3, #0
 80010b6:	617b      	str	r3, [r7, #20]
 80010b8:	e010      	b.n	80010dc <LCD_Send_Command+0xb8>
        I2C1->DR = data_t[i];
 80010ba:	f107 0208 	add.w	r2, r7, #8
 80010be:	697b      	ldr	r3, [r7, #20]
 80010c0:	4413      	add	r3, r2
 80010c2:	781a      	ldrb	r2, [r3, #0]
 80010c4:	4b0d      	ldr	r3, [pc, #52]	@ (80010fc <LCD_Send_Command+0xd8>)
 80010c6:	611a      	str	r2, [r3, #16]
        while(!(I2C1 -> SR1 & I2C_SR1_BTF));
 80010c8:	bf00      	nop
 80010ca:	4b0c      	ldr	r3, [pc, #48]	@ (80010fc <LCD_Send_Command+0xd8>)
 80010cc:	695b      	ldr	r3, [r3, #20]
 80010ce:	f003 0304 	and.w	r3, r3, #4
 80010d2:	2b00      	cmp	r3, #0
 80010d4:	d0f9      	beq.n	80010ca <LCD_Send_Command+0xa6>
    for (int i = 0; i < 4; i++) {
 80010d6:	697b      	ldr	r3, [r7, #20]
 80010d8:	3301      	adds	r3, #1
 80010da:	617b      	str	r3, [r7, #20]
 80010dc:	697b      	ldr	r3, [r7, #20]
 80010de:	2b03      	cmp	r3, #3
 80010e0:	ddeb      	ble.n	80010ba <LCD_Send_Command+0x96>
    }

    // Send a stop signal
    I2C1->CR1 |= I2C_CR1_STOP;
 80010e2:	4b06      	ldr	r3, [pc, #24]	@ (80010fc <LCD_Send_Command+0xd8>)
 80010e4:	681b      	ldr	r3, [r3, #0]
 80010e6:	4a05      	ldr	r2, [pc, #20]	@ (80010fc <LCD_Send_Command+0xd8>)
 80010e8:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80010ec:	6013      	str	r3, [r2, #0]
}
 80010ee:	bf00      	nop
 80010f0:	371c      	adds	r7, #28
 80010f2:	46bd      	mov	sp, r7
 80010f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010f8:	4770      	bx	lr
 80010fa:	bf00      	nop
 80010fc:	40005400 	.word	0x40005400

08001100 <LCD_Send_Data>:

void LCD_Send_Data(char data) {
 8001100:	b480      	push	{r7}
 8001102:	b087      	sub	sp, #28
 8001104:	af00      	add	r7, sp, #0
 8001106:	4603      	mov	r3, r0
 8001108:	71fb      	strb	r3, [r7, #7]
    uint16_t reg;

    char data_u, data_l;
    uint8_t data_t[4];
    data_u = (data&0xf0);
 800110a:	79fb      	ldrb	r3, [r7, #7]
 800110c:	f023 030f 	bic.w	r3, r3, #15
 8001110:	74fb      	strb	r3, [r7, #19]
    data_l = ((data<<4)&0xf0);
 8001112:	79fb      	ldrb	r3, [r7, #7]
 8001114:	011b      	lsls	r3, r3, #4
 8001116:	74bb      	strb	r3, [r7, #18]
    data_t[0] = data_u|0x0D;  //en=1, rs=1
 8001118:	7cfb      	ldrb	r3, [r7, #19]
 800111a:	f043 030d 	orr.w	r3, r3, #13
 800111e:	b2db      	uxtb	r3, r3
 8001120:	733b      	strb	r3, [r7, #12]
    data_t[1] = data_u|0x09;  //en=0, rs=1
 8001122:	7cfb      	ldrb	r3, [r7, #19]
 8001124:	f043 0309 	orr.w	r3, r3, #9
 8001128:	b2db      	uxtb	r3, r3
 800112a:	737b      	strb	r3, [r7, #13]
    data_t[2] = data_l|0x0D;  //en=1, rs=1
 800112c:	7cbb      	ldrb	r3, [r7, #18]
 800112e:	f043 030d 	orr.w	r3, r3, #13
 8001132:	b2db      	uxtb	r3, r3
 8001134:	73bb      	strb	r3, [r7, #14]
    data_t[3] = data_l|0x09;  //en=0, rs=1
 8001136:	7cbb      	ldrb	r3, [r7, #18]
 8001138:	f043 0309 	orr.w	r3, r3, #9
 800113c:	b2db      	uxtb	r3, r3
 800113e:	73fb      	strb	r3, [r7, #15]

    // START CONDITION
    I2C1->CR1 &= ~I2C_CR1_POS;
 8001140:	4b2f      	ldr	r3, [pc, #188]	@ (8001200 <LCD_Send_Data+0x100>)
 8001142:	681b      	ldr	r3, [r3, #0]
 8001144:	4a2e      	ldr	r2, [pc, #184]	@ (8001200 <LCD_Send_Data+0x100>)
 8001146:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800114a:	6013      	str	r3, [r2, #0]
    I2C1->CR1 |= I2C_CR1_START;
 800114c:	4b2c      	ldr	r3, [pc, #176]	@ (8001200 <LCD_Send_Data+0x100>)
 800114e:	681b      	ldr	r3, [r3, #0]
 8001150:	4a2b      	ldr	r2, [pc, #172]	@ (8001200 <LCD_Send_Data+0x100>)
 8001152:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001156:	6013      	str	r3, [r2, #0]
    while (!(I2C1->SR1 & I2C_SR1_SB));
 8001158:	bf00      	nop
 800115a:	4b29      	ldr	r3, [pc, #164]	@ (8001200 <LCD_Send_Data+0x100>)
 800115c:	695b      	ldr	r3, [r3, #20]
 800115e:	f003 0301 	and.w	r3, r3, #1
 8001162:	2b00      	cmp	r3, #0
 8001164:	d0f9      	beq.n	800115a <LCD_Send_Data+0x5a>
    reg = I2C1->SR1;
 8001166:	4b26      	ldr	r3, [pc, #152]	@ (8001200 <LCD_Send_Data+0x100>)
 8001168:	695b      	ldr	r3, [r3, #20]
 800116a:	823b      	strh	r3, [r7, #16]

    // SLAVE ADDRESS
    I2C1->DR = 0x4E; // 0 is write 0x4E for LCD 0x5C << 1 for sensor
 800116c:	4b24      	ldr	r3, [pc, #144]	@ (8001200 <LCD_Send_Data+0x100>)
 800116e:	224e      	movs	r2, #78	@ 0x4e
 8001170:	611a      	str	r2, [r3, #16]
    while (!(I2C1->SR1 & I2C_SR1_ADDR));
 8001172:	bf00      	nop
 8001174:	4b22      	ldr	r3, [pc, #136]	@ (8001200 <LCD_Send_Data+0x100>)
 8001176:	695b      	ldr	r3, [r3, #20]
 8001178:	f003 0302 	and.w	r3, r3, #2
 800117c:	2b00      	cmp	r3, #0
 800117e:	d0f9      	beq.n	8001174 <LCD_Send_Data+0x74>
    reg = I2C1->SR1 | I2C1->SR2;
 8001180:	4b1f      	ldr	r3, [pc, #124]	@ (8001200 <LCD_Send_Data+0x100>)
 8001182:	695b      	ldr	r3, [r3, #20]
 8001184:	b29a      	uxth	r2, r3
 8001186:	4b1e      	ldr	r3, [pc, #120]	@ (8001200 <LCD_Send_Data+0x100>)
 8001188:	699b      	ldr	r3, [r3, #24]
 800118a:	b29b      	uxth	r3, r3
 800118c:	4313      	orrs	r3, r2
 800118e:	823b      	strh	r3, [r7, #16]
    while (!(I2C1->SR1 & I2C_SR1_TXE));
 8001190:	bf00      	nop
 8001192:	4b1b      	ldr	r3, [pc, #108]	@ (8001200 <LCD_Send_Data+0x100>)
 8001194:	695b      	ldr	r3, [r3, #20]
 8001196:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800119a:	2b00      	cmp	r3, #0
 800119c:	d0f9      	beq.n	8001192 <LCD_Send_Data+0x92>

    for (int i = 0; i < 4; i++) {
 800119e:	2300      	movs	r3, #0
 80011a0:	617b      	str	r3, [r7, #20]
 80011a2:	e018      	b.n	80011d6 <LCD_Send_Data+0xd6>
        I2C1->DR = data_t[i];
 80011a4:	f107 020c 	add.w	r2, r7, #12
 80011a8:	697b      	ldr	r3, [r7, #20]
 80011aa:	4413      	add	r3, r2
 80011ac:	781a      	ldrb	r2, [r3, #0]
 80011ae:	4b14      	ldr	r3, [pc, #80]	@ (8001200 <LCD_Send_Data+0x100>)
 80011b0:	611a      	str	r2, [r3, #16]
        while(!(I2C1 -> SR1 & I2C_SR1_BTF));
 80011b2:	bf00      	nop
 80011b4:	4b12      	ldr	r3, [pc, #72]	@ (8001200 <LCD_Send_Data+0x100>)
 80011b6:	695b      	ldr	r3, [r3, #20]
 80011b8:	f003 0304 	and.w	r3, r3, #4
 80011bc:	2b00      	cmp	r3, #0
 80011be:	d0f9      	beq.n	80011b4 <LCD_Send_Data+0xb4>
        reg = 0x00;
 80011c0:	2300      	movs	r3, #0
 80011c2:	823b      	strh	r3, [r7, #16]
        reg = I2C1 -> SR1;
 80011c4:	4b0e      	ldr	r3, [pc, #56]	@ (8001200 <LCD_Send_Data+0x100>)
 80011c6:	695b      	ldr	r3, [r3, #20]
 80011c8:	823b      	strh	r3, [r7, #16]
        reg = I2C1 -> SR2;
 80011ca:	4b0d      	ldr	r3, [pc, #52]	@ (8001200 <LCD_Send_Data+0x100>)
 80011cc:	699b      	ldr	r3, [r3, #24]
 80011ce:	823b      	strh	r3, [r7, #16]
    for (int i = 0; i < 4; i++) {
 80011d0:	697b      	ldr	r3, [r7, #20]
 80011d2:	3301      	adds	r3, #1
 80011d4:	617b      	str	r3, [r7, #20]
 80011d6:	697b      	ldr	r3, [r7, #20]
 80011d8:	2b03      	cmp	r3, #3
 80011da:	dde3      	ble.n	80011a4 <LCD_Send_Data+0xa4>
    }

    // Send a stop signal
    I2C1->CR1 |= I2C_CR1_STOP;
 80011dc:	4b08      	ldr	r3, [pc, #32]	@ (8001200 <LCD_Send_Data+0x100>)
 80011de:	681b      	ldr	r3, [r3, #0]
 80011e0:	4a07      	ldr	r2, [pc, #28]	@ (8001200 <LCD_Send_Data+0x100>)
 80011e2:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80011e6:	6013      	str	r3, [r2, #0]
    reg = I2C1 -> SR1;
 80011e8:	4b05      	ldr	r3, [pc, #20]	@ (8001200 <LCD_Send_Data+0x100>)
 80011ea:	695b      	ldr	r3, [r3, #20]
 80011ec:	823b      	strh	r3, [r7, #16]
    reg = I2C1 -> SR2;
 80011ee:	4b04      	ldr	r3, [pc, #16]	@ (8001200 <LCD_Send_Data+0x100>)
 80011f0:	699b      	ldr	r3, [r3, #24]
 80011f2:	823b      	strh	r3, [r7, #16]
}
 80011f4:	bf00      	nop
 80011f6:	371c      	adds	r7, #28
 80011f8:	46bd      	mov	sp, r7
 80011fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80011fe:	4770      	bx	lr
 8001200:	40005400 	.word	0x40005400

08001204 <LCD_Init>:

void LCD_Init(void) {
 8001204:	b580      	push	{r7, lr}
 8001206:	af00      	add	r7, sp, #0
    delay_ms(40);
 8001208:	2028      	movs	r0, #40	@ 0x28
 800120a:	f7ff fef3 	bl	8000ff4 <delay_ms>
    LCD_Send_Command(0x30);
 800120e:	2030      	movs	r0, #48	@ 0x30
 8001210:	f7ff ff08 	bl	8001024 <LCD_Send_Command>
    delay_ms(5);
 8001214:	2005      	movs	r0, #5
 8001216:	f7ff feed 	bl	8000ff4 <delay_ms>
    LCD_Send_Command(0x30);
 800121a:	2030      	movs	r0, #48	@ 0x30
 800121c:	f7ff ff02 	bl	8001024 <LCD_Send_Command>
    delay_ms(1);
 8001220:	2001      	movs	r0, #1
 8001222:	f7ff fee7 	bl	8000ff4 <delay_ms>
    LCD_Send_Command(0x30);
 8001226:	2030      	movs	r0, #48	@ 0x30
 8001228:	f7ff fefc 	bl	8001024 <LCD_Send_Command>
    delay_ms(10);
 800122c:	200a      	movs	r0, #10
 800122e:	f7ff fee1 	bl	8000ff4 <delay_ms>
    LCD_Send_Command(0x20);
 8001232:	2020      	movs	r0, #32
 8001234:	f7ff fef6 	bl	8001024 <LCD_Send_Command>
    delay_ms(10);
 8001238:	200a      	movs	r0, #10
 800123a:	f7ff fedb 	bl	8000ff4 <delay_ms>

    LCD_Send_Command(0x28);
 800123e:	2028      	movs	r0, #40	@ 0x28
 8001240:	f7ff fef0 	bl	8001024 <LCD_Send_Command>
    delay_ms(1);
 8001244:	2001      	movs	r0, #1
 8001246:	f7ff fed5 	bl	8000ff4 <delay_ms>
    LCD_Send_Command(0x08);
 800124a:	2008      	movs	r0, #8
 800124c:	f7ff feea 	bl	8001024 <LCD_Send_Command>
    delay_ms(1);
 8001250:	2001      	movs	r0, #1
 8001252:	f7ff fecf 	bl	8000ff4 <delay_ms>
    LCD_Send_Command(0x01);
 8001256:	2001      	movs	r0, #1
 8001258:	f7ff fee4 	bl	8001024 <LCD_Send_Command>
    delay_ms(5);
 800125c:	2005      	movs	r0, #5
 800125e:	f7ff fec9 	bl	8000ff4 <delay_ms>
    LCD_Send_Command(0x06);
 8001262:	2006      	movs	r0, #6
 8001264:	f7ff fede 	bl	8001024 <LCD_Send_Command>
    delay_ms(1);
 8001268:	2001      	movs	r0, #1
 800126a:	f7ff fec3 	bl	8000ff4 <delay_ms>
    LCD_Send_Command(0x0C);
 800126e:	200c      	movs	r0, #12
 8001270:	f7ff fed8 	bl	8001024 <LCD_Send_Command>
}
 8001274:	bf00      	nop
 8001276:	bd80      	pop	{r7, pc}

08001278 <LCD_Send_String>:

void LCD_Send_String (char *str) {
 8001278:	b580      	push	{r7, lr}
 800127a:	b082      	sub	sp, #8
 800127c:	af00      	add	r7, sp, #0
 800127e:	6078      	str	r0, [r7, #4]
    while (*str) LCD_Send_Data (*str++);
 8001280:	e006      	b.n	8001290 <LCD_Send_String+0x18>
 8001282:	687b      	ldr	r3, [r7, #4]
 8001284:	1c5a      	adds	r2, r3, #1
 8001286:	607a      	str	r2, [r7, #4]
 8001288:	781b      	ldrb	r3, [r3, #0]
 800128a:	4618      	mov	r0, r3
 800128c:	f7ff ff38 	bl	8001100 <LCD_Send_Data>
 8001290:	687b      	ldr	r3, [r7, #4]
 8001292:	781b      	ldrb	r3, [r3, #0]
 8001294:	2b00      	cmp	r3, #0
 8001296:	d1f4      	bne.n	8001282 <LCD_Send_String+0xa>
}
 8001298:	bf00      	nop
 800129a:	bf00      	nop
 800129c:	3708      	adds	r7, #8
 800129e:	46bd      	mov	sp, r7
 80012a0:	bd80      	pop	{r7, pc}

080012a2 <LCD_Cursor_Position>:
    for (int i = 0; i < 70; i++) {
        LCD_Send_Data(' ');
    }
}

void LCD_Cursor_Position (int row, int col) {
 80012a2:	b580      	push	{r7, lr}
 80012a4:	b084      	sub	sp, #16
 80012a6:	af00      	add	r7, sp, #0
 80012a8:	6078      	str	r0, [r7, #4]
 80012aa:	6039      	str	r1, [r7, #0]
    uint8_t address;
    if (row == 0) {
 80012ac:	687b      	ldr	r3, [r7, #4]
 80012ae:	2b00      	cmp	r3, #0
 80012b0:	d102      	bne.n	80012b8 <LCD_Cursor_Position+0x16>
        address = col;
 80012b2:	683b      	ldr	r3, [r7, #0]
 80012b4:	73fb      	strb	r3, [r7, #15]
 80012b6:	e016      	b.n	80012e6 <LCD_Cursor_Position+0x44>
    }
    else if (row == 1) {
 80012b8:	687b      	ldr	r3, [r7, #4]
 80012ba:	2b01      	cmp	r3, #1
 80012bc:	d104      	bne.n	80012c8 <LCD_Cursor_Position+0x26>
        address = 0x40 + col;
 80012be:	683b      	ldr	r3, [r7, #0]
 80012c0:	b2db      	uxtb	r3, r3
 80012c2:	3340      	adds	r3, #64	@ 0x40
 80012c4:	73fb      	strb	r3, [r7, #15]
 80012c6:	e00e      	b.n	80012e6 <LCD_Cursor_Position+0x44>
    }
    else if (row == 2) {
 80012c8:	687b      	ldr	r3, [r7, #4]
 80012ca:	2b02      	cmp	r3, #2
 80012cc:	d104      	bne.n	80012d8 <LCD_Cursor_Position+0x36>
        address = 0x14 + col;
 80012ce:	683b      	ldr	r3, [r7, #0]
 80012d0:	b2db      	uxtb	r3, r3
 80012d2:	3314      	adds	r3, #20
 80012d4:	73fb      	strb	r3, [r7, #15]
 80012d6:	e006      	b.n	80012e6 <LCD_Cursor_Position+0x44>
    }
    else if (row == 3) {
 80012d8:	687b      	ldr	r3, [r7, #4]
 80012da:	2b03      	cmp	r3, #3
 80012dc:	d10b      	bne.n	80012f6 <LCD_Cursor_Position+0x54>
        address = 0x54 + col;
 80012de:	683b      	ldr	r3, [r7, #0]
 80012e0:	b2db      	uxtb	r3, r3
 80012e2:	3354      	adds	r3, #84	@ 0x54
 80012e4:	73fb      	strb	r3, [r7, #15]
    }
    else {
        return;
    }
    LCD_Send_Command(0x80 | address);
 80012e6:	7bfb      	ldrb	r3, [r7, #15]
 80012e8:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 80012ec:	b2db      	uxtb	r3, r3
 80012ee:	4618      	mov	r0, r3
 80012f0:	f7ff fe98 	bl	8001024 <LCD_Send_Command>
 80012f4:	e000      	b.n	80012f8 <LCD_Cursor_Position+0x56>
        return;
 80012f6:	bf00      	nop
}
 80012f8:	3710      	adds	r7, #16
 80012fa:	46bd      	mov	sp, r7
 80012fc:	bd80      	pop	{r7, pc}
	...

08001300 <AM2320_Wakeup>:
void AM2320_Send_Command(void);
void AM2320_Receive(void);

extern uint8_t AM2320_Buffer[8];

void AM2320_Wakeup(void) {
 8001300:	b580      	push	{r7, lr}
 8001302:	b082      	sub	sp, #8
 8001304:	af00      	add	r7, sp, #0
    uint8_t reg;
    // START CONDITION
    I2C3->CR1 &= ~I2C_CR1_POS;
 8001306:	4b16      	ldr	r3, [pc, #88]	@ (8001360 <AM2320_Wakeup+0x60>)
 8001308:	681b      	ldr	r3, [r3, #0]
 800130a:	4a15      	ldr	r2, [pc, #84]	@ (8001360 <AM2320_Wakeup+0x60>)
 800130c:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8001310:	6013      	str	r3, [r2, #0]
    I2C3->CR1 |= I2C_CR1_START;
 8001312:	4b13      	ldr	r3, [pc, #76]	@ (8001360 <AM2320_Wakeup+0x60>)
 8001314:	681b      	ldr	r3, [r3, #0]
 8001316:	4a12      	ldr	r2, [pc, #72]	@ (8001360 <AM2320_Wakeup+0x60>)
 8001318:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800131c:	6013      	str	r3, [r2, #0]
    while (!(I2C3->SR1 & I2C_SR1_SB));
 800131e:	bf00      	nop
 8001320:	4b0f      	ldr	r3, [pc, #60]	@ (8001360 <AM2320_Wakeup+0x60>)
 8001322:	695b      	ldr	r3, [r3, #20]
 8001324:	f003 0301 	and.w	r3, r3, #1
 8001328:	2b00      	cmp	r3, #0
 800132a:	d0f9      	beq.n	8001320 <AM2320_Wakeup+0x20>
    reg = I2C3->SR1;
 800132c:	4b0c      	ldr	r3, [pc, #48]	@ (8001360 <AM2320_Wakeup+0x60>)
 800132e:	695b      	ldr	r3, [r3, #20]
 8001330:	71fb      	strb	r3, [r7, #7]

    // SLAVE ADDRESS
    I2C3->DR = 0xB8; // Set slave address
 8001332:	4b0b      	ldr	r3, [pc, #44]	@ (8001360 <AM2320_Wakeup+0x60>)
 8001334:	22b8      	movs	r2, #184	@ 0xb8
 8001336:	611a      	str	r2, [r3, #16]
    //while (!(I2C3->SR1 & I2C_SR1_ADDR));
    //reg = I2C3->SR1 | I2C3->SR2; // Clear address flag
    //while (!(I2C3->SR1 & I2C_SR1_TXE)); // Wait until data register is empty

    delay_ms(1);
 8001338:	2001      	movs	r0, #1
 800133a:	f7ff fe5b 	bl	8000ff4 <delay_ms>
    // Send a stop signal
    I2C3->CR1 |= I2C_CR1_STOP; // Stop transmission
 800133e:	4b08      	ldr	r3, [pc, #32]	@ (8001360 <AM2320_Wakeup+0x60>)
 8001340:	681b      	ldr	r3, [r3, #0]
 8001342:	4a07      	ldr	r2, [pc, #28]	@ (8001360 <AM2320_Wakeup+0x60>)
 8001344:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8001348:	6013      	str	r3, [r2, #0]
    reg = I2C3->SR1; // Read status register
 800134a:	4b05      	ldr	r3, [pc, #20]	@ (8001360 <AM2320_Wakeup+0x60>)
 800134c:	695b      	ldr	r3, [r3, #20]
 800134e:	71fb      	strb	r3, [r7, #7]
    reg = I2C3->SR2; // Read status register 2 to clear flags
 8001350:	4b03      	ldr	r3, [pc, #12]	@ (8001360 <AM2320_Wakeup+0x60>)
 8001352:	699b      	ldr	r3, [r3, #24]
 8001354:	71fb      	strb	r3, [r7, #7]
}
 8001356:	bf00      	nop
 8001358:	3708      	adds	r7, #8
 800135a:	46bd      	mov	sp, r7
 800135c:	bd80      	pop	{r7, pc}
 800135e:	bf00      	nop
 8001360:	40005c00 	.word	0x40005c00

08001364 <AM2320_Send_Command>:

void AM2320_Send_Command(void) {
 8001364:	b480      	push	{r7}
 8001366:	b083      	sub	sp, #12
 8001368:	af00      	add	r7, sp, #0
    uint8_t reg;
    // START CONDITION
    I2C3->CR1 &= ~I2C_CR1_POS;
 800136a:	4b33      	ldr	r3, [pc, #204]	@ (8001438 <AM2320_Send_Command+0xd4>)
 800136c:	681b      	ldr	r3, [r3, #0]
 800136e:	4a32      	ldr	r2, [pc, #200]	@ (8001438 <AM2320_Send_Command+0xd4>)
 8001370:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8001374:	6013      	str	r3, [r2, #0]
    I2C3->CR1 |= I2C_CR1_START;
 8001376:	4b30      	ldr	r3, [pc, #192]	@ (8001438 <AM2320_Send_Command+0xd4>)
 8001378:	681b      	ldr	r3, [r3, #0]
 800137a:	4a2f      	ldr	r2, [pc, #188]	@ (8001438 <AM2320_Send_Command+0xd4>)
 800137c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001380:	6013      	str	r3, [r2, #0]
    while (!(I2C3->SR1 & I2C_SR1_SB));
 8001382:	bf00      	nop
 8001384:	4b2c      	ldr	r3, [pc, #176]	@ (8001438 <AM2320_Send_Command+0xd4>)
 8001386:	695b      	ldr	r3, [r3, #20]
 8001388:	f003 0301 	and.w	r3, r3, #1
 800138c:	2b00      	cmp	r3, #0
 800138e:	d0f9      	beq.n	8001384 <AM2320_Send_Command+0x20>
    reg = I2C3->SR1;
 8001390:	4b29      	ldr	r3, [pc, #164]	@ (8001438 <AM2320_Send_Command+0xd4>)
 8001392:	695b      	ldr	r3, [r3, #20]
 8001394:	70fb      	strb	r3, [r7, #3]

    // SLAVE ADDRESS
    I2C3->DR = 0xB8; // Set slave address
 8001396:	4b28      	ldr	r3, [pc, #160]	@ (8001438 <AM2320_Send_Command+0xd4>)
 8001398:	22b8      	movs	r2, #184	@ 0xb8
 800139a:	611a      	str	r2, [r3, #16]
    while (!(I2C3->SR1 & I2C_SR1_ADDR));
 800139c:	bf00      	nop
 800139e:	4b26      	ldr	r3, [pc, #152]	@ (8001438 <AM2320_Send_Command+0xd4>)
 80013a0:	695b      	ldr	r3, [r3, #20]
 80013a2:	f003 0302 	and.w	r3, r3, #2
 80013a6:	2b00      	cmp	r3, #0
 80013a8:	d0f9      	beq.n	800139e <AM2320_Send_Command+0x3a>
    reg = I2C3->SR1 | I2C3->SR2; // Clear address flag
 80013aa:	4b23      	ldr	r3, [pc, #140]	@ (8001438 <AM2320_Send_Command+0xd4>)
 80013ac:	695b      	ldr	r3, [r3, #20]
 80013ae:	b2da      	uxtb	r2, r3
 80013b0:	4b21      	ldr	r3, [pc, #132]	@ (8001438 <AM2320_Send_Command+0xd4>)
 80013b2:	699b      	ldr	r3, [r3, #24]
 80013b4:	b2db      	uxtb	r3, r3
 80013b6:	4313      	orrs	r3, r2
 80013b8:	70fb      	strb	r3, [r7, #3]
    while (!(I2C3->SR1 & I2C_SR1_TXE)); // Wait until data register is empty
 80013ba:	bf00      	nop
 80013bc:	4b1e      	ldr	r3, [pc, #120]	@ (8001438 <AM2320_Send_Command+0xd4>)
 80013be:	695b      	ldr	r3, [r3, #20]
 80013c0:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80013c4:	2b00      	cmp	r3, #0
 80013c6:	d0f9      	beq.n	80013bc <AM2320_Send_Command+0x58>

    // SEND CMD
    uint8_t cmd[3] = {0x03, 0x00, 0x04};
 80013c8:	4a1c      	ldr	r2, [pc, #112]	@ (800143c <AM2320_Send_Command+0xd8>)
 80013ca:	463b      	mov	r3, r7
 80013cc:	6812      	ldr	r2, [r2, #0]
 80013ce:	4611      	mov	r1, r2
 80013d0:	8019      	strh	r1, [r3, #0]
 80013d2:	3302      	adds	r3, #2
 80013d4:	0c12      	lsrs	r2, r2, #16
 80013d6:	701a      	strb	r2, [r3, #0]
    for (int i = 0 ; i < 3; i++) {
 80013d8:	2300      	movs	r3, #0
 80013da:	607b      	str	r3, [r7, #4]
 80013dc:	e017      	b.n	800140e <AM2320_Send_Command+0xaa>
        I2C3->DR = cmd[i]; // Send command byte
 80013de:	463a      	mov	r2, r7
 80013e0:	687b      	ldr	r3, [r7, #4]
 80013e2:	4413      	add	r3, r2
 80013e4:	781a      	ldrb	r2, [r3, #0]
 80013e6:	4b14      	ldr	r3, [pc, #80]	@ (8001438 <AM2320_Send_Command+0xd4>)
 80013e8:	611a      	str	r2, [r3, #16]
        while(!(I2C3->SR1 & I2C_SR1_BTF)); // Wait until byte transfer finished
 80013ea:	bf00      	nop
 80013ec:	4b12      	ldr	r3, [pc, #72]	@ (8001438 <AM2320_Send_Command+0xd4>)
 80013ee:	695b      	ldr	r3, [r3, #20]
 80013f0:	f003 0304 	and.w	r3, r3, #4
 80013f4:	2b00      	cmp	r3, #0
 80013f6:	d0f9      	beq.n	80013ec <AM2320_Send_Command+0x88>
        reg = 0x00; // Clear reg
 80013f8:	2300      	movs	r3, #0
 80013fa:	70fb      	strb	r3, [r7, #3]
        reg = I2C3->SR1; // Read status register
 80013fc:	4b0e      	ldr	r3, [pc, #56]	@ (8001438 <AM2320_Send_Command+0xd4>)
 80013fe:	695b      	ldr	r3, [r3, #20]
 8001400:	70fb      	strb	r3, [r7, #3]
        reg = I2C3->SR2; // Read status register 2 to clear flags
 8001402:	4b0d      	ldr	r3, [pc, #52]	@ (8001438 <AM2320_Send_Command+0xd4>)
 8001404:	699b      	ldr	r3, [r3, #24]
 8001406:	70fb      	strb	r3, [r7, #3]
    for (int i = 0 ; i < 3; i++) {
 8001408:	687b      	ldr	r3, [r7, #4]
 800140a:	3301      	adds	r3, #1
 800140c:	607b      	str	r3, [r7, #4]
 800140e:	687b      	ldr	r3, [r7, #4]
 8001410:	2b02      	cmp	r3, #2
 8001412:	dde4      	ble.n	80013de <AM2320_Send_Command+0x7a>
    }

    // Send a stop signal
    I2C3->CR1 |= I2C_CR1_STOP; // Stop transmission
 8001414:	4b08      	ldr	r3, [pc, #32]	@ (8001438 <AM2320_Send_Command+0xd4>)
 8001416:	681b      	ldr	r3, [r3, #0]
 8001418:	4a07      	ldr	r2, [pc, #28]	@ (8001438 <AM2320_Send_Command+0xd4>)
 800141a:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800141e:	6013      	str	r3, [r2, #0]
    reg = I2C3->SR1; // Read status register
 8001420:	4b05      	ldr	r3, [pc, #20]	@ (8001438 <AM2320_Send_Command+0xd4>)
 8001422:	695b      	ldr	r3, [r3, #20]
 8001424:	70fb      	strb	r3, [r7, #3]
    reg = I2C3->SR2; // Read status register 2 to clear flags
 8001426:	4b04      	ldr	r3, [pc, #16]	@ (8001438 <AM2320_Send_Command+0xd4>)
 8001428:	699b      	ldr	r3, [r3, #24]
 800142a:	70fb      	strb	r3, [r7, #3]
}
 800142c:	bf00      	nop
 800142e:	370c      	adds	r7, #12
 8001430:	46bd      	mov	sp, r7
 8001432:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001436:	4770      	bx	lr
 8001438:	40005c00 	.word	0x40005c00
 800143c:	080045e8 	.word	0x080045e8

08001440 <AM2320_Receive>:

void AM2320_Receive(void) {
 8001440:	b480      	push	{r7}
 8001442:	b083      	sub	sp, #12
 8001444:	af00      	add	r7, sp, #0
    uint8_t reg;
    // START CONDITION
    I2C3->CR1 &= ~I2C_CR1_POS;
 8001446:	4b2e      	ldr	r3, [pc, #184]	@ (8001500 <AM2320_Receive+0xc0>)
 8001448:	681b      	ldr	r3, [r3, #0]
 800144a:	4a2d      	ldr	r2, [pc, #180]	@ (8001500 <AM2320_Receive+0xc0>)
 800144c:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8001450:	6013      	str	r3, [r2, #0]
    I2C3->CR1 |= I2C_CR1_START;
 8001452:	4b2b      	ldr	r3, [pc, #172]	@ (8001500 <AM2320_Receive+0xc0>)
 8001454:	681b      	ldr	r3, [r3, #0]
 8001456:	4a2a      	ldr	r2, [pc, #168]	@ (8001500 <AM2320_Receive+0xc0>)
 8001458:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800145c:	6013      	str	r3, [r2, #0]
    I2C3 -> CR1 |= I2C_CR1_ACK;
 800145e:	4b28      	ldr	r3, [pc, #160]	@ (8001500 <AM2320_Receive+0xc0>)
 8001460:	681b      	ldr	r3, [r3, #0]
 8001462:	4a27      	ldr	r2, [pc, #156]	@ (8001500 <AM2320_Receive+0xc0>)
 8001464:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8001468:	6013      	str	r3, [r2, #0]
    while (!(I2C3->SR1 & I2C_SR1_SB));
 800146a:	bf00      	nop
 800146c:	4b24      	ldr	r3, [pc, #144]	@ (8001500 <AM2320_Receive+0xc0>)
 800146e:	695b      	ldr	r3, [r3, #20]
 8001470:	f003 0301 	and.w	r3, r3, #1
 8001474:	2b00      	cmp	r3, #0
 8001476:	d0f9      	beq.n	800146c <AM2320_Receive+0x2c>
    reg = I2C3->SR1;
 8001478:	4b21      	ldr	r3, [pc, #132]	@ (8001500 <AM2320_Receive+0xc0>)
 800147a:	695b      	ldr	r3, [r3, #20]
 800147c:	70fb      	strb	r3, [r7, #3]

    // SLAVE ADDRESS
    I2C3->DR = 0xB9; // Set slave address
 800147e:	4b20      	ldr	r3, [pc, #128]	@ (8001500 <AM2320_Receive+0xc0>)
 8001480:	22b9      	movs	r2, #185	@ 0xb9
 8001482:	611a      	str	r2, [r3, #16]
    while (!(I2C3->SR1 & I2C_SR1_ADDR));
 8001484:	bf00      	nop
 8001486:	4b1e      	ldr	r3, [pc, #120]	@ (8001500 <AM2320_Receive+0xc0>)
 8001488:	695b      	ldr	r3, [r3, #20]
 800148a:	f003 0302 	and.w	r3, r3, #2
 800148e:	2b00      	cmp	r3, #0
 8001490:	d0f9      	beq.n	8001486 <AM2320_Receive+0x46>
    reg = I2C3->SR1 | I2C3->SR2; // Clear address flag
 8001492:	4b1b      	ldr	r3, [pc, #108]	@ (8001500 <AM2320_Receive+0xc0>)
 8001494:	695b      	ldr	r3, [r3, #20]
 8001496:	b2da      	uxtb	r2, r3
 8001498:	4b19      	ldr	r3, [pc, #100]	@ (8001500 <AM2320_Receive+0xc0>)
 800149a:	699b      	ldr	r3, [r3, #24]
 800149c:	b2db      	uxtb	r3, r3
 800149e:	4313      	orrs	r3, r2
 80014a0:	70fb      	strb	r3, [r7, #3]
    //while (!(I2C3->SR1 & I2C_SR1_TXE)); // Wait until data register is empty
    // you dont need to do this because you are in read mode now

    // READ DATA
    for (int i = 0; i < 8; i++) {
 80014a2:	2300      	movs	r3, #0
 80014a4:	607b      	str	r3, [r7, #4]
 80014a6:	e020      	b.n	80014ea <AM2320_Receive+0xaa>
        if (i + 1 == 8) {
 80014a8:	687b      	ldr	r3, [r7, #4]
 80014aa:	2b07      	cmp	r3, #7
 80014ac:	d10b      	bne.n	80014c6 <AM2320_Receive+0x86>
            I2C3->CR1 &= ~I2C_CR1_ACK;
 80014ae:	4b14      	ldr	r3, [pc, #80]	@ (8001500 <AM2320_Receive+0xc0>)
 80014b0:	681b      	ldr	r3, [r3, #0]
 80014b2:	4a13      	ldr	r2, [pc, #76]	@ (8001500 <AM2320_Receive+0xc0>)
 80014b4:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 80014b8:	6013      	str	r3, [r2, #0]
            I2C3->CR1 |= I2C_CR1_STOP;
 80014ba:	4b11      	ldr	r3, [pc, #68]	@ (8001500 <AM2320_Receive+0xc0>)
 80014bc:	681b      	ldr	r3, [r3, #0]
 80014be:	4a10      	ldr	r2, [pc, #64]	@ (8001500 <AM2320_Receive+0xc0>)
 80014c0:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80014c4:	6013      	str	r3, [r2, #0]
        }
        while (!(I2C3->SR1 & I2C_SR1_RXNE));
 80014c6:	bf00      	nop
 80014c8:	4b0d      	ldr	r3, [pc, #52]	@ (8001500 <AM2320_Receive+0xc0>)
 80014ca:	695b      	ldr	r3, [r3, #20]
 80014cc:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80014d0:	2b00      	cmp	r3, #0
 80014d2:	d0f9      	beq.n	80014c8 <AM2320_Receive+0x88>
        AM2320_Buffer[i] = I2C3->DR;
 80014d4:	4b0a      	ldr	r3, [pc, #40]	@ (8001500 <AM2320_Receive+0xc0>)
 80014d6:	691b      	ldr	r3, [r3, #16]
 80014d8:	b2d9      	uxtb	r1, r3
 80014da:	4a0a      	ldr	r2, [pc, #40]	@ (8001504 <AM2320_Receive+0xc4>)
 80014dc:	687b      	ldr	r3, [r7, #4]
 80014de:	4413      	add	r3, r2
 80014e0:	460a      	mov	r2, r1
 80014e2:	701a      	strb	r2, [r3, #0]
    for (int i = 0; i < 8; i++) {
 80014e4:	687b      	ldr	r3, [r7, #4]
 80014e6:	3301      	adds	r3, #1
 80014e8:	607b      	str	r3, [r7, #4]
 80014ea:	687b      	ldr	r3, [r7, #4]
 80014ec:	2b07      	cmp	r3, #7
 80014ee:	dddb      	ble.n	80014a8 <AM2320_Receive+0x68>
    }
}
 80014f0:	bf00      	nop
 80014f2:	bf00      	nop
 80014f4:	370c      	adds	r7, #12
 80014f6:	46bd      	mov	sp, r7
 80014f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80014fc:	4770      	bx	lr
 80014fe:	bf00      	nop
 8001500:	40005c00 	.word	0x40005c00
 8001504:	200001ec 	.word	0x200001ec

08001508 <main>:
float humidity = 0, temperature = 0;
//char buffer[16]; // buffer to convert float into string

void Display_Value(int row, int col, const char *format, ...);

int main(void) {
 8001508:	b580      	push	{r7, lr}
 800150a:	b082      	sub	sp, #8
 800150c:	af02      	add	r7, sp, #8
    // INITIALIZATIONS
    Clock_Init();
 800150e:	f7ff fd17 	bl	8000f40 <Clock_Init>
    GPIO_Init();
 8001512:	f7ff fbf7 	bl	8000d04 <GPIO_Init>
    ADC_Init();
 8001516:	f7ff fb4f 	bl	8000bb8 <ADC_Init>
    DMA_Init();
 800151a:	f7ff fbad 	bl	8000c78 <DMA_Init>
    I2C1_Init();
 800151e:	f7ff fcb7 	bl	8000e90 <I2C1_Init>
    I2C3_Init();
 8001522:	f7ff fce1 	bl	8000ee8 <I2C3_Init>
    USART1_Init();
 8001526:	f000 f9ad 	bl	8001884 <USART1_Init>

    // ADC starts in the initialization functions

    // I2C1
    LCD_Init();
 800152a:	f7ff fe6b 	bl	8001204 <LCD_Init>
    //LCD_Clear_Display();
    LCD_Cursor_Position(0, 0);
 800152e:	2100      	movs	r1, #0
 8001530:	2000      	movs	r0, #0
 8001532:	f7ff feb6 	bl	80012a2 <LCD_Cursor_Position>
    LCD_Send_String("Humi:");
 8001536:	484a      	ldr	r0, [pc, #296]	@ (8001660 <main+0x158>)
 8001538:	f7ff fe9e 	bl	8001278 <LCD_Send_String>
    LCD_Cursor_Position(1, 0);
 800153c:	2100      	movs	r1, #0
 800153e:	2001      	movs	r0, #1
 8001540:	f7ff feaf 	bl	80012a2 <LCD_Cursor_Position>
    LCD_Send_String("Temp:");
 8001544:	4847      	ldr	r0, [pc, #284]	@ (8001664 <main+0x15c>)
 8001546:	f7ff fe97 	bl	8001278 <LCD_Send_String>
    LCD_Cursor_Position(2, 0);
 800154a:	2100      	movs	r1, #0
 800154c:	2002      	movs	r0, #2
 800154e:	f7ff fea8 	bl	80012a2 <LCD_Cursor_Position>
    LCD_Send_String("Moist:");
 8001552:	4845      	ldr	r0, [pc, #276]	@ (8001668 <main+0x160>)
 8001554:	f7ff fe90 	bl	8001278 <LCD_Send_String>
    LCD_Cursor_Position(3, 0);
 8001558:	2100      	movs	r1, #0
 800155a:	2003      	movs	r0, #3
 800155c:	f7ff fea1 	bl	80012a2 <LCD_Cursor_Position>
    LCD_Send_String("Light:");
 8001560:	4842      	ldr	r0, [pc, #264]	@ (800166c <main+0x164>)
 8001562:	f7ff fe89 	bl	8001278 <LCD_Send_String>

    AM2320_Wakeup();
 8001566:	f7ff fecb 	bl	8001300 <AM2320_Wakeup>
    AM2320_Send_Command();
 800156a:	f7ff fefb 	bl	8001364 <AM2320_Send_Command>
    delay_ms(4);
 800156e:	2004      	movs	r0, #4
 8001570:	f7ff fd40 	bl	8000ff4 <delay_ms>
    AM2320_Receive();
 8001574:	f7ff ff64 	bl	8001440 <AM2320_Receive>
    delay_ms(200);
 8001578:	20c8      	movs	r0, #200	@ 0xc8
 800157a:	f7ff fd3b 	bl	8000ff4 <delay_ms>
    // USART
    //USART1_Transmit();

    while (1) {
        // READ HUMIDITY AND TEMPERATURE
        AM2320_Wakeup();
 800157e:	f7ff febf 	bl	8001300 <AM2320_Wakeup>
        AM2320_Send_Command();
 8001582:	f7ff feef 	bl	8001364 <AM2320_Send_Command>
        delay_ms(2);
 8001586:	2002      	movs	r0, #2
 8001588:	f7ff fd34 	bl	8000ff4 <delay_ms>
        AM2320_Receive();
 800158c:	f7ff ff58 	bl	8001440 <AM2320_Receive>
        delay_ms(3000);
 8001590:	f640 30b8 	movw	r0, #3000	@ 0xbb8
 8001594:	f7ff fd2e 	bl	8000ff4 <delay_ms>

        // HANDLE SENSOR DATA HERE
        raw_humidity = (AM2320_Buffer[2] << 8) | AM2320_Buffer[3];
 8001598:	4b35      	ldr	r3, [pc, #212]	@ (8001670 <main+0x168>)
 800159a:	789b      	ldrb	r3, [r3, #2]
 800159c:	021b      	lsls	r3, r3, #8
 800159e:	b21a      	sxth	r2, r3
 80015a0:	4b33      	ldr	r3, [pc, #204]	@ (8001670 <main+0x168>)
 80015a2:	78db      	ldrb	r3, [r3, #3]
 80015a4:	b21b      	sxth	r3, r3
 80015a6:	4313      	orrs	r3, r2
 80015a8:	b21b      	sxth	r3, r3
 80015aa:	b29a      	uxth	r2, r3
 80015ac:	4b31      	ldr	r3, [pc, #196]	@ (8001674 <main+0x16c>)
 80015ae:	801a      	strh	r2, [r3, #0]
        raw_temperature = (AM2320_Buffer[4] << 8) | AM2320_Buffer[5];
 80015b0:	4b2f      	ldr	r3, [pc, #188]	@ (8001670 <main+0x168>)
 80015b2:	791b      	ldrb	r3, [r3, #4]
 80015b4:	021b      	lsls	r3, r3, #8
 80015b6:	b21a      	sxth	r2, r3
 80015b8:	4b2d      	ldr	r3, [pc, #180]	@ (8001670 <main+0x168>)
 80015ba:	795b      	ldrb	r3, [r3, #5]
 80015bc:	b21b      	sxth	r3, r3
 80015be:	4313      	orrs	r3, r2
 80015c0:	b21b      	sxth	r3, r3
 80015c2:	b29a      	uxth	r2, r3
 80015c4:	4b2c      	ldr	r3, [pc, #176]	@ (8001678 <main+0x170>)
 80015c6:	801a      	strh	r2, [r3, #0]

        humidity = raw_humidity / 10;
 80015c8:	4b2a      	ldr	r3, [pc, #168]	@ (8001674 <main+0x16c>)
 80015ca:	881b      	ldrh	r3, [r3, #0]
 80015cc:	4a2b      	ldr	r2, [pc, #172]	@ (800167c <main+0x174>)
 80015ce:	fba2 2303 	umull	r2, r3, r2, r3
 80015d2:	08db      	lsrs	r3, r3, #3
 80015d4:	b29b      	uxth	r3, r3
 80015d6:	ee07 3a90 	vmov	s15, r3
 80015da:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80015de:	4b28      	ldr	r3, [pc, #160]	@ (8001680 <main+0x178>)
 80015e0:	edc3 7a00 	vstr	s15, [r3]
        temperature = raw_temperature / 10;
 80015e4:	4b24      	ldr	r3, [pc, #144]	@ (8001678 <main+0x170>)
 80015e6:	881b      	ldrh	r3, [r3, #0]
 80015e8:	4a24      	ldr	r2, [pc, #144]	@ (800167c <main+0x174>)
 80015ea:	fba2 2303 	umull	r2, r3, r2, r3
 80015ee:	08db      	lsrs	r3, r3, #3
 80015f0:	b29b      	uxth	r3, r3
 80015f2:	ee07 3a90 	vmov	s15, r3
 80015f6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80015fa:	4b22      	ldr	r3, [pc, #136]	@ (8001684 <main+0x17c>)
 80015fc:	edc3 7a00 	vstr	s15, [r3]

        // ADC data (light and moisture level) are sampled by the DMA

        // DISPLAY DATA TO LCD
        Display_Value(0, 5, "%.1f", humidity);
 8001600:	4b1f      	ldr	r3, [pc, #124]	@ (8001680 <main+0x178>)
 8001602:	681b      	ldr	r3, [r3, #0]
 8001604:	4618      	mov	r0, r3
 8001606:	f7fe ffa7 	bl	8000558 <__aeabi_f2d>
 800160a:	4602      	mov	r2, r0
 800160c:	460b      	mov	r3, r1
 800160e:	e9cd 2300 	strd	r2, r3, [sp]
 8001612:	4a1d      	ldr	r2, [pc, #116]	@ (8001688 <main+0x180>)
 8001614:	2105      	movs	r1, #5
 8001616:	2000      	movs	r0, #0
 8001618:	f000 f83c 	bl	8001694 <Display_Value>
        Display_Value(1, 5, "%.1f", temperature);
 800161c:	4b19      	ldr	r3, [pc, #100]	@ (8001684 <main+0x17c>)
 800161e:	681b      	ldr	r3, [r3, #0]
 8001620:	4618      	mov	r0, r3
 8001622:	f7fe ff99 	bl	8000558 <__aeabi_f2d>
 8001626:	4602      	mov	r2, r0
 8001628:	460b      	mov	r3, r1
 800162a:	e9cd 2300 	strd	r2, r3, [sp]
 800162e:	4a16      	ldr	r2, [pc, #88]	@ (8001688 <main+0x180>)
 8001630:	2105      	movs	r1, #5
 8001632:	2001      	movs	r0, #1
 8001634:	f000 f82e 	bl	8001694 <Display_Value>
        Display_Value(2, 6, "%.lu", ADC_Buffer[0]);
 8001638:	4b14      	ldr	r3, [pc, #80]	@ (800168c <main+0x184>)
 800163a:	681b      	ldr	r3, [r3, #0]
 800163c:	4a14      	ldr	r2, [pc, #80]	@ (8001690 <main+0x188>)
 800163e:	2106      	movs	r1, #6
 8001640:	2002      	movs	r0, #2
 8001642:	f000 f827 	bl	8001694 <Display_Value>
        Display_Value(3, 6, "%.lu", ADC_Buffer[1]);
 8001646:	4b11      	ldr	r3, [pc, #68]	@ (800168c <main+0x184>)
 8001648:	685b      	ldr	r3, [r3, #4]
 800164a:	4a11      	ldr	r2, [pc, #68]	@ (8001690 <main+0x188>)
 800164c:	2106      	movs	r1, #6
 800164e:	2003      	movs	r0, #3
 8001650:	f000 f820 	bl	8001694 <Display_Value>

        delay_ms(3000);
 8001654:	f640 30b8 	movw	r0, #3000	@ 0xbb8
 8001658:	f7ff fccc 	bl	8000ff4 <delay_ms>
        AM2320_Wakeup();
 800165c:	bf00      	nop
 800165e:	e78e      	b.n	800157e <main+0x76>
 8001660:	080045ec 	.word	0x080045ec
 8001664:	080045f4 	.word	0x080045f4
 8001668:	080045fc 	.word	0x080045fc
 800166c:	08004604 	.word	0x08004604
 8001670:	200001ec 	.word	0x200001ec
 8001674:	200001f4 	.word	0x200001f4
 8001678:	200001f6 	.word	0x200001f6
 800167c:	cccccccd 	.word	0xcccccccd
 8001680:	200001f8 	.word	0x200001f8
 8001684:	200001fc 	.word	0x200001fc
 8001688:	0800460c 	.word	0x0800460c
 800168c:	200001e4 	.word	0x200001e4
 8001690:	08004614 	.word	0x08004614

08001694 <Display_Value>:
        // SEND DATA OVER USART

    }
}

void Display_Value(int row, int col, const char * format, ...) {
 8001694:	b40c      	push	{r2, r3}
 8001696:	b580      	push	{r7, lr}
 8001698:	b088      	sub	sp, #32
 800169a:	af00      	add	r7, sp, #0
 800169c:	6078      	str	r0, [r7, #4]
 800169e:	6039      	str	r1, [r7, #0]
	char buffer[16];

	va_list var;
	va_start(var, format); // read var after format
 80016a0:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 80016a4:	60fb      	str	r3, [r7, #12]
	vsprintf(buffer, format, var);
 80016a6:	f107 0310 	add.w	r3, r7, #16
 80016aa:	68fa      	ldr	r2, [r7, #12]
 80016ac:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 80016ae:	4618      	mov	r0, r3
 80016b0:	f000 feba 	bl	8002428 <vsiprintf>
	va_end(var);

	LCD_Cursor_Position(row, col);
 80016b4:	6839      	ldr	r1, [r7, #0]
 80016b6:	6878      	ldr	r0, [r7, #4]
 80016b8:	f7ff fdf3 	bl	80012a2 <LCD_Cursor_Position>
	LCD_Send_String(buffer);
 80016bc:	f107 0310 	add.w	r3, r7, #16
 80016c0:	4618      	mov	r0, r3
 80016c2:	f7ff fdd9 	bl	8001278 <LCD_Send_String>
}
 80016c6:	bf00      	nop
 80016c8:	3720      	adds	r7, #32
 80016ca:	46bd      	mov	sp, r7
 80016cc:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80016d0:	b002      	add	sp, #8
 80016d2:	4770      	bx	lr

080016d4 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80016d4:	b480      	push	{r7}
 80016d6:	af00      	add	r7, sp, #0
  return 1;
 80016d8:	2301      	movs	r3, #1
}
 80016da:	4618      	mov	r0, r3
 80016dc:	46bd      	mov	sp, r7
 80016de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016e2:	4770      	bx	lr

080016e4 <_kill>:

int _kill(int pid, int sig)
{
 80016e4:	b580      	push	{r7, lr}
 80016e6:	b082      	sub	sp, #8
 80016e8:	af00      	add	r7, sp, #0
 80016ea:	6078      	str	r0, [r7, #4]
 80016ec:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 80016ee:	f000 fef7 	bl	80024e0 <__errno>
 80016f2:	4603      	mov	r3, r0
 80016f4:	2216      	movs	r2, #22
 80016f6:	601a      	str	r2, [r3, #0]
  return -1;
 80016f8:	f04f 33ff 	mov.w	r3, #4294967295
}
 80016fc:	4618      	mov	r0, r3
 80016fe:	3708      	adds	r7, #8
 8001700:	46bd      	mov	sp, r7
 8001702:	bd80      	pop	{r7, pc}

08001704 <_exit>:

void _exit (int status)
{
 8001704:	b580      	push	{r7, lr}
 8001706:	b082      	sub	sp, #8
 8001708:	af00      	add	r7, sp, #0
 800170a:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 800170c:	f04f 31ff 	mov.w	r1, #4294967295
 8001710:	6878      	ldr	r0, [r7, #4]
 8001712:	f7ff ffe7 	bl	80016e4 <_kill>
  while (1) {}    /* Make sure we hang here */
 8001716:	bf00      	nop
 8001718:	e7fd      	b.n	8001716 <_exit+0x12>

0800171a <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800171a:	b580      	push	{r7, lr}
 800171c:	b086      	sub	sp, #24
 800171e:	af00      	add	r7, sp, #0
 8001720:	60f8      	str	r0, [r7, #12]
 8001722:	60b9      	str	r1, [r7, #8]
 8001724:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001726:	2300      	movs	r3, #0
 8001728:	617b      	str	r3, [r7, #20]
 800172a:	e00a      	b.n	8001742 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800172c:	f3af 8000 	nop.w
 8001730:	4601      	mov	r1, r0
 8001732:	68bb      	ldr	r3, [r7, #8]
 8001734:	1c5a      	adds	r2, r3, #1
 8001736:	60ba      	str	r2, [r7, #8]
 8001738:	b2ca      	uxtb	r2, r1
 800173a:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800173c:	697b      	ldr	r3, [r7, #20]
 800173e:	3301      	adds	r3, #1
 8001740:	617b      	str	r3, [r7, #20]
 8001742:	697a      	ldr	r2, [r7, #20]
 8001744:	687b      	ldr	r3, [r7, #4]
 8001746:	429a      	cmp	r2, r3
 8001748:	dbf0      	blt.n	800172c <_read+0x12>
  }

  return len;
 800174a:	687b      	ldr	r3, [r7, #4]
}
 800174c:	4618      	mov	r0, r3
 800174e:	3718      	adds	r7, #24
 8001750:	46bd      	mov	sp, r7
 8001752:	bd80      	pop	{r7, pc}

08001754 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001754:	b580      	push	{r7, lr}
 8001756:	b086      	sub	sp, #24
 8001758:	af00      	add	r7, sp, #0
 800175a:	60f8      	str	r0, [r7, #12]
 800175c:	60b9      	str	r1, [r7, #8]
 800175e:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001760:	2300      	movs	r3, #0
 8001762:	617b      	str	r3, [r7, #20]
 8001764:	e009      	b.n	800177a <_write+0x26>
  {
    __io_putchar(*ptr++);
 8001766:	68bb      	ldr	r3, [r7, #8]
 8001768:	1c5a      	adds	r2, r3, #1
 800176a:	60ba      	str	r2, [r7, #8]
 800176c:	781b      	ldrb	r3, [r3, #0]
 800176e:	4618      	mov	r0, r3
 8001770:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001774:	697b      	ldr	r3, [r7, #20]
 8001776:	3301      	adds	r3, #1
 8001778:	617b      	str	r3, [r7, #20]
 800177a:	697a      	ldr	r2, [r7, #20]
 800177c:	687b      	ldr	r3, [r7, #4]
 800177e:	429a      	cmp	r2, r3
 8001780:	dbf1      	blt.n	8001766 <_write+0x12>
  }
  return len;
 8001782:	687b      	ldr	r3, [r7, #4]
}
 8001784:	4618      	mov	r0, r3
 8001786:	3718      	adds	r7, #24
 8001788:	46bd      	mov	sp, r7
 800178a:	bd80      	pop	{r7, pc}

0800178c <_close>:

int _close(int file)
{
 800178c:	b480      	push	{r7}
 800178e:	b083      	sub	sp, #12
 8001790:	af00      	add	r7, sp, #0
 8001792:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8001794:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001798:	4618      	mov	r0, r3
 800179a:	370c      	adds	r7, #12
 800179c:	46bd      	mov	sp, r7
 800179e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017a2:	4770      	bx	lr

080017a4 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80017a4:	b480      	push	{r7}
 80017a6:	b083      	sub	sp, #12
 80017a8:	af00      	add	r7, sp, #0
 80017aa:	6078      	str	r0, [r7, #4]
 80017ac:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80017ae:	683b      	ldr	r3, [r7, #0]
 80017b0:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80017b4:	605a      	str	r2, [r3, #4]
  return 0;
 80017b6:	2300      	movs	r3, #0
}
 80017b8:	4618      	mov	r0, r3
 80017ba:	370c      	adds	r7, #12
 80017bc:	46bd      	mov	sp, r7
 80017be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017c2:	4770      	bx	lr

080017c4 <_isatty>:

int _isatty(int file)
{
 80017c4:	b480      	push	{r7}
 80017c6:	b083      	sub	sp, #12
 80017c8:	af00      	add	r7, sp, #0
 80017ca:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80017cc:	2301      	movs	r3, #1
}
 80017ce:	4618      	mov	r0, r3
 80017d0:	370c      	adds	r7, #12
 80017d2:	46bd      	mov	sp, r7
 80017d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017d8:	4770      	bx	lr

080017da <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80017da:	b480      	push	{r7}
 80017dc:	b085      	sub	sp, #20
 80017de:	af00      	add	r7, sp, #0
 80017e0:	60f8      	str	r0, [r7, #12]
 80017e2:	60b9      	str	r1, [r7, #8]
 80017e4:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80017e6:	2300      	movs	r3, #0
}
 80017e8:	4618      	mov	r0, r3
 80017ea:	3714      	adds	r7, #20
 80017ec:	46bd      	mov	sp, r7
 80017ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017f2:	4770      	bx	lr

080017f4 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80017f4:	b580      	push	{r7, lr}
 80017f6:	b086      	sub	sp, #24
 80017f8:	af00      	add	r7, sp, #0
 80017fa:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80017fc:	4a14      	ldr	r2, [pc, #80]	@ (8001850 <_sbrk+0x5c>)
 80017fe:	4b15      	ldr	r3, [pc, #84]	@ (8001854 <_sbrk+0x60>)
 8001800:	1ad3      	subs	r3, r2, r3
 8001802:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001804:	697b      	ldr	r3, [r7, #20]
 8001806:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001808:	4b13      	ldr	r3, [pc, #76]	@ (8001858 <_sbrk+0x64>)
 800180a:	681b      	ldr	r3, [r3, #0]
 800180c:	2b00      	cmp	r3, #0
 800180e:	d102      	bne.n	8001816 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8001810:	4b11      	ldr	r3, [pc, #68]	@ (8001858 <_sbrk+0x64>)
 8001812:	4a12      	ldr	r2, [pc, #72]	@ (800185c <_sbrk+0x68>)
 8001814:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8001816:	4b10      	ldr	r3, [pc, #64]	@ (8001858 <_sbrk+0x64>)
 8001818:	681a      	ldr	r2, [r3, #0]
 800181a:	687b      	ldr	r3, [r7, #4]
 800181c:	4413      	add	r3, r2
 800181e:	693a      	ldr	r2, [r7, #16]
 8001820:	429a      	cmp	r2, r3
 8001822:	d207      	bcs.n	8001834 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001824:	f000 fe5c 	bl	80024e0 <__errno>
 8001828:	4603      	mov	r3, r0
 800182a:	220c      	movs	r2, #12
 800182c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800182e:	f04f 33ff 	mov.w	r3, #4294967295
 8001832:	e009      	b.n	8001848 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001834:	4b08      	ldr	r3, [pc, #32]	@ (8001858 <_sbrk+0x64>)
 8001836:	681b      	ldr	r3, [r3, #0]
 8001838:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800183a:	4b07      	ldr	r3, [pc, #28]	@ (8001858 <_sbrk+0x64>)
 800183c:	681a      	ldr	r2, [r3, #0]
 800183e:	687b      	ldr	r3, [r7, #4]
 8001840:	4413      	add	r3, r2
 8001842:	4a05      	ldr	r2, [pc, #20]	@ (8001858 <_sbrk+0x64>)
 8001844:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8001846:	68fb      	ldr	r3, [r7, #12]
}
 8001848:	4618      	mov	r0, r3
 800184a:	3718      	adds	r7, #24
 800184c:	46bd      	mov	sp, r7
 800184e:	bd80      	pop	{r7, pc}
 8001850:	20018000 	.word	0x20018000
 8001854:	00000400 	.word	0x00000400
 8001858:	20000200 	.word	0x20000200
 800185c:	20000350 	.word	0x20000350

08001860 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8001860:	b480      	push	{r7}
 8001862:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8001864:	4b06      	ldr	r3, [pc, #24]	@ (8001880 <SystemInit+0x20>)
 8001866:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800186a:	4a05      	ldr	r2, [pc, #20]	@ (8001880 <SystemInit+0x20>)
 800186c:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8001870:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8001874:	bf00      	nop
 8001876:	46bd      	mov	sp, r7
 8001878:	f85d 7b04 	ldr.w	r7, [sp], #4
 800187c:	4770      	bx	lr
 800187e:	bf00      	nop
 8001880:	e000ed00 	.word	0xe000ed00

08001884 <USART1_Init>:
 *      Author: esthe
 */

#include "usart.h"

void USART1_Init(void) {
 8001884:	b480      	push	{r7}
 8001886:	af00      	add	r7, sp, #0
    USART1->CR1 &= ~USART_CR1_UE;  // Disable USART for configuration
 8001888:	4b18      	ldr	r3, [pc, #96]	@ (80018ec <USART1_Init+0x68>)
 800188a:	68db      	ldr	r3, [r3, #12]
 800188c:	4a17      	ldr	r2, [pc, #92]	@ (80018ec <USART1_Init+0x68>)
 800188e:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8001892:	60d3      	str	r3, [r2, #12]

    USART1->CR1 &= ~USART_CR1_M;  // Word length = 8 bits
 8001894:	4b15      	ldr	r3, [pc, #84]	@ (80018ec <USART1_Init+0x68>)
 8001896:	68db      	ldr	r3, [r3, #12]
 8001898:	4a14      	ldr	r2, [pc, #80]	@ (80018ec <USART1_Init+0x68>)
 800189a:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800189e:	60d3      	str	r3, [r2, #12]
    USART1->CR1 &= ~USART_CR1_PCE;  // No parity control
 80018a0:	4b12      	ldr	r3, [pc, #72]	@ (80018ec <USART1_Init+0x68>)
 80018a2:	68db      	ldr	r3, [r3, #12]
 80018a4:	4a11      	ldr	r2, [pc, #68]	@ (80018ec <USART1_Init+0x68>)
 80018a6:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 80018aa:	60d3      	str	r3, [r2, #12]
    USART1->CR2 &= ~USART_CR2_STOP;  // 1 stop bit
 80018ac:	4b0f      	ldr	r3, [pc, #60]	@ (80018ec <USART1_Init+0x68>)
 80018ae:	691b      	ldr	r3, [r3, #16]
 80018b0:	4a0e      	ldr	r2, [pc, #56]	@ (80018ec <USART1_Init+0x68>)
 80018b2:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 80018b6:	6113      	str	r3, [r2, #16]

    // Baud rate setup (assuming 16 MHz clock and 115200 baud rate)
    USART1->BRR = 138;
 80018b8:	4b0c      	ldr	r3, [pc, #48]	@ (80018ec <USART1_Init+0x68>)
 80018ba:	228a      	movs	r2, #138	@ 0x8a
 80018bc:	609a      	str	r2, [r3, #8]

    USART1->CR1 |= USART_CR1_TE;  // Enable transmitter
 80018be:	4b0b      	ldr	r3, [pc, #44]	@ (80018ec <USART1_Init+0x68>)
 80018c0:	68db      	ldr	r3, [r3, #12]
 80018c2:	4a0a      	ldr	r2, [pc, #40]	@ (80018ec <USART1_Init+0x68>)
 80018c4:	f043 0308 	orr.w	r3, r3, #8
 80018c8:	60d3      	str	r3, [r2, #12]
    USART1->CR1 |= USART_CR1_RE;  // Enable receiver (optional, if needed)
 80018ca:	4b08      	ldr	r3, [pc, #32]	@ (80018ec <USART1_Init+0x68>)
 80018cc:	68db      	ldr	r3, [r3, #12]
 80018ce:	4a07      	ldr	r2, [pc, #28]	@ (80018ec <USART1_Init+0x68>)
 80018d0:	f043 0304 	orr.w	r3, r3, #4
 80018d4:	60d3      	str	r3, [r2, #12]

    USART1->CR1 |= USART_CR1_UE;  // Enable USART1
 80018d6:	4b05      	ldr	r3, [pc, #20]	@ (80018ec <USART1_Init+0x68>)
 80018d8:	68db      	ldr	r3, [r3, #12]
 80018da:	4a04      	ldr	r2, [pc, #16]	@ (80018ec <USART1_Init+0x68>)
 80018dc:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 80018e0:	60d3      	str	r3, [r2, #12]
}
 80018e2:	bf00      	nop
 80018e4:	46bd      	mov	sp, r7
 80018e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018ea:	4770      	bx	lr
 80018ec:	40011000 	.word	0x40011000

080018f0 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack    		 /* set stack pointer */
 80018f0:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8001928 <LoopFillZerobss+0xe>

/* Call the clock system initialization function.*/
  bl  SystemInit  
 80018f4:	f7ff ffb4 	bl	8001860 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 80018f8:	480c      	ldr	r0, [pc, #48]	@ (800192c <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 80018fa:	490d      	ldr	r1, [pc, #52]	@ (8001930 <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 80018fc:	4a0d      	ldr	r2, [pc, #52]	@ (8001934 <LoopFillZerobss+0x1a>)
  movs r3, #0
 80018fe:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001900:	e002      	b.n	8001908 <LoopCopyDataInit>

08001902 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8001902:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001904:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001906:	3304      	adds	r3, #4

08001908 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001908:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800190a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800190c:	d3f9      	bcc.n	8001902 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800190e:	4a0a      	ldr	r2, [pc, #40]	@ (8001938 <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 8001910:	4c0a      	ldr	r4, [pc, #40]	@ (800193c <LoopFillZerobss+0x22>)
  movs r3, #0
 8001912:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001914:	e001      	b.n	800191a <LoopFillZerobss>

08001916 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8001916:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001918:	3204      	adds	r2, #4

0800191a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800191a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800191c:	d3fb      	bcc.n	8001916 <FillZerobss>
 
/* Call static constructors */
    bl __libc_init_array
 800191e:	f000 fde5 	bl	80024ec <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8001922:	f7ff fdf1 	bl	8001508 <main>
  bx  lr    
 8001926:	4770      	bx	lr
  ldr   sp, =_estack    		 /* set stack pointer */
 8001928:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 800192c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8001930:	200001c8 	.word	0x200001c8
  ldr r2, =_sidata
 8001934:	08004998 	.word	0x08004998
  ldr r2, =_sbss
 8001938:	200001c8 	.word	0x200001c8
  ldr r4, =_ebss
 800193c:	20000350 	.word	0x20000350

08001940 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8001940:	e7fe      	b.n	8001940 <ADC_IRQHandler>

08001942 <__cvt>:
 8001942:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001946:	ec57 6b10 	vmov	r6, r7, d0
 800194a:	2f00      	cmp	r7, #0
 800194c:	460c      	mov	r4, r1
 800194e:	4619      	mov	r1, r3
 8001950:	463b      	mov	r3, r7
 8001952:	bfbb      	ittet	lt
 8001954:	f107 4300 	addlt.w	r3, r7, #2147483648	@ 0x80000000
 8001958:	461f      	movlt	r7, r3
 800195a:	2300      	movge	r3, #0
 800195c:	232d      	movlt	r3, #45	@ 0x2d
 800195e:	700b      	strb	r3, [r1, #0]
 8001960:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8001962:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 8001966:	4691      	mov	r9, r2
 8001968:	f023 0820 	bic.w	r8, r3, #32
 800196c:	bfbc      	itt	lt
 800196e:	4632      	movlt	r2, r6
 8001970:	4616      	movlt	r6, r2
 8001972:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8001976:	d005      	beq.n	8001984 <__cvt+0x42>
 8001978:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 800197c:	d100      	bne.n	8001980 <__cvt+0x3e>
 800197e:	3401      	adds	r4, #1
 8001980:	2102      	movs	r1, #2
 8001982:	e000      	b.n	8001986 <__cvt+0x44>
 8001984:	2103      	movs	r1, #3
 8001986:	ab03      	add	r3, sp, #12
 8001988:	9301      	str	r3, [sp, #4]
 800198a:	ab02      	add	r3, sp, #8
 800198c:	9300      	str	r3, [sp, #0]
 800198e:	ec47 6b10 	vmov	d0, r6, r7
 8001992:	4653      	mov	r3, sl
 8001994:	4622      	mov	r2, r4
 8001996:	f000 fe5b 	bl	8002650 <_dtoa_r>
 800199a:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 800199e:	4605      	mov	r5, r0
 80019a0:	d119      	bne.n	80019d6 <__cvt+0x94>
 80019a2:	f019 0f01 	tst.w	r9, #1
 80019a6:	d00e      	beq.n	80019c6 <__cvt+0x84>
 80019a8:	eb00 0904 	add.w	r9, r0, r4
 80019ac:	2200      	movs	r2, #0
 80019ae:	2300      	movs	r3, #0
 80019b0:	4630      	mov	r0, r6
 80019b2:	4639      	mov	r1, r7
 80019b4:	f7ff f890 	bl	8000ad8 <__aeabi_dcmpeq>
 80019b8:	b108      	cbz	r0, 80019be <__cvt+0x7c>
 80019ba:	f8cd 900c 	str.w	r9, [sp, #12]
 80019be:	2230      	movs	r2, #48	@ 0x30
 80019c0:	9b03      	ldr	r3, [sp, #12]
 80019c2:	454b      	cmp	r3, r9
 80019c4:	d31e      	bcc.n	8001a04 <__cvt+0xc2>
 80019c6:	9b03      	ldr	r3, [sp, #12]
 80019c8:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80019ca:	1b5b      	subs	r3, r3, r5
 80019cc:	4628      	mov	r0, r5
 80019ce:	6013      	str	r3, [r2, #0]
 80019d0:	b004      	add	sp, #16
 80019d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80019d6:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 80019da:	eb00 0904 	add.w	r9, r0, r4
 80019de:	d1e5      	bne.n	80019ac <__cvt+0x6a>
 80019e0:	7803      	ldrb	r3, [r0, #0]
 80019e2:	2b30      	cmp	r3, #48	@ 0x30
 80019e4:	d10a      	bne.n	80019fc <__cvt+0xba>
 80019e6:	2200      	movs	r2, #0
 80019e8:	2300      	movs	r3, #0
 80019ea:	4630      	mov	r0, r6
 80019ec:	4639      	mov	r1, r7
 80019ee:	f7ff f873 	bl	8000ad8 <__aeabi_dcmpeq>
 80019f2:	b918      	cbnz	r0, 80019fc <__cvt+0xba>
 80019f4:	f1c4 0401 	rsb	r4, r4, #1
 80019f8:	f8ca 4000 	str.w	r4, [sl]
 80019fc:	f8da 3000 	ldr.w	r3, [sl]
 8001a00:	4499      	add	r9, r3
 8001a02:	e7d3      	b.n	80019ac <__cvt+0x6a>
 8001a04:	1c59      	adds	r1, r3, #1
 8001a06:	9103      	str	r1, [sp, #12]
 8001a08:	701a      	strb	r2, [r3, #0]
 8001a0a:	e7d9      	b.n	80019c0 <__cvt+0x7e>

08001a0c <__exponent>:
 8001a0c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001a0e:	2900      	cmp	r1, #0
 8001a10:	bfba      	itte	lt
 8001a12:	4249      	neglt	r1, r1
 8001a14:	232d      	movlt	r3, #45	@ 0x2d
 8001a16:	232b      	movge	r3, #43	@ 0x2b
 8001a18:	2909      	cmp	r1, #9
 8001a1a:	7002      	strb	r2, [r0, #0]
 8001a1c:	7043      	strb	r3, [r0, #1]
 8001a1e:	dd29      	ble.n	8001a74 <__exponent+0x68>
 8001a20:	f10d 0307 	add.w	r3, sp, #7
 8001a24:	461d      	mov	r5, r3
 8001a26:	270a      	movs	r7, #10
 8001a28:	461a      	mov	r2, r3
 8001a2a:	fbb1 f6f7 	udiv	r6, r1, r7
 8001a2e:	fb07 1416 	mls	r4, r7, r6, r1
 8001a32:	3430      	adds	r4, #48	@ 0x30
 8001a34:	f802 4c01 	strb.w	r4, [r2, #-1]
 8001a38:	460c      	mov	r4, r1
 8001a3a:	2c63      	cmp	r4, #99	@ 0x63
 8001a3c:	f103 33ff 	add.w	r3, r3, #4294967295
 8001a40:	4631      	mov	r1, r6
 8001a42:	dcf1      	bgt.n	8001a28 <__exponent+0x1c>
 8001a44:	3130      	adds	r1, #48	@ 0x30
 8001a46:	1e94      	subs	r4, r2, #2
 8001a48:	f803 1c01 	strb.w	r1, [r3, #-1]
 8001a4c:	1c41      	adds	r1, r0, #1
 8001a4e:	4623      	mov	r3, r4
 8001a50:	42ab      	cmp	r3, r5
 8001a52:	d30a      	bcc.n	8001a6a <__exponent+0x5e>
 8001a54:	f10d 0309 	add.w	r3, sp, #9
 8001a58:	1a9b      	subs	r3, r3, r2
 8001a5a:	42ac      	cmp	r4, r5
 8001a5c:	bf88      	it	hi
 8001a5e:	2300      	movhi	r3, #0
 8001a60:	3302      	adds	r3, #2
 8001a62:	4403      	add	r3, r0
 8001a64:	1a18      	subs	r0, r3, r0
 8001a66:	b003      	add	sp, #12
 8001a68:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001a6a:	f813 6b01 	ldrb.w	r6, [r3], #1
 8001a6e:	f801 6f01 	strb.w	r6, [r1, #1]!
 8001a72:	e7ed      	b.n	8001a50 <__exponent+0x44>
 8001a74:	2330      	movs	r3, #48	@ 0x30
 8001a76:	3130      	adds	r1, #48	@ 0x30
 8001a78:	7083      	strb	r3, [r0, #2]
 8001a7a:	70c1      	strb	r1, [r0, #3]
 8001a7c:	1d03      	adds	r3, r0, #4
 8001a7e:	e7f1      	b.n	8001a64 <__exponent+0x58>

08001a80 <_printf_float>:
 8001a80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001a84:	b08d      	sub	sp, #52	@ 0x34
 8001a86:	460c      	mov	r4, r1
 8001a88:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8001a8c:	4616      	mov	r6, r2
 8001a8e:	461f      	mov	r7, r3
 8001a90:	4605      	mov	r5, r0
 8001a92:	f000 fcdb 	bl	800244c <_localeconv_r>
 8001a96:	6803      	ldr	r3, [r0, #0]
 8001a98:	9304      	str	r3, [sp, #16]
 8001a9a:	4618      	mov	r0, r3
 8001a9c:	f7fe fbf0 	bl	8000280 <strlen>
 8001aa0:	2300      	movs	r3, #0
 8001aa2:	930a      	str	r3, [sp, #40]	@ 0x28
 8001aa4:	f8d8 3000 	ldr.w	r3, [r8]
 8001aa8:	9005      	str	r0, [sp, #20]
 8001aaa:	3307      	adds	r3, #7
 8001aac:	f023 0307 	bic.w	r3, r3, #7
 8001ab0:	f103 0208 	add.w	r2, r3, #8
 8001ab4:	f894 a018 	ldrb.w	sl, [r4, #24]
 8001ab8:	f8d4 b000 	ldr.w	fp, [r4]
 8001abc:	f8c8 2000 	str.w	r2, [r8]
 8001ac0:	e9d3 8900 	ldrd	r8, r9, [r3]
 8001ac4:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 8001ac8:	9307      	str	r3, [sp, #28]
 8001aca:	f8cd 8018 	str.w	r8, [sp, #24]
 8001ace:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 8001ad2:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8001ad6:	4b9c      	ldr	r3, [pc, #624]	@ (8001d48 <_printf_float+0x2c8>)
 8001ad8:	f04f 32ff 	mov.w	r2, #4294967295
 8001adc:	f7ff f82e 	bl	8000b3c <__aeabi_dcmpun>
 8001ae0:	bb70      	cbnz	r0, 8001b40 <_printf_float+0xc0>
 8001ae2:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8001ae6:	4b98      	ldr	r3, [pc, #608]	@ (8001d48 <_printf_float+0x2c8>)
 8001ae8:	f04f 32ff 	mov.w	r2, #4294967295
 8001aec:	f7ff f808 	bl	8000b00 <__aeabi_dcmple>
 8001af0:	bb30      	cbnz	r0, 8001b40 <_printf_float+0xc0>
 8001af2:	2200      	movs	r2, #0
 8001af4:	2300      	movs	r3, #0
 8001af6:	4640      	mov	r0, r8
 8001af8:	4649      	mov	r1, r9
 8001afa:	f7fe fff7 	bl	8000aec <__aeabi_dcmplt>
 8001afe:	b110      	cbz	r0, 8001b06 <_printf_float+0x86>
 8001b00:	232d      	movs	r3, #45	@ 0x2d
 8001b02:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001b06:	4a91      	ldr	r2, [pc, #580]	@ (8001d4c <_printf_float+0x2cc>)
 8001b08:	4b91      	ldr	r3, [pc, #580]	@ (8001d50 <_printf_float+0x2d0>)
 8001b0a:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 8001b0e:	bf94      	ite	ls
 8001b10:	4690      	movls	r8, r2
 8001b12:	4698      	movhi	r8, r3
 8001b14:	2303      	movs	r3, #3
 8001b16:	6123      	str	r3, [r4, #16]
 8001b18:	f02b 0304 	bic.w	r3, fp, #4
 8001b1c:	6023      	str	r3, [r4, #0]
 8001b1e:	f04f 0900 	mov.w	r9, #0
 8001b22:	9700      	str	r7, [sp, #0]
 8001b24:	4633      	mov	r3, r6
 8001b26:	aa0b      	add	r2, sp, #44	@ 0x2c
 8001b28:	4621      	mov	r1, r4
 8001b2a:	4628      	mov	r0, r5
 8001b2c:	f000 f9d2 	bl	8001ed4 <_printf_common>
 8001b30:	3001      	adds	r0, #1
 8001b32:	f040 808d 	bne.w	8001c50 <_printf_float+0x1d0>
 8001b36:	f04f 30ff 	mov.w	r0, #4294967295
 8001b3a:	b00d      	add	sp, #52	@ 0x34
 8001b3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001b40:	4642      	mov	r2, r8
 8001b42:	464b      	mov	r3, r9
 8001b44:	4640      	mov	r0, r8
 8001b46:	4649      	mov	r1, r9
 8001b48:	f7fe fff8 	bl	8000b3c <__aeabi_dcmpun>
 8001b4c:	b140      	cbz	r0, 8001b60 <_printf_float+0xe0>
 8001b4e:	464b      	mov	r3, r9
 8001b50:	2b00      	cmp	r3, #0
 8001b52:	bfbc      	itt	lt
 8001b54:	232d      	movlt	r3, #45	@ 0x2d
 8001b56:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 8001b5a:	4a7e      	ldr	r2, [pc, #504]	@ (8001d54 <_printf_float+0x2d4>)
 8001b5c:	4b7e      	ldr	r3, [pc, #504]	@ (8001d58 <_printf_float+0x2d8>)
 8001b5e:	e7d4      	b.n	8001b0a <_printf_float+0x8a>
 8001b60:	6863      	ldr	r3, [r4, #4]
 8001b62:	f00a 02df 	and.w	r2, sl, #223	@ 0xdf
 8001b66:	9206      	str	r2, [sp, #24]
 8001b68:	1c5a      	adds	r2, r3, #1
 8001b6a:	d13b      	bne.n	8001be4 <_printf_float+0x164>
 8001b6c:	2306      	movs	r3, #6
 8001b6e:	6063      	str	r3, [r4, #4]
 8001b70:	f44b 6280 	orr.w	r2, fp, #1024	@ 0x400
 8001b74:	2300      	movs	r3, #0
 8001b76:	6022      	str	r2, [r4, #0]
 8001b78:	9303      	str	r3, [sp, #12]
 8001b7a:	ab0a      	add	r3, sp, #40	@ 0x28
 8001b7c:	e9cd a301 	strd	sl, r3, [sp, #4]
 8001b80:	ab09      	add	r3, sp, #36	@ 0x24
 8001b82:	9300      	str	r3, [sp, #0]
 8001b84:	6861      	ldr	r1, [r4, #4]
 8001b86:	ec49 8b10 	vmov	d0, r8, r9
 8001b8a:	f10d 0323 	add.w	r3, sp, #35	@ 0x23
 8001b8e:	4628      	mov	r0, r5
 8001b90:	f7ff fed7 	bl	8001942 <__cvt>
 8001b94:	9b06      	ldr	r3, [sp, #24]
 8001b96:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8001b98:	2b47      	cmp	r3, #71	@ 0x47
 8001b9a:	4680      	mov	r8, r0
 8001b9c:	d129      	bne.n	8001bf2 <_printf_float+0x172>
 8001b9e:	1cc8      	adds	r0, r1, #3
 8001ba0:	db02      	blt.n	8001ba8 <_printf_float+0x128>
 8001ba2:	6863      	ldr	r3, [r4, #4]
 8001ba4:	4299      	cmp	r1, r3
 8001ba6:	dd41      	ble.n	8001c2c <_printf_float+0x1ac>
 8001ba8:	f1aa 0a02 	sub.w	sl, sl, #2
 8001bac:	fa5f fa8a 	uxtb.w	sl, sl
 8001bb0:	3901      	subs	r1, #1
 8001bb2:	4652      	mov	r2, sl
 8001bb4:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 8001bb8:	9109      	str	r1, [sp, #36]	@ 0x24
 8001bba:	f7ff ff27 	bl	8001a0c <__exponent>
 8001bbe:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8001bc0:	1813      	adds	r3, r2, r0
 8001bc2:	2a01      	cmp	r2, #1
 8001bc4:	4681      	mov	r9, r0
 8001bc6:	6123      	str	r3, [r4, #16]
 8001bc8:	dc02      	bgt.n	8001bd0 <_printf_float+0x150>
 8001bca:	6822      	ldr	r2, [r4, #0]
 8001bcc:	07d2      	lsls	r2, r2, #31
 8001bce:	d501      	bpl.n	8001bd4 <_printf_float+0x154>
 8001bd0:	3301      	adds	r3, #1
 8001bd2:	6123      	str	r3, [r4, #16]
 8001bd4:	f89d 3023 	ldrb.w	r3, [sp, #35]	@ 0x23
 8001bd8:	2b00      	cmp	r3, #0
 8001bda:	d0a2      	beq.n	8001b22 <_printf_float+0xa2>
 8001bdc:	232d      	movs	r3, #45	@ 0x2d
 8001bde:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001be2:	e79e      	b.n	8001b22 <_printf_float+0xa2>
 8001be4:	9a06      	ldr	r2, [sp, #24]
 8001be6:	2a47      	cmp	r2, #71	@ 0x47
 8001be8:	d1c2      	bne.n	8001b70 <_printf_float+0xf0>
 8001bea:	2b00      	cmp	r3, #0
 8001bec:	d1c0      	bne.n	8001b70 <_printf_float+0xf0>
 8001bee:	2301      	movs	r3, #1
 8001bf0:	e7bd      	b.n	8001b6e <_printf_float+0xee>
 8001bf2:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8001bf6:	d9db      	bls.n	8001bb0 <_printf_float+0x130>
 8001bf8:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 8001bfc:	d118      	bne.n	8001c30 <_printf_float+0x1b0>
 8001bfe:	2900      	cmp	r1, #0
 8001c00:	6863      	ldr	r3, [r4, #4]
 8001c02:	dd0b      	ble.n	8001c1c <_printf_float+0x19c>
 8001c04:	6121      	str	r1, [r4, #16]
 8001c06:	b913      	cbnz	r3, 8001c0e <_printf_float+0x18e>
 8001c08:	6822      	ldr	r2, [r4, #0]
 8001c0a:	07d0      	lsls	r0, r2, #31
 8001c0c:	d502      	bpl.n	8001c14 <_printf_float+0x194>
 8001c0e:	3301      	adds	r3, #1
 8001c10:	440b      	add	r3, r1
 8001c12:	6123      	str	r3, [r4, #16]
 8001c14:	65a1      	str	r1, [r4, #88]	@ 0x58
 8001c16:	f04f 0900 	mov.w	r9, #0
 8001c1a:	e7db      	b.n	8001bd4 <_printf_float+0x154>
 8001c1c:	b913      	cbnz	r3, 8001c24 <_printf_float+0x1a4>
 8001c1e:	6822      	ldr	r2, [r4, #0]
 8001c20:	07d2      	lsls	r2, r2, #31
 8001c22:	d501      	bpl.n	8001c28 <_printf_float+0x1a8>
 8001c24:	3302      	adds	r3, #2
 8001c26:	e7f4      	b.n	8001c12 <_printf_float+0x192>
 8001c28:	2301      	movs	r3, #1
 8001c2a:	e7f2      	b.n	8001c12 <_printf_float+0x192>
 8001c2c:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 8001c30:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8001c32:	4299      	cmp	r1, r3
 8001c34:	db05      	blt.n	8001c42 <_printf_float+0x1c2>
 8001c36:	6823      	ldr	r3, [r4, #0]
 8001c38:	6121      	str	r1, [r4, #16]
 8001c3a:	07d8      	lsls	r0, r3, #31
 8001c3c:	d5ea      	bpl.n	8001c14 <_printf_float+0x194>
 8001c3e:	1c4b      	adds	r3, r1, #1
 8001c40:	e7e7      	b.n	8001c12 <_printf_float+0x192>
 8001c42:	2900      	cmp	r1, #0
 8001c44:	bfd4      	ite	le
 8001c46:	f1c1 0202 	rsble	r2, r1, #2
 8001c4a:	2201      	movgt	r2, #1
 8001c4c:	4413      	add	r3, r2
 8001c4e:	e7e0      	b.n	8001c12 <_printf_float+0x192>
 8001c50:	6823      	ldr	r3, [r4, #0]
 8001c52:	055a      	lsls	r2, r3, #21
 8001c54:	d407      	bmi.n	8001c66 <_printf_float+0x1e6>
 8001c56:	6923      	ldr	r3, [r4, #16]
 8001c58:	4642      	mov	r2, r8
 8001c5a:	4631      	mov	r1, r6
 8001c5c:	4628      	mov	r0, r5
 8001c5e:	47b8      	blx	r7
 8001c60:	3001      	adds	r0, #1
 8001c62:	d12b      	bne.n	8001cbc <_printf_float+0x23c>
 8001c64:	e767      	b.n	8001b36 <_printf_float+0xb6>
 8001c66:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8001c6a:	f240 80dd 	bls.w	8001e28 <_printf_float+0x3a8>
 8001c6e:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8001c72:	2200      	movs	r2, #0
 8001c74:	2300      	movs	r3, #0
 8001c76:	f7fe ff2f 	bl	8000ad8 <__aeabi_dcmpeq>
 8001c7a:	2800      	cmp	r0, #0
 8001c7c:	d033      	beq.n	8001ce6 <_printf_float+0x266>
 8001c7e:	4a37      	ldr	r2, [pc, #220]	@ (8001d5c <_printf_float+0x2dc>)
 8001c80:	2301      	movs	r3, #1
 8001c82:	4631      	mov	r1, r6
 8001c84:	4628      	mov	r0, r5
 8001c86:	47b8      	blx	r7
 8001c88:	3001      	adds	r0, #1
 8001c8a:	f43f af54 	beq.w	8001b36 <_printf_float+0xb6>
 8001c8e:	e9dd 3809 	ldrd	r3, r8, [sp, #36]	@ 0x24
 8001c92:	4543      	cmp	r3, r8
 8001c94:	db02      	blt.n	8001c9c <_printf_float+0x21c>
 8001c96:	6823      	ldr	r3, [r4, #0]
 8001c98:	07d8      	lsls	r0, r3, #31
 8001c9a:	d50f      	bpl.n	8001cbc <_printf_float+0x23c>
 8001c9c:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8001ca0:	4631      	mov	r1, r6
 8001ca2:	4628      	mov	r0, r5
 8001ca4:	47b8      	blx	r7
 8001ca6:	3001      	adds	r0, #1
 8001ca8:	f43f af45 	beq.w	8001b36 <_printf_float+0xb6>
 8001cac:	f04f 0900 	mov.w	r9, #0
 8001cb0:	f108 38ff 	add.w	r8, r8, #4294967295
 8001cb4:	f104 0a1a 	add.w	sl, r4, #26
 8001cb8:	45c8      	cmp	r8, r9
 8001cba:	dc09      	bgt.n	8001cd0 <_printf_float+0x250>
 8001cbc:	6823      	ldr	r3, [r4, #0]
 8001cbe:	079b      	lsls	r3, r3, #30
 8001cc0:	f100 8103 	bmi.w	8001eca <_printf_float+0x44a>
 8001cc4:	68e0      	ldr	r0, [r4, #12]
 8001cc6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8001cc8:	4298      	cmp	r0, r3
 8001cca:	bfb8      	it	lt
 8001ccc:	4618      	movlt	r0, r3
 8001cce:	e734      	b.n	8001b3a <_printf_float+0xba>
 8001cd0:	2301      	movs	r3, #1
 8001cd2:	4652      	mov	r2, sl
 8001cd4:	4631      	mov	r1, r6
 8001cd6:	4628      	mov	r0, r5
 8001cd8:	47b8      	blx	r7
 8001cda:	3001      	adds	r0, #1
 8001cdc:	f43f af2b 	beq.w	8001b36 <_printf_float+0xb6>
 8001ce0:	f109 0901 	add.w	r9, r9, #1
 8001ce4:	e7e8      	b.n	8001cb8 <_printf_float+0x238>
 8001ce6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001ce8:	2b00      	cmp	r3, #0
 8001cea:	dc39      	bgt.n	8001d60 <_printf_float+0x2e0>
 8001cec:	4a1b      	ldr	r2, [pc, #108]	@ (8001d5c <_printf_float+0x2dc>)
 8001cee:	2301      	movs	r3, #1
 8001cf0:	4631      	mov	r1, r6
 8001cf2:	4628      	mov	r0, r5
 8001cf4:	47b8      	blx	r7
 8001cf6:	3001      	adds	r0, #1
 8001cf8:	f43f af1d 	beq.w	8001b36 <_printf_float+0xb6>
 8001cfc:	e9dd 3909 	ldrd	r3, r9, [sp, #36]	@ 0x24
 8001d00:	ea59 0303 	orrs.w	r3, r9, r3
 8001d04:	d102      	bne.n	8001d0c <_printf_float+0x28c>
 8001d06:	6823      	ldr	r3, [r4, #0]
 8001d08:	07d9      	lsls	r1, r3, #31
 8001d0a:	d5d7      	bpl.n	8001cbc <_printf_float+0x23c>
 8001d0c:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8001d10:	4631      	mov	r1, r6
 8001d12:	4628      	mov	r0, r5
 8001d14:	47b8      	blx	r7
 8001d16:	3001      	adds	r0, #1
 8001d18:	f43f af0d 	beq.w	8001b36 <_printf_float+0xb6>
 8001d1c:	f04f 0a00 	mov.w	sl, #0
 8001d20:	f104 0b1a 	add.w	fp, r4, #26
 8001d24:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001d26:	425b      	negs	r3, r3
 8001d28:	4553      	cmp	r3, sl
 8001d2a:	dc01      	bgt.n	8001d30 <_printf_float+0x2b0>
 8001d2c:	464b      	mov	r3, r9
 8001d2e:	e793      	b.n	8001c58 <_printf_float+0x1d8>
 8001d30:	2301      	movs	r3, #1
 8001d32:	465a      	mov	r2, fp
 8001d34:	4631      	mov	r1, r6
 8001d36:	4628      	mov	r0, r5
 8001d38:	47b8      	blx	r7
 8001d3a:	3001      	adds	r0, #1
 8001d3c:	f43f aefb 	beq.w	8001b36 <_printf_float+0xb6>
 8001d40:	f10a 0a01 	add.w	sl, sl, #1
 8001d44:	e7ee      	b.n	8001d24 <_printf_float+0x2a4>
 8001d46:	bf00      	nop
 8001d48:	7fefffff 	.word	0x7fefffff
 8001d4c:	08004619 	.word	0x08004619
 8001d50:	0800461d 	.word	0x0800461d
 8001d54:	08004621 	.word	0x08004621
 8001d58:	08004625 	.word	0x08004625
 8001d5c:	08004629 	.word	0x08004629
 8001d60:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8001d62:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8001d66:	4553      	cmp	r3, sl
 8001d68:	bfa8      	it	ge
 8001d6a:	4653      	movge	r3, sl
 8001d6c:	2b00      	cmp	r3, #0
 8001d6e:	4699      	mov	r9, r3
 8001d70:	dc36      	bgt.n	8001de0 <_printf_float+0x360>
 8001d72:	f04f 0b00 	mov.w	fp, #0
 8001d76:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001d7a:	f104 021a 	add.w	r2, r4, #26
 8001d7e:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8001d80:	9306      	str	r3, [sp, #24]
 8001d82:	eba3 0309 	sub.w	r3, r3, r9
 8001d86:	455b      	cmp	r3, fp
 8001d88:	dc31      	bgt.n	8001dee <_printf_float+0x36e>
 8001d8a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001d8c:	459a      	cmp	sl, r3
 8001d8e:	dc3a      	bgt.n	8001e06 <_printf_float+0x386>
 8001d90:	6823      	ldr	r3, [r4, #0]
 8001d92:	07da      	lsls	r2, r3, #31
 8001d94:	d437      	bmi.n	8001e06 <_printf_float+0x386>
 8001d96:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001d98:	ebaa 0903 	sub.w	r9, sl, r3
 8001d9c:	9b06      	ldr	r3, [sp, #24]
 8001d9e:	ebaa 0303 	sub.w	r3, sl, r3
 8001da2:	4599      	cmp	r9, r3
 8001da4:	bfa8      	it	ge
 8001da6:	4699      	movge	r9, r3
 8001da8:	f1b9 0f00 	cmp.w	r9, #0
 8001dac:	dc33      	bgt.n	8001e16 <_printf_float+0x396>
 8001dae:	f04f 0800 	mov.w	r8, #0
 8001db2:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001db6:	f104 0b1a 	add.w	fp, r4, #26
 8001dba:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001dbc:	ebaa 0303 	sub.w	r3, sl, r3
 8001dc0:	eba3 0309 	sub.w	r3, r3, r9
 8001dc4:	4543      	cmp	r3, r8
 8001dc6:	f77f af79 	ble.w	8001cbc <_printf_float+0x23c>
 8001dca:	2301      	movs	r3, #1
 8001dcc:	465a      	mov	r2, fp
 8001dce:	4631      	mov	r1, r6
 8001dd0:	4628      	mov	r0, r5
 8001dd2:	47b8      	blx	r7
 8001dd4:	3001      	adds	r0, #1
 8001dd6:	f43f aeae 	beq.w	8001b36 <_printf_float+0xb6>
 8001dda:	f108 0801 	add.w	r8, r8, #1
 8001dde:	e7ec      	b.n	8001dba <_printf_float+0x33a>
 8001de0:	4642      	mov	r2, r8
 8001de2:	4631      	mov	r1, r6
 8001de4:	4628      	mov	r0, r5
 8001de6:	47b8      	blx	r7
 8001de8:	3001      	adds	r0, #1
 8001dea:	d1c2      	bne.n	8001d72 <_printf_float+0x2f2>
 8001dec:	e6a3      	b.n	8001b36 <_printf_float+0xb6>
 8001dee:	2301      	movs	r3, #1
 8001df0:	4631      	mov	r1, r6
 8001df2:	4628      	mov	r0, r5
 8001df4:	9206      	str	r2, [sp, #24]
 8001df6:	47b8      	blx	r7
 8001df8:	3001      	adds	r0, #1
 8001dfa:	f43f ae9c 	beq.w	8001b36 <_printf_float+0xb6>
 8001dfe:	9a06      	ldr	r2, [sp, #24]
 8001e00:	f10b 0b01 	add.w	fp, fp, #1
 8001e04:	e7bb      	b.n	8001d7e <_printf_float+0x2fe>
 8001e06:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8001e0a:	4631      	mov	r1, r6
 8001e0c:	4628      	mov	r0, r5
 8001e0e:	47b8      	blx	r7
 8001e10:	3001      	adds	r0, #1
 8001e12:	d1c0      	bne.n	8001d96 <_printf_float+0x316>
 8001e14:	e68f      	b.n	8001b36 <_printf_float+0xb6>
 8001e16:	9a06      	ldr	r2, [sp, #24]
 8001e18:	464b      	mov	r3, r9
 8001e1a:	4442      	add	r2, r8
 8001e1c:	4631      	mov	r1, r6
 8001e1e:	4628      	mov	r0, r5
 8001e20:	47b8      	blx	r7
 8001e22:	3001      	adds	r0, #1
 8001e24:	d1c3      	bne.n	8001dae <_printf_float+0x32e>
 8001e26:	e686      	b.n	8001b36 <_printf_float+0xb6>
 8001e28:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8001e2c:	f1ba 0f01 	cmp.w	sl, #1
 8001e30:	dc01      	bgt.n	8001e36 <_printf_float+0x3b6>
 8001e32:	07db      	lsls	r3, r3, #31
 8001e34:	d536      	bpl.n	8001ea4 <_printf_float+0x424>
 8001e36:	2301      	movs	r3, #1
 8001e38:	4642      	mov	r2, r8
 8001e3a:	4631      	mov	r1, r6
 8001e3c:	4628      	mov	r0, r5
 8001e3e:	47b8      	blx	r7
 8001e40:	3001      	adds	r0, #1
 8001e42:	f43f ae78 	beq.w	8001b36 <_printf_float+0xb6>
 8001e46:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8001e4a:	4631      	mov	r1, r6
 8001e4c:	4628      	mov	r0, r5
 8001e4e:	47b8      	blx	r7
 8001e50:	3001      	adds	r0, #1
 8001e52:	f43f ae70 	beq.w	8001b36 <_printf_float+0xb6>
 8001e56:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8001e5a:	2200      	movs	r2, #0
 8001e5c:	2300      	movs	r3, #0
 8001e5e:	f10a 3aff 	add.w	sl, sl, #4294967295
 8001e62:	f7fe fe39 	bl	8000ad8 <__aeabi_dcmpeq>
 8001e66:	b9c0      	cbnz	r0, 8001e9a <_printf_float+0x41a>
 8001e68:	4653      	mov	r3, sl
 8001e6a:	f108 0201 	add.w	r2, r8, #1
 8001e6e:	4631      	mov	r1, r6
 8001e70:	4628      	mov	r0, r5
 8001e72:	47b8      	blx	r7
 8001e74:	3001      	adds	r0, #1
 8001e76:	d10c      	bne.n	8001e92 <_printf_float+0x412>
 8001e78:	e65d      	b.n	8001b36 <_printf_float+0xb6>
 8001e7a:	2301      	movs	r3, #1
 8001e7c:	465a      	mov	r2, fp
 8001e7e:	4631      	mov	r1, r6
 8001e80:	4628      	mov	r0, r5
 8001e82:	47b8      	blx	r7
 8001e84:	3001      	adds	r0, #1
 8001e86:	f43f ae56 	beq.w	8001b36 <_printf_float+0xb6>
 8001e8a:	f108 0801 	add.w	r8, r8, #1
 8001e8e:	45d0      	cmp	r8, sl
 8001e90:	dbf3      	blt.n	8001e7a <_printf_float+0x3fa>
 8001e92:	464b      	mov	r3, r9
 8001e94:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 8001e98:	e6df      	b.n	8001c5a <_printf_float+0x1da>
 8001e9a:	f04f 0800 	mov.w	r8, #0
 8001e9e:	f104 0b1a 	add.w	fp, r4, #26
 8001ea2:	e7f4      	b.n	8001e8e <_printf_float+0x40e>
 8001ea4:	2301      	movs	r3, #1
 8001ea6:	4642      	mov	r2, r8
 8001ea8:	e7e1      	b.n	8001e6e <_printf_float+0x3ee>
 8001eaa:	2301      	movs	r3, #1
 8001eac:	464a      	mov	r2, r9
 8001eae:	4631      	mov	r1, r6
 8001eb0:	4628      	mov	r0, r5
 8001eb2:	47b8      	blx	r7
 8001eb4:	3001      	adds	r0, #1
 8001eb6:	f43f ae3e 	beq.w	8001b36 <_printf_float+0xb6>
 8001eba:	f108 0801 	add.w	r8, r8, #1
 8001ebe:	68e3      	ldr	r3, [r4, #12]
 8001ec0:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8001ec2:	1a5b      	subs	r3, r3, r1
 8001ec4:	4543      	cmp	r3, r8
 8001ec6:	dcf0      	bgt.n	8001eaa <_printf_float+0x42a>
 8001ec8:	e6fc      	b.n	8001cc4 <_printf_float+0x244>
 8001eca:	f04f 0800 	mov.w	r8, #0
 8001ece:	f104 0919 	add.w	r9, r4, #25
 8001ed2:	e7f4      	b.n	8001ebe <_printf_float+0x43e>

08001ed4 <_printf_common>:
 8001ed4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001ed8:	4616      	mov	r6, r2
 8001eda:	4698      	mov	r8, r3
 8001edc:	688a      	ldr	r2, [r1, #8]
 8001ede:	690b      	ldr	r3, [r1, #16]
 8001ee0:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8001ee4:	4293      	cmp	r3, r2
 8001ee6:	bfb8      	it	lt
 8001ee8:	4613      	movlt	r3, r2
 8001eea:	6033      	str	r3, [r6, #0]
 8001eec:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8001ef0:	4607      	mov	r7, r0
 8001ef2:	460c      	mov	r4, r1
 8001ef4:	b10a      	cbz	r2, 8001efa <_printf_common+0x26>
 8001ef6:	3301      	adds	r3, #1
 8001ef8:	6033      	str	r3, [r6, #0]
 8001efa:	6823      	ldr	r3, [r4, #0]
 8001efc:	0699      	lsls	r1, r3, #26
 8001efe:	bf42      	ittt	mi
 8001f00:	6833      	ldrmi	r3, [r6, #0]
 8001f02:	3302      	addmi	r3, #2
 8001f04:	6033      	strmi	r3, [r6, #0]
 8001f06:	6825      	ldr	r5, [r4, #0]
 8001f08:	f015 0506 	ands.w	r5, r5, #6
 8001f0c:	d106      	bne.n	8001f1c <_printf_common+0x48>
 8001f0e:	f104 0a19 	add.w	sl, r4, #25
 8001f12:	68e3      	ldr	r3, [r4, #12]
 8001f14:	6832      	ldr	r2, [r6, #0]
 8001f16:	1a9b      	subs	r3, r3, r2
 8001f18:	42ab      	cmp	r3, r5
 8001f1a:	dc26      	bgt.n	8001f6a <_printf_common+0x96>
 8001f1c:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8001f20:	6822      	ldr	r2, [r4, #0]
 8001f22:	3b00      	subs	r3, #0
 8001f24:	bf18      	it	ne
 8001f26:	2301      	movne	r3, #1
 8001f28:	0692      	lsls	r2, r2, #26
 8001f2a:	d42b      	bmi.n	8001f84 <_printf_common+0xb0>
 8001f2c:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8001f30:	4641      	mov	r1, r8
 8001f32:	4638      	mov	r0, r7
 8001f34:	47c8      	blx	r9
 8001f36:	3001      	adds	r0, #1
 8001f38:	d01e      	beq.n	8001f78 <_printf_common+0xa4>
 8001f3a:	6823      	ldr	r3, [r4, #0]
 8001f3c:	6922      	ldr	r2, [r4, #16]
 8001f3e:	f003 0306 	and.w	r3, r3, #6
 8001f42:	2b04      	cmp	r3, #4
 8001f44:	bf02      	ittt	eq
 8001f46:	68e5      	ldreq	r5, [r4, #12]
 8001f48:	6833      	ldreq	r3, [r6, #0]
 8001f4a:	1aed      	subeq	r5, r5, r3
 8001f4c:	68a3      	ldr	r3, [r4, #8]
 8001f4e:	bf0c      	ite	eq
 8001f50:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001f54:	2500      	movne	r5, #0
 8001f56:	4293      	cmp	r3, r2
 8001f58:	bfc4      	itt	gt
 8001f5a:	1a9b      	subgt	r3, r3, r2
 8001f5c:	18ed      	addgt	r5, r5, r3
 8001f5e:	2600      	movs	r6, #0
 8001f60:	341a      	adds	r4, #26
 8001f62:	42b5      	cmp	r5, r6
 8001f64:	d11a      	bne.n	8001f9c <_printf_common+0xc8>
 8001f66:	2000      	movs	r0, #0
 8001f68:	e008      	b.n	8001f7c <_printf_common+0xa8>
 8001f6a:	2301      	movs	r3, #1
 8001f6c:	4652      	mov	r2, sl
 8001f6e:	4641      	mov	r1, r8
 8001f70:	4638      	mov	r0, r7
 8001f72:	47c8      	blx	r9
 8001f74:	3001      	adds	r0, #1
 8001f76:	d103      	bne.n	8001f80 <_printf_common+0xac>
 8001f78:	f04f 30ff 	mov.w	r0, #4294967295
 8001f7c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001f80:	3501      	adds	r5, #1
 8001f82:	e7c6      	b.n	8001f12 <_printf_common+0x3e>
 8001f84:	18e1      	adds	r1, r4, r3
 8001f86:	1c5a      	adds	r2, r3, #1
 8001f88:	2030      	movs	r0, #48	@ 0x30
 8001f8a:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8001f8e:	4422      	add	r2, r4
 8001f90:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8001f94:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8001f98:	3302      	adds	r3, #2
 8001f9a:	e7c7      	b.n	8001f2c <_printf_common+0x58>
 8001f9c:	2301      	movs	r3, #1
 8001f9e:	4622      	mov	r2, r4
 8001fa0:	4641      	mov	r1, r8
 8001fa2:	4638      	mov	r0, r7
 8001fa4:	47c8      	blx	r9
 8001fa6:	3001      	adds	r0, #1
 8001fa8:	d0e6      	beq.n	8001f78 <_printf_common+0xa4>
 8001faa:	3601      	adds	r6, #1
 8001fac:	e7d9      	b.n	8001f62 <_printf_common+0x8e>
	...

08001fb0 <_printf_i>:
 8001fb0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001fb4:	7e0f      	ldrb	r7, [r1, #24]
 8001fb6:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8001fb8:	2f78      	cmp	r7, #120	@ 0x78
 8001fba:	4691      	mov	r9, r2
 8001fbc:	4680      	mov	r8, r0
 8001fbe:	460c      	mov	r4, r1
 8001fc0:	469a      	mov	sl, r3
 8001fc2:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8001fc6:	d807      	bhi.n	8001fd8 <_printf_i+0x28>
 8001fc8:	2f62      	cmp	r7, #98	@ 0x62
 8001fca:	d80a      	bhi.n	8001fe2 <_printf_i+0x32>
 8001fcc:	2f00      	cmp	r7, #0
 8001fce:	f000 80d2 	beq.w	8002176 <_printf_i+0x1c6>
 8001fd2:	2f58      	cmp	r7, #88	@ 0x58
 8001fd4:	f000 80b9 	beq.w	800214a <_printf_i+0x19a>
 8001fd8:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8001fdc:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8001fe0:	e03a      	b.n	8002058 <_printf_i+0xa8>
 8001fe2:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8001fe6:	2b15      	cmp	r3, #21
 8001fe8:	d8f6      	bhi.n	8001fd8 <_printf_i+0x28>
 8001fea:	a101      	add	r1, pc, #4	@ (adr r1, 8001ff0 <_printf_i+0x40>)
 8001fec:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001ff0:	08002049 	.word	0x08002049
 8001ff4:	0800205d 	.word	0x0800205d
 8001ff8:	08001fd9 	.word	0x08001fd9
 8001ffc:	08001fd9 	.word	0x08001fd9
 8002000:	08001fd9 	.word	0x08001fd9
 8002004:	08001fd9 	.word	0x08001fd9
 8002008:	0800205d 	.word	0x0800205d
 800200c:	08001fd9 	.word	0x08001fd9
 8002010:	08001fd9 	.word	0x08001fd9
 8002014:	08001fd9 	.word	0x08001fd9
 8002018:	08001fd9 	.word	0x08001fd9
 800201c:	0800215d 	.word	0x0800215d
 8002020:	08002087 	.word	0x08002087
 8002024:	08002117 	.word	0x08002117
 8002028:	08001fd9 	.word	0x08001fd9
 800202c:	08001fd9 	.word	0x08001fd9
 8002030:	0800217f 	.word	0x0800217f
 8002034:	08001fd9 	.word	0x08001fd9
 8002038:	08002087 	.word	0x08002087
 800203c:	08001fd9 	.word	0x08001fd9
 8002040:	08001fd9 	.word	0x08001fd9
 8002044:	0800211f 	.word	0x0800211f
 8002048:	6833      	ldr	r3, [r6, #0]
 800204a:	1d1a      	adds	r2, r3, #4
 800204c:	681b      	ldr	r3, [r3, #0]
 800204e:	6032      	str	r2, [r6, #0]
 8002050:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8002054:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8002058:	2301      	movs	r3, #1
 800205a:	e09d      	b.n	8002198 <_printf_i+0x1e8>
 800205c:	6833      	ldr	r3, [r6, #0]
 800205e:	6820      	ldr	r0, [r4, #0]
 8002060:	1d19      	adds	r1, r3, #4
 8002062:	6031      	str	r1, [r6, #0]
 8002064:	0606      	lsls	r6, r0, #24
 8002066:	d501      	bpl.n	800206c <_printf_i+0xbc>
 8002068:	681d      	ldr	r5, [r3, #0]
 800206a:	e003      	b.n	8002074 <_printf_i+0xc4>
 800206c:	0645      	lsls	r5, r0, #25
 800206e:	d5fb      	bpl.n	8002068 <_printf_i+0xb8>
 8002070:	f9b3 5000 	ldrsh.w	r5, [r3]
 8002074:	2d00      	cmp	r5, #0
 8002076:	da03      	bge.n	8002080 <_printf_i+0xd0>
 8002078:	232d      	movs	r3, #45	@ 0x2d
 800207a:	426d      	negs	r5, r5
 800207c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8002080:	4859      	ldr	r0, [pc, #356]	@ (80021e8 <_printf_i+0x238>)
 8002082:	230a      	movs	r3, #10
 8002084:	e011      	b.n	80020aa <_printf_i+0xfa>
 8002086:	6821      	ldr	r1, [r4, #0]
 8002088:	6833      	ldr	r3, [r6, #0]
 800208a:	0608      	lsls	r0, r1, #24
 800208c:	f853 5b04 	ldr.w	r5, [r3], #4
 8002090:	d402      	bmi.n	8002098 <_printf_i+0xe8>
 8002092:	0649      	lsls	r1, r1, #25
 8002094:	bf48      	it	mi
 8002096:	b2ad      	uxthmi	r5, r5
 8002098:	2f6f      	cmp	r7, #111	@ 0x6f
 800209a:	4853      	ldr	r0, [pc, #332]	@ (80021e8 <_printf_i+0x238>)
 800209c:	6033      	str	r3, [r6, #0]
 800209e:	bf14      	ite	ne
 80020a0:	230a      	movne	r3, #10
 80020a2:	2308      	moveq	r3, #8
 80020a4:	2100      	movs	r1, #0
 80020a6:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 80020aa:	6866      	ldr	r6, [r4, #4]
 80020ac:	60a6      	str	r6, [r4, #8]
 80020ae:	2e00      	cmp	r6, #0
 80020b0:	bfa2      	ittt	ge
 80020b2:	6821      	ldrge	r1, [r4, #0]
 80020b4:	f021 0104 	bicge.w	r1, r1, #4
 80020b8:	6021      	strge	r1, [r4, #0]
 80020ba:	b90d      	cbnz	r5, 80020c0 <_printf_i+0x110>
 80020bc:	2e00      	cmp	r6, #0
 80020be:	d04b      	beq.n	8002158 <_printf_i+0x1a8>
 80020c0:	4616      	mov	r6, r2
 80020c2:	fbb5 f1f3 	udiv	r1, r5, r3
 80020c6:	fb03 5711 	mls	r7, r3, r1, r5
 80020ca:	5dc7      	ldrb	r7, [r0, r7]
 80020cc:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80020d0:	462f      	mov	r7, r5
 80020d2:	42bb      	cmp	r3, r7
 80020d4:	460d      	mov	r5, r1
 80020d6:	d9f4      	bls.n	80020c2 <_printf_i+0x112>
 80020d8:	2b08      	cmp	r3, #8
 80020da:	d10b      	bne.n	80020f4 <_printf_i+0x144>
 80020dc:	6823      	ldr	r3, [r4, #0]
 80020de:	07df      	lsls	r7, r3, #31
 80020e0:	d508      	bpl.n	80020f4 <_printf_i+0x144>
 80020e2:	6923      	ldr	r3, [r4, #16]
 80020e4:	6861      	ldr	r1, [r4, #4]
 80020e6:	4299      	cmp	r1, r3
 80020e8:	bfde      	ittt	le
 80020ea:	2330      	movle	r3, #48	@ 0x30
 80020ec:	f806 3c01 	strble.w	r3, [r6, #-1]
 80020f0:	f106 36ff 	addle.w	r6, r6, #4294967295
 80020f4:	1b92      	subs	r2, r2, r6
 80020f6:	6122      	str	r2, [r4, #16]
 80020f8:	f8cd a000 	str.w	sl, [sp]
 80020fc:	464b      	mov	r3, r9
 80020fe:	aa03      	add	r2, sp, #12
 8002100:	4621      	mov	r1, r4
 8002102:	4640      	mov	r0, r8
 8002104:	f7ff fee6 	bl	8001ed4 <_printf_common>
 8002108:	3001      	adds	r0, #1
 800210a:	d14a      	bne.n	80021a2 <_printf_i+0x1f2>
 800210c:	f04f 30ff 	mov.w	r0, #4294967295
 8002110:	b004      	add	sp, #16
 8002112:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002116:	6823      	ldr	r3, [r4, #0]
 8002118:	f043 0320 	orr.w	r3, r3, #32
 800211c:	6023      	str	r3, [r4, #0]
 800211e:	4833      	ldr	r0, [pc, #204]	@ (80021ec <_printf_i+0x23c>)
 8002120:	2778      	movs	r7, #120	@ 0x78
 8002122:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8002126:	6823      	ldr	r3, [r4, #0]
 8002128:	6831      	ldr	r1, [r6, #0]
 800212a:	061f      	lsls	r7, r3, #24
 800212c:	f851 5b04 	ldr.w	r5, [r1], #4
 8002130:	d402      	bmi.n	8002138 <_printf_i+0x188>
 8002132:	065f      	lsls	r7, r3, #25
 8002134:	bf48      	it	mi
 8002136:	b2ad      	uxthmi	r5, r5
 8002138:	6031      	str	r1, [r6, #0]
 800213a:	07d9      	lsls	r1, r3, #31
 800213c:	bf44      	itt	mi
 800213e:	f043 0320 	orrmi.w	r3, r3, #32
 8002142:	6023      	strmi	r3, [r4, #0]
 8002144:	b11d      	cbz	r5, 800214e <_printf_i+0x19e>
 8002146:	2310      	movs	r3, #16
 8002148:	e7ac      	b.n	80020a4 <_printf_i+0xf4>
 800214a:	4827      	ldr	r0, [pc, #156]	@ (80021e8 <_printf_i+0x238>)
 800214c:	e7e9      	b.n	8002122 <_printf_i+0x172>
 800214e:	6823      	ldr	r3, [r4, #0]
 8002150:	f023 0320 	bic.w	r3, r3, #32
 8002154:	6023      	str	r3, [r4, #0]
 8002156:	e7f6      	b.n	8002146 <_printf_i+0x196>
 8002158:	4616      	mov	r6, r2
 800215a:	e7bd      	b.n	80020d8 <_printf_i+0x128>
 800215c:	6833      	ldr	r3, [r6, #0]
 800215e:	6825      	ldr	r5, [r4, #0]
 8002160:	6961      	ldr	r1, [r4, #20]
 8002162:	1d18      	adds	r0, r3, #4
 8002164:	6030      	str	r0, [r6, #0]
 8002166:	062e      	lsls	r6, r5, #24
 8002168:	681b      	ldr	r3, [r3, #0]
 800216a:	d501      	bpl.n	8002170 <_printf_i+0x1c0>
 800216c:	6019      	str	r1, [r3, #0]
 800216e:	e002      	b.n	8002176 <_printf_i+0x1c6>
 8002170:	0668      	lsls	r0, r5, #25
 8002172:	d5fb      	bpl.n	800216c <_printf_i+0x1bc>
 8002174:	8019      	strh	r1, [r3, #0]
 8002176:	2300      	movs	r3, #0
 8002178:	6123      	str	r3, [r4, #16]
 800217a:	4616      	mov	r6, r2
 800217c:	e7bc      	b.n	80020f8 <_printf_i+0x148>
 800217e:	6833      	ldr	r3, [r6, #0]
 8002180:	1d1a      	adds	r2, r3, #4
 8002182:	6032      	str	r2, [r6, #0]
 8002184:	681e      	ldr	r6, [r3, #0]
 8002186:	6862      	ldr	r2, [r4, #4]
 8002188:	2100      	movs	r1, #0
 800218a:	4630      	mov	r0, r6
 800218c:	f7fe f828 	bl	80001e0 <memchr>
 8002190:	b108      	cbz	r0, 8002196 <_printf_i+0x1e6>
 8002192:	1b80      	subs	r0, r0, r6
 8002194:	6060      	str	r0, [r4, #4]
 8002196:	6863      	ldr	r3, [r4, #4]
 8002198:	6123      	str	r3, [r4, #16]
 800219a:	2300      	movs	r3, #0
 800219c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80021a0:	e7aa      	b.n	80020f8 <_printf_i+0x148>
 80021a2:	6923      	ldr	r3, [r4, #16]
 80021a4:	4632      	mov	r2, r6
 80021a6:	4649      	mov	r1, r9
 80021a8:	4640      	mov	r0, r8
 80021aa:	47d0      	blx	sl
 80021ac:	3001      	adds	r0, #1
 80021ae:	d0ad      	beq.n	800210c <_printf_i+0x15c>
 80021b0:	6823      	ldr	r3, [r4, #0]
 80021b2:	079b      	lsls	r3, r3, #30
 80021b4:	d413      	bmi.n	80021de <_printf_i+0x22e>
 80021b6:	68e0      	ldr	r0, [r4, #12]
 80021b8:	9b03      	ldr	r3, [sp, #12]
 80021ba:	4298      	cmp	r0, r3
 80021bc:	bfb8      	it	lt
 80021be:	4618      	movlt	r0, r3
 80021c0:	e7a6      	b.n	8002110 <_printf_i+0x160>
 80021c2:	2301      	movs	r3, #1
 80021c4:	4632      	mov	r2, r6
 80021c6:	4649      	mov	r1, r9
 80021c8:	4640      	mov	r0, r8
 80021ca:	47d0      	blx	sl
 80021cc:	3001      	adds	r0, #1
 80021ce:	d09d      	beq.n	800210c <_printf_i+0x15c>
 80021d0:	3501      	adds	r5, #1
 80021d2:	68e3      	ldr	r3, [r4, #12]
 80021d4:	9903      	ldr	r1, [sp, #12]
 80021d6:	1a5b      	subs	r3, r3, r1
 80021d8:	42ab      	cmp	r3, r5
 80021da:	dcf2      	bgt.n	80021c2 <_printf_i+0x212>
 80021dc:	e7eb      	b.n	80021b6 <_printf_i+0x206>
 80021de:	2500      	movs	r5, #0
 80021e0:	f104 0619 	add.w	r6, r4, #25
 80021e4:	e7f5      	b.n	80021d2 <_printf_i+0x222>
 80021e6:	bf00      	nop
 80021e8:	0800462b 	.word	0x0800462b
 80021ec:	0800463c 	.word	0x0800463c

080021f0 <std>:
 80021f0:	2300      	movs	r3, #0
 80021f2:	b510      	push	{r4, lr}
 80021f4:	4604      	mov	r4, r0
 80021f6:	e9c0 3300 	strd	r3, r3, [r0]
 80021fa:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80021fe:	6083      	str	r3, [r0, #8]
 8002200:	8181      	strh	r1, [r0, #12]
 8002202:	6643      	str	r3, [r0, #100]	@ 0x64
 8002204:	81c2      	strh	r2, [r0, #14]
 8002206:	6183      	str	r3, [r0, #24]
 8002208:	4619      	mov	r1, r3
 800220a:	2208      	movs	r2, #8
 800220c:	305c      	adds	r0, #92	@ 0x5c
 800220e:	f000 f915 	bl	800243c <memset>
 8002212:	4b0d      	ldr	r3, [pc, #52]	@ (8002248 <std+0x58>)
 8002214:	6263      	str	r3, [r4, #36]	@ 0x24
 8002216:	4b0d      	ldr	r3, [pc, #52]	@ (800224c <std+0x5c>)
 8002218:	62a3      	str	r3, [r4, #40]	@ 0x28
 800221a:	4b0d      	ldr	r3, [pc, #52]	@ (8002250 <std+0x60>)
 800221c:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800221e:	4b0d      	ldr	r3, [pc, #52]	@ (8002254 <std+0x64>)
 8002220:	6323      	str	r3, [r4, #48]	@ 0x30
 8002222:	4b0d      	ldr	r3, [pc, #52]	@ (8002258 <std+0x68>)
 8002224:	6224      	str	r4, [r4, #32]
 8002226:	429c      	cmp	r4, r3
 8002228:	d006      	beq.n	8002238 <std+0x48>
 800222a:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 800222e:	4294      	cmp	r4, r2
 8002230:	d002      	beq.n	8002238 <std+0x48>
 8002232:	33d0      	adds	r3, #208	@ 0xd0
 8002234:	429c      	cmp	r4, r3
 8002236:	d105      	bne.n	8002244 <std+0x54>
 8002238:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 800223c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002240:	f000 b978 	b.w	8002534 <__retarget_lock_init_recursive>
 8002244:	bd10      	pop	{r4, pc}
 8002246:	bf00      	nop
 8002248:	08002375 	.word	0x08002375
 800224c:	08002397 	.word	0x08002397
 8002250:	080023cf 	.word	0x080023cf
 8002254:	080023f3 	.word	0x080023f3
 8002258:	20000204 	.word	0x20000204

0800225c <stdio_exit_handler>:
 800225c:	4a02      	ldr	r2, [pc, #8]	@ (8002268 <stdio_exit_handler+0xc>)
 800225e:	4903      	ldr	r1, [pc, #12]	@ (800226c <stdio_exit_handler+0x10>)
 8002260:	4803      	ldr	r0, [pc, #12]	@ (8002270 <stdio_exit_handler+0x14>)
 8002262:	f000 b869 	b.w	8002338 <_fwalk_sglue>
 8002266:	bf00      	nop
 8002268:	20000000 	.word	0x20000000
 800226c:	08003e95 	.word	0x08003e95
 8002270:	20000010 	.word	0x20000010

08002274 <cleanup_stdio>:
 8002274:	6841      	ldr	r1, [r0, #4]
 8002276:	4b0c      	ldr	r3, [pc, #48]	@ (80022a8 <cleanup_stdio+0x34>)
 8002278:	4299      	cmp	r1, r3
 800227a:	b510      	push	{r4, lr}
 800227c:	4604      	mov	r4, r0
 800227e:	d001      	beq.n	8002284 <cleanup_stdio+0x10>
 8002280:	f001 fe08 	bl	8003e94 <_fflush_r>
 8002284:	68a1      	ldr	r1, [r4, #8]
 8002286:	4b09      	ldr	r3, [pc, #36]	@ (80022ac <cleanup_stdio+0x38>)
 8002288:	4299      	cmp	r1, r3
 800228a:	d002      	beq.n	8002292 <cleanup_stdio+0x1e>
 800228c:	4620      	mov	r0, r4
 800228e:	f001 fe01 	bl	8003e94 <_fflush_r>
 8002292:	68e1      	ldr	r1, [r4, #12]
 8002294:	4b06      	ldr	r3, [pc, #24]	@ (80022b0 <cleanup_stdio+0x3c>)
 8002296:	4299      	cmp	r1, r3
 8002298:	d004      	beq.n	80022a4 <cleanup_stdio+0x30>
 800229a:	4620      	mov	r0, r4
 800229c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80022a0:	f001 bdf8 	b.w	8003e94 <_fflush_r>
 80022a4:	bd10      	pop	{r4, pc}
 80022a6:	bf00      	nop
 80022a8:	20000204 	.word	0x20000204
 80022ac:	2000026c 	.word	0x2000026c
 80022b0:	200002d4 	.word	0x200002d4

080022b4 <global_stdio_init.part.0>:
 80022b4:	b510      	push	{r4, lr}
 80022b6:	4b0b      	ldr	r3, [pc, #44]	@ (80022e4 <global_stdio_init.part.0+0x30>)
 80022b8:	4c0b      	ldr	r4, [pc, #44]	@ (80022e8 <global_stdio_init.part.0+0x34>)
 80022ba:	4a0c      	ldr	r2, [pc, #48]	@ (80022ec <global_stdio_init.part.0+0x38>)
 80022bc:	601a      	str	r2, [r3, #0]
 80022be:	4620      	mov	r0, r4
 80022c0:	2200      	movs	r2, #0
 80022c2:	2104      	movs	r1, #4
 80022c4:	f7ff ff94 	bl	80021f0 <std>
 80022c8:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 80022cc:	2201      	movs	r2, #1
 80022ce:	2109      	movs	r1, #9
 80022d0:	f7ff ff8e 	bl	80021f0 <std>
 80022d4:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 80022d8:	2202      	movs	r2, #2
 80022da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80022de:	2112      	movs	r1, #18
 80022e0:	f7ff bf86 	b.w	80021f0 <std>
 80022e4:	2000033c 	.word	0x2000033c
 80022e8:	20000204 	.word	0x20000204
 80022ec:	0800225d 	.word	0x0800225d

080022f0 <__sfp_lock_acquire>:
 80022f0:	4801      	ldr	r0, [pc, #4]	@ (80022f8 <__sfp_lock_acquire+0x8>)
 80022f2:	f000 b920 	b.w	8002536 <__retarget_lock_acquire_recursive>
 80022f6:	bf00      	nop
 80022f8:	20000345 	.word	0x20000345

080022fc <__sfp_lock_release>:
 80022fc:	4801      	ldr	r0, [pc, #4]	@ (8002304 <__sfp_lock_release+0x8>)
 80022fe:	f000 b91b 	b.w	8002538 <__retarget_lock_release_recursive>
 8002302:	bf00      	nop
 8002304:	20000345 	.word	0x20000345

08002308 <__sinit>:
 8002308:	b510      	push	{r4, lr}
 800230a:	4604      	mov	r4, r0
 800230c:	f7ff fff0 	bl	80022f0 <__sfp_lock_acquire>
 8002310:	6a23      	ldr	r3, [r4, #32]
 8002312:	b11b      	cbz	r3, 800231c <__sinit+0x14>
 8002314:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002318:	f7ff bff0 	b.w	80022fc <__sfp_lock_release>
 800231c:	4b04      	ldr	r3, [pc, #16]	@ (8002330 <__sinit+0x28>)
 800231e:	6223      	str	r3, [r4, #32]
 8002320:	4b04      	ldr	r3, [pc, #16]	@ (8002334 <__sinit+0x2c>)
 8002322:	681b      	ldr	r3, [r3, #0]
 8002324:	2b00      	cmp	r3, #0
 8002326:	d1f5      	bne.n	8002314 <__sinit+0xc>
 8002328:	f7ff ffc4 	bl	80022b4 <global_stdio_init.part.0>
 800232c:	e7f2      	b.n	8002314 <__sinit+0xc>
 800232e:	bf00      	nop
 8002330:	08002275 	.word	0x08002275
 8002334:	2000033c 	.word	0x2000033c

08002338 <_fwalk_sglue>:
 8002338:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800233c:	4607      	mov	r7, r0
 800233e:	4688      	mov	r8, r1
 8002340:	4614      	mov	r4, r2
 8002342:	2600      	movs	r6, #0
 8002344:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8002348:	f1b9 0901 	subs.w	r9, r9, #1
 800234c:	d505      	bpl.n	800235a <_fwalk_sglue+0x22>
 800234e:	6824      	ldr	r4, [r4, #0]
 8002350:	2c00      	cmp	r4, #0
 8002352:	d1f7      	bne.n	8002344 <_fwalk_sglue+0xc>
 8002354:	4630      	mov	r0, r6
 8002356:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800235a:	89ab      	ldrh	r3, [r5, #12]
 800235c:	2b01      	cmp	r3, #1
 800235e:	d907      	bls.n	8002370 <_fwalk_sglue+0x38>
 8002360:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8002364:	3301      	adds	r3, #1
 8002366:	d003      	beq.n	8002370 <_fwalk_sglue+0x38>
 8002368:	4629      	mov	r1, r5
 800236a:	4638      	mov	r0, r7
 800236c:	47c0      	blx	r8
 800236e:	4306      	orrs	r6, r0
 8002370:	3568      	adds	r5, #104	@ 0x68
 8002372:	e7e9      	b.n	8002348 <_fwalk_sglue+0x10>

08002374 <__sread>:
 8002374:	b510      	push	{r4, lr}
 8002376:	460c      	mov	r4, r1
 8002378:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800237c:	f000 f88c 	bl	8002498 <_read_r>
 8002380:	2800      	cmp	r0, #0
 8002382:	bfab      	itete	ge
 8002384:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8002386:	89a3      	ldrhlt	r3, [r4, #12]
 8002388:	181b      	addge	r3, r3, r0
 800238a:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 800238e:	bfac      	ite	ge
 8002390:	6563      	strge	r3, [r4, #84]	@ 0x54
 8002392:	81a3      	strhlt	r3, [r4, #12]
 8002394:	bd10      	pop	{r4, pc}

08002396 <__swrite>:
 8002396:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800239a:	461f      	mov	r7, r3
 800239c:	898b      	ldrh	r3, [r1, #12]
 800239e:	05db      	lsls	r3, r3, #23
 80023a0:	4605      	mov	r5, r0
 80023a2:	460c      	mov	r4, r1
 80023a4:	4616      	mov	r6, r2
 80023a6:	d505      	bpl.n	80023b4 <__swrite+0x1e>
 80023a8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80023ac:	2302      	movs	r3, #2
 80023ae:	2200      	movs	r2, #0
 80023b0:	f000 f860 	bl	8002474 <_lseek_r>
 80023b4:	89a3      	ldrh	r3, [r4, #12]
 80023b6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80023ba:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80023be:	81a3      	strh	r3, [r4, #12]
 80023c0:	4632      	mov	r2, r6
 80023c2:	463b      	mov	r3, r7
 80023c4:	4628      	mov	r0, r5
 80023c6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80023ca:	f000 b877 	b.w	80024bc <_write_r>

080023ce <__sseek>:
 80023ce:	b510      	push	{r4, lr}
 80023d0:	460c      	mov	r4, r1
 80023d2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80023d6:	f000 f84d 	bl	8002474 <_lseek_r>
 80023da:	1c43      	adds	r3, r0, #1
 80023dc:	89a3      	ldrh	r3, [r4, #12]
 80023de:	bf15      	itete	ne
 80023e0:	6560      	strne	r0, [r4, #84]	@ 0x54
 80023e2:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 80023e6:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 80023ea:	81a3      	strheq	r3, [r4, #12]
 80023ec:	bf18      	it	ne
 80023ee:	81a3      	strhne	r3, [r4, #12]
 80023f0:	bd10      	pop	{r4, pc}

080023f2 <__sclose>:
 80023f2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80023f6:	f000 b82d 	b.w	8002454 <_close_r>
	...

080023fc <_vsiprintf_r>:
 80023fc:	b500      	push	{lr}
 80023fe:	b09b      	sub	sp, #108	@ 0x6c
 8002400:	9100      	str	r1, [sp, #0]
 8002402:	9104      	str	r1, [sp, #16]
 8002404:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 8002408:	9105      	str	r1, [sp, #20]
 800240a:	9102      	str	r1, [sp, #8]
 800240c:	4905      	ldr	r1, [pc, #20]	@ (8002424 <_vsiprintf_r+0x28>)
 800240e:	9103      	str	r1, [sp, #12]
 8002410:	4669      	mov	r1, sp
 8002412:	f001 fbbf 	bl	8003b94 <_svfiprintf_r>
 8002416:	9b00      	ldr	r3, [sp, #0]
 8002418:	2200      	movs	r2, #0
 800241a:	701a      	strb	r2, [r3, #0]
 800241c:	b01b      	add	sp, #108	@ 0x6c
 800241e:	f85d fb04 	ldr.w	pc, [sp], #4
 8002422:	bf00      	nop
 8002424:	ffff0208 	.word	0xffff0208

08002428 <vsiprintf>:
 8002428:	4613      	mov	r3, r2
 800242a:	460a      	mov	r2, r1
 800242c:	4601      	mov	r1, r0
 800242e:	4802      	ldr	r0, [pc, #8]	@ (8002438 <vsiprintf+0x10>)
 8002430:	6800      	ldr	r0, [r0, #0]
 8002432:	f7ff bfe3 	b.w	80023fc <_vsiprintf_r>
 8002436:	bf00      	nop
 8002438:	2000000c 	.word	0x2000000c

0800243c <memset>:
 800243c:	4402      	add	r2, r0
 800243e:	4603      	mov	r3, r0
 8002440:	4293      	cmp	r3, r2
 8002442:	d100      	bne.n	8002446 <memset+0xa>
 8002444:	4770      	bx	lr
 8002446:	f803 1b01 	strb.w	r1, [r3], #1
 800244a:	e7f9      	b.n	8002440 <memset+0x4>

0800244c <_localeconv_r>:
 800244c:	4800      	ldr	r0, [pc, #0]	@ (8002450 <_localeconv_r+0x4>)
 800244e:	4770      	bx	lr
 8002450:	2000014c 	.word	0x2000014c

08002454 <_close_r>:
 8002454:	b538      	push	{r3, r4, r5, lr}
 8002456:	4d06      	ldr	r5, [pc, #24]	@ (8002470 <_close_r+0x1c>)
 8002458:	2300      	movs	r3, #0
 800245a:	4604      	mov	r4, r0
 800245c:	4608      	mov	r0, r1
 800245e:	602b      	str	r3, [r5, #0]
 8002460:	f7ff f994 	bl	800178c <_close>
 8002464:	1c43      	adds	r3, r0, #1
 8002466:	d102      	bne.n	800246e <_close_r+0x1a>
 8002468:	682b      	ldr	r3, [r5, #0]
 800246a:	b103      	cbz	r3, 800246e <_close_r+0x1a>
 800246c:	6023      	str	r3, [r4, #0]
 800246e:	bd38      	pop	{r3, r4, r5, pc}
 8002470:	20000340 	.word	0x20000340

08002474 <_lseek_r>:
 8002474:	b538      	push	{r3, r4, r5, lr}
 8002476:	4d07      	ldr	r5, [pc, #28]	@ (8002494 <_lseek_r+0x20>)
 8002478:	4604      	mov	r4, r0
 800247a:	4608      	mov	r0, r1
 800247c:	4611      	mov	r1, r2
 800247e:	2200      	movs	r2, #0
 8002480:	602a      	str	r2, [r5, #0]
 8002482:	461a      	mov	r2, r3
 8002484:	f7ff f9a9 	bl	80017da <_lseek>
 8002488:	1c43      	adds	r3, r0, #1
 800248a:	d102      	bne.n	8002492 <_lseek_r+0x1e>
 800248c:	682b      	ldr	r3, [r5, #0]
 800248e:	b103      	cbz	r3, 8002492 <_lseek_r+0x1e>
 8002490:	6023      	str	r3, [r4, #0]
 8002492:	bd38      	pop	{r3, r4, r5, pc}
 8002494:	20000340 	.word	0x20000340

08002498 <_read_r>:
 8002498:	b538      	push	{r3, r4, r5, lr}
 800249a:	4d07      	ldr	r5, [pc, #28]	@ (80024b8 <_read_r+0x20>)
 800249c:	4604      	mov	r4, r0
 800249e:	4608      	mov	r0, r1
 80024a0:	4611      	mov	r1, r2
 80024a2:	2200      	movs	r2, #0
 80024a4:	602a      	str	r2, [r5, #0]
 80024a6:	461a      	mov	r2, r3
 80024a8:	f7ff f937 	bl	800171a <_read>
 80024ac:	1c43      	adds	r3, r0, #1
 80024ae:	d102      	bne.n	80024b6 <_read_r+0x1e>
 80024b0:	682b      	ldr	r3, [r5, #0]
 80024b2:	b103      	cbz	r3, 80024b6 <_read_r+0x1e>
 80024b4:	6023      	str	r3, [r4, #0]
 80024b6:	bd38      	pop	{r3, r4, r5, pc}
 80024b8:	20000340 	.word	0x20000340

080024bc <_write_r>:
 80024bc:	b538      	push	{r3, r4, r5, lr}
 80024be:	4d07      	ldr	r5, [pc, #28]	@ (80024dc <_write_r+0x20>)
 80024c0:	4604      	mov	r4, r0
 80024c2:	4608      	mov	r0, r1
 80024c4:	4611      	mov	r1, r2
 80024c6:	2200      	movs	r2, #0
 80024c8:	602a      	str	r2, [r5, #0]
 80024ca:	461a      	mov	r2, r3
 80024cc:	f7ff f942 	bl	8001754 <_write>
 80024d0:	1c43      	adds	r3, r0, #1
 80024d2:	d102      	bne.n	80024da <_write_r+0x1e>
 80024d4:	682b      	ldr	r3, [r5, #0]
 80024d6:	b103      	cbz	r3, 80024da <_write_r+0x1e>
 80024d8:	6023      	str	r3, [r4, #0]
 80024da:	bd38      	pop	{r3, r4, r5, pc}
 80024dc:	20000340 	.word	0x20000340

080024e0 <__errno>:
 80024e0:	4b01      	ldr	r3, [pc, #4]	@ (80024e8 <__errno+0x8>)
 80024e2:	6818      	ldr	r0, [r3, #0]
 80024e4:	4770      	bx	lr
 80024e6:	bf00      	nop
 80024e8:	2000000c 	.word	0x2000000c

080024ec <__libc_init_array>:
 80024ec:	b570      	push	{r4, r5, r6, lr}
 80024ee:	4d0d      	ldr	r5, [pc, #52]	@ (8002524 <__libc_init_array+0x38>)
 80024f0:	4c0d      	ldr	r4, [pc, #52]	@ (8002528 <__libc_init_array+0x3c>)
 80024f2:	1b64      	subs	r4, r4, r5
 80024f4:	10a4      	asrs	r4, r4, #2
 80024f6:	2600      	movs	r6, #0
 80024f8:	42a6      	cmp	r6, r4
 80024fa:	d109      	bne.n	8002510 <__libc_init_array+0x24>
 80024fc:	4d0b      	ldr	r5, [pc, #44]	@ (800252c <__libc_init_array+0x40>)
 80024fe:	4c0c      	ldr	r4, [pc, #48]	@ (8002530 <__libc_init_array+0x44>)
 8002500:	f002 f866 	bl	80045d0 <_init>
 8002504:	1b64      	subs	r4, r4, r5
 8002506:	10a4      	asrs	r4, r4, #2
 8002508:	2600      	movs	r6, #0
 800250a:	42a6      	cmp	r6, r4
 800250c:	d105      	bne.n	800251a <__libc_init_array+0x2e>
 800250e:	bd70      	pop	{r4, r5, r6, pc}
 8002510:	f855 3b04 	ldr.w	r3, [r5], #4
 8002514:	4798      	blx	r3
 8002516:	3601      	adds	r6, #1
 8002518:	e7ee      	b.n	80024f8 <__libc_init_array+0xc>
 800251a:	f855 3b04 	ldr.w	r3, [r5], #4
 800251e:	4798      	blx	r3
 8002520:	3601      	adds	r6, #1
 8002522:	e7f2      	b.n	800250a <__libc_init_array+0x1e>
 8002524:	08004990 	.word	0x08004990
 8002528:	08004990 	.word	0x08004990
 800252c:	08004990 	.word	0x08004990
 8002530:	08004994 	.word	0x08004994

08002534 <__retarget_lock_init_recursive>:
 8002534:	4770      	bx	lr

08002536 <__retarget_lock_acquire_recursive>:
 8002536:	4770      	bx	lr

08002538 <__retarget_lock_release_recursive>:
 8002538:	4770      	bx	lr

0800253a <quorem>:
 800253a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800253e:	6903      	ldr	r3, [r0, #16]
 8002540:	690c      	ldr	r4, [r1, #16]
 8002542:	42a3      	cmp	r3, r4
 8002544:	4607      	mov	r7, r0
 8002546:	db7e      	blt.n	8002646 <quorem+0x10c>
 8002548:	3c01      	subs	r4, #1
 800254a:	f101 0814 	add.w	r8, r1, #20
 800254e:	00a3      	lsls	r3, r4, #2
 8002550:	f100 0514 	add.w	r5, r0, #20
 8002554:	9300      	str	r3, [sp, #0]
 8002556:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800255a:	9301      	str	r3, [sp, #4]
 800255c:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8002560:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002564:	3301      	adds	r3, #1
 8002566:	429a      	cmp	r2, r3
 8002568:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 800256c:	fbb2 f6f3 	udiv	r6, r2, r3
 8002570:	d32e      	bcc.n	80025d0 <quorem+0x96>
 8002572:	f04f 0a00 	mov.w	sl, #0
 8002576:	46c4      	mov	ip, r8
 8002578:	46ae      	mov	lr, r5
 800257a:	46d3      	mov	fp, sl
 800257c:	f85c 3b04 	ldr.w	r3, [ip], #4
 8002580:	b298      	uxth	r0, r3
 8002582:	fb06 a000 	mla	r0, r6, r0, sl
 8002586:	0c02      	lsrs	r2, r0, #16
 8002588:	0c1b      	lsrs	r3, r3, #16
 800258a:	fb06 2303 	mla	r3, r6, r3, r2
 800258e:	f8de 2000 	ldr.w	r2, [lr]
 8002592:	b280      	uxth	r0, r0
 8002594:	b292      	uxth	r2, r2
 8002596:	1a12      	subs	r2, r2, r0
 8002598:	445a      	add	r2, fp
 800259a:	f8de 0000 	ldr.w	r0, [lr]
 800259e:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80025a2:	b29b      	uxth	r3, r3
 80025a4:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 80025a8:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 80025ac:	b292      	uxth	r2, r2
 80025ae:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 80025b2:	45e1      	cmp	r9, ip
 80025b4:	f84e 2b04 	str.w	r2, [lr], #4
 80025b8:	ea4f 4b23 	mov.w	fp, r3, asr #16
 80025bc:	d2de      	bcs.n	800257c <quorem+0x42>
 80025be:	9b00      	ldr	r3, [sp, #0]
 80025c0:	58eb      	ldr	r3, [r5, r3]
 80025c2:	b92b      	cbnz	r3, 80025d0 <quorem+0x96>
 80025c4:	9b01      	ldr	r3, [sp, #4]
 80025c6:	3b04      	subs	r3, #4
 80025c8:	429d      	cmp	r5, r3
 80025ca:	461a      	mov	r2, r3
 80025cc:	d32f      	bcc.n	800262e <quorem+0xf4>
 80025ce:	613c      	str	r4, [r7, #16]
 80025d0:	4638      	mov	r0, r7
 80025d2:	f001 f97b 	bl	80038cc <__mcmp>
 80025d6:	2800      	cmp	r0, #0
 80025d8:	db25      	blt.n	8002626 <quorem+0xec>
 80025da:	4629      	mov	r1, r5
 80025dc:	2000      	movs	r0, #0
 80025de:	f858 2b04 	ldr.w	r2, [r8], #4
 80025e2:	f8d1 c000 	ldr.w	ip, [r1]
 80025e6:	fa1f fe82 	uxth.w	lr, r2
 80025ea:	fa1f f38c 	uxth.w	r3, ip
 80025ee:	eba3 030e 	sub.w	r3, r3, lr
 80025f2:	4403      	add	r3, r0
 80025f4:	0c12      	lsrs	r2, r2, #16
 80025f6:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 80025fa:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 80025fe:	b29b      	uxth	r3, r3
 8002600:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8002604:	45c1      	cmp	r9, r8
 8002606:	f841 3b04 	str.w	r3, [r1], #4
 800260a:	ea4f 4022 	mov.w	r0, r2, asr #16
 800260e:	d2e6      	bcs.n	80025de <quorem+0xa4>
 8002610:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002614:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8002618:	b922      	cbnz	r2, 8002624 <quorem+0xea>
 800261a:	3b04      	subs	r3, #4
 800261c:	429d      	cmp	r5, r3
 800261e:	461a      	mov	r2, r3
 8002620:	d30b      	bcc.n	800263a <quorem+0x100>
 8002622:	613c      	str	r4, [r7, #16]
 8002624:	3601      	adds	r6, #1
 8002626:	4630      	mov	r0, r6
 8002628:	b003      	add	sp, #12
 800262a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800262e:	6812      	ldr	r2, [r2, #0]
 8002630:	3b04      	subs	r3, #4
 8002632:	2a00      	cmp	r2, #0
 8002634:	d1cb      	bne.n	80025ce <quorem+0x94>
 8002636:	3c01      	subs	r4, #1
 8002638:	e7c6      	b.n	80025c8 <quorem+0x8e>
 800263a:	6812      	ldr	r2, [r2, #0]
 800263c:	3b04      	subs	r3, #4
 800263e:	2a00      	cmp	r2, #0
 8002640:	d1ef      	bne.n	8002622 <quorem+0xe8>
 8002642:	3c01      	subs	r4, #1
 8002644:	e7ea      	b.n	800261c <quorem+0xe2>
 8002646:	2000      	movs	r0, #0
 8002648:	e7ee      	b.n	8002628 <quorem+0xee>
 800264a:	0000      	movs	r0, r0
 800264c:	0000      	movs	r0, r0
	...

08002650 <_dtoa_r>:
 8002650:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002654:	69c7      	ldr	r7, [r0, #28]
 8002656:	b099      	sub	sp, #100	@ 0x64
 8002658:	ed8d 0b02 	vstr	d0, [sp, #8]
 800265c:	ec55 4b10 	vmov	r4, r5, d0
 8002660:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 8002662:	9109      	str	r1, [sp, #36]	@ 0x24
 8002664:	4683      	mov	fp, r0
 8002666:	920e      	str	r2, [sp, #56]	@ 0x38
 8002668:	9313      	str	r3, [sp, #76]	@ 0x4c
 800266a:	b97f      	cbnz	r7, 800268c <_dtoa_r+0x3c>
 800266c:	2010      	movs	r0, #16
 800266e:	f000 fdfd 	bl	800326c <malloc>
 8002672:	4602      	mov	r2, r0
 8002674:	f8cb 001c 	str.w	r0, [fp, #28]
 8002678:	b920      	cbnz	r0, 8002684 <_dtoa_r+0x34>
 800267a:	4ba7      	ldr	r3, [pc, #668]	@ (8002918 <_dtoa_r+0x2c8>)
 800267c:	21ef      	movs	r1, #239	@ 0xef
 800267e:	48a7      	ldr	r0, [pc, #668]	@ (800291c <_dtoa_r+0x2cc>)
 8002680:	f001 fc68 	bl	8003f54 <__assert_func>
 8002684:	e9c0 7701 	strd	r7, r7, [r0, #4]
 8002688:	6007      	str	r7, [r0, #0]
 800268a:	60c7      	str	r7, [r0, #12]
 800268c:	f8db 301c 	ldr.w	r3, [fp, #28]
 8002690:	6819      	ldr	r1, [r3, #0]
 8002692:	b159      	cbz	r1, 80026ac <_dtoa_r+0x5c>
 8002694:	685a      	ldr	r2, [r3, #4]
 8002696:	604a      	str	r2, [r1, #4]
 8002698:	2301      	movs	r3, #1
 800269a:	4093      	lsls	r3, r2
 800269c:	608b      	str	r3, [r1, #8]
 800269e:	4658      	mov	r0, fp
 80026a0:	f000 feda 	bl	8003458 <_Bfree>
 80026a4:	f8db 301c 	ldr.w	r3, [fp, #28]
 80026a8:	2200      	movs	r2, #0
 80026aa:	601a      	str	r2, [r3, #0]
 80026ac:	1e2b      	subs	r3, r5, #0
 80026ae:	bfb9      	ittee	lt
 80026b0:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 80026b4:	9303      	strlt	r3, [sp, #12]
 80026b6:	2300      	movge	r3, #0
 80026b8:	6033      	strge	r3, [r6, #0]
 80026ba:	9f03      	ldr	r7, [sp, #12]
 80026bc:	4b98      	ldr	r3, [pc, #608]	@ (8002920 <_dtoa_r+0x2d0>)
 80026be:	bfbc      	itt	lt
 80026c0:	2201      	movlt	r2, #1
 80026c2:	6032      	strlt	r2, [r6, #0]
 80026c4:	43bb      	bics	r3, r7
 80026c6:	d112      	bne.n	80026ee <_dtoa_r+0x9e>
 80026c8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80026ca:	f242 730f 	movw	r3, #9999	@ 0x270f
 80026ce:	6013      	str	r3, [r2, #0]
 80026d0:	f3c7 0313 	ubfx	r3, r7, #0, #20
 80026d4:	4323      	orrs	r3, r4
 80026d6:	f000 854d 	beq.w	8003174 <_dtoa_r+0xb24>
 80026da:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 80026dc:	f8df a254 	ldr.w	sl, [pc, #596]	@ 8002934 <_dtoa_r+0x2e4>
 80026e0:	2b00      	cmp	r3, #0
 80026e2:	f000 854f 	beq.w	8003184 <_dtoa_r+0xb34>
 80026e6:	f10a 0303 	add.w	r3, sl, #3
 80026ea:	f000 bd49 	b.w	8003180 <_dtoa_r+0xb30>
 80026ee:	ed9d 7b02 	vldr	d7, [sp, #8]
 80026f2:	2200      	movs	r2, #0
 80026f4:	ec51 0b17 	vmov	r0, r1, d7
 80026f8:	2300      	movs	r3, #0
 80026fa:	ed8d 7b0c 	vstr	d7, [sp, #48]	@ 0x30
 80026fe:	f7fe f9eb 	bl	8000ad8 <__aeabi_dcmpeq>
 8002702:	4680      	mov	r8, r0
 8002704:	b158      	cbz	r0, 800271e <_dtoa_r+0xce>
 8002706:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8002708:	2301      	movs	r3, #1
 800270a:	6013      	str	r3, [r2, #0]
 800270c:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 800270e:	b113      	cbz	r3, 8002716 <_dtoa_r+0xc6>
 8002710:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8002712:	4b84      	ldr	r3, [pc, #528]	@ (8002924 <_dtoa_r+0x2d4>)
 8002714:	6013      	str	r3, [r2, #0]
 8002716:	f8df a220 	ldr.w	sl, [pc, #544]	@ 8002938 <_dtoa_r+0x2e8>
 800271a:	f000 bd33 	b.w	8003184 <_dtoa_r+0xb34>
 800271e:	ed9d 0b0c 	vldr	d0, [sp, #48]	@ 0x30
 8002722:	aa16      	add	r2, sp, #88	@ 0x58
 8002724:	a917      	add	r1, sp, #92	@ 0x5c
 8002726:	4658      	mov	r0, fp
 8002728:	f001 f980 	bl	8003a2c <__d2b>
 800272c:	f3c7 560a 	ubfx	r6, r7, #20, #11
 8002730:	4681      	mov	r9, r0
 8002732:	2e00      	cmp	r6, #0
 8002734:	d077      	beq.n	8002826 <_dtoa_r+0x1d6>
 8002736:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8002738:	f8cd 8050 	str.w	r8, [sp, #80]	@ 0x50
 800273c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002740:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8002744:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 8002748:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 800274c:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 8002750:	4619      	mov	r1, r3
 8002752:	2200      	movs	r2, #0
 8002754:	4b74      	ldr	r3, [pc, #464]	@ (8002928 <_dtoa_r+0x2d8>)
 8002756:	f7fd fd9f 	bl	8000298 <__aeabi_dsub>
 800275a:	a369      	add	r3, pc, #420	@ (adr r3, 8002900 <_dtoa_r+0x2b0>)
 800275c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002760:	f7fd ff52 	bl	8000608 <__aeabi_dmul>
 8002764:	a368      	add	r3, pc, #416	@ (adr r3, 8002908 <_dtoa_r+0x2b8>)
 8002766:	e9d3 2300 	ldrd	r2, r3, [r3]
 800276a:	f7fd fd97 	bl	800029c <__adddf3>
 800276e:	4604      	mov	r4, r0
 8002770:	4630      	mov	r0, r6
 8002772:	460d      	mov	r5, r1
 8002774:	f7fd fede 	bl	8000534 <__aeabi_i2d>
 8002778:	a365      	add	r3, pc, #404	@ (adr r3, 8002910 <_dtoa_r+0x2c0>)
 800277a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800277e:	f7fd ff43 	bl	8000608 <__aeabi_dmul>
 8002782:	4602      	mov	r2, r0
 8002784:	460b      	mov	r3, r1
 8002786:	4620      	mov	r0, r4
 8002788:	4629      	mov	r1, r5
 800278a:	f7fd fd87 	bl	800029c <__adddf3>
 800278e:	4604      	mov	r4, r0
 8002790:	460d      	mov	r5, r1
 8002792:	f7fe f9e9 	bl	8000b68 <__aeabi_d2iz>
 8002796:	2200      	movs	r2, #0
 8002798:	4607      	mov	r7, r0
 800279a:	2300      	movs	r3, #0
 800279c:	4620      	mov	r0, r4
 800279e:	4629      	mov	r1, r5
 80027a0:	f7fe f9a4 	bl	8000aec <__aeabi_dcmplt>
 80027a4:	b140      	cbz	r0, 80027b8 <_dtoa_r+0x168>
 80027a6:	4638      	mov	r0, r7
 80027a8:	f7fd fec4 	bl	8000534 <__aeabi_i2d>
 80027ac:	4622      	mov	r2, r4
 80027ae:	462b      	mov	r3, r5
 80027b0:	f7fe f992 	bl	8000ad8 <__aeabi_dcmpeq>
 80027b4:	b900      	cbnz	r0, 80027b8 <_dtoa_r+0x168>
 80027b6:	3f01      	subs	r7, #1
 80027b8:	2f16      	cmp	r7, #22
 80027ba:	d851      	bhi.n	8002860 <_dtoa_r+0x210>
 80027bc:	4b5b      	ldr	r3, [pc, #364]	@ (800292c <_dtoa_r+0x2dc>)
 80027be:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 80027c2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80027c6:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80027ca:	f7fe f98f 	bl	8000aec <__aeabi_dcmplt>
 80027ce:	2800      	cmp	r0, #0
 80027d0:	d048      	beq.n	8002864 <_dtoa_r+0x214>
 80027d2:	3f01      	subs	r7, #1
 80027d4:	2300      	movs	r3, #0
 80027d6:	9312      	str	r3, [sp, #72]	@ 0x48
 80027d8:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80027da:	1b9b      	subs	r3, r3, r6
 80027dc:	1e5a      	subs	r2, r3, #1
 80027de:	bf44      	itt	mi
 80027e0:	f1c3 0801 	rsbmi	r8, r3, #1
 80027e4:	2300      	movmi	r3, #0
 80027e6:	9208      	str	r2, [sp, #32]
 80027e8:	bf54      	ite	pl
 80027ea:	f04f 0800 	movpl.w	r8, #0
 80027ee:	9308      	strmi	r3, [sp, #32]
 80027f0:	2f00      	cmp	r7, #0
 80027f2:	db39      	blt.n	8002868 <_dtoa_r+0x218>
 80027f4:	9b08      	ldr	r3, [sp, #32]
 80027f6:	970f      	str	r7, [sp, #60]	@ 0x3c
 80027f8:	443b      	add	r3, r7
 80027fa:	9308      	str	r3, [sp, #32]
 80027fc:	2300      	movs	r3, #0
 80027fe:	930a      	str	r3, [sp, #40]	@ 0x28
 8002800:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002802:	2b09      	cmp	r3, #9
 8002804:	d864      	bhi.n	80028d0 <_dtoa_r+0x280>
 8002806:	2b05      	cmp	r3, #5
 8002808:	bfc4      	itt	gt
 800280a:	3b04      	subgt	r3, #4
 800280c:	9309      	strgt	r3, [sp, #36]	@ 0x24
 800280e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002810:	f1a3 0302 	sub.w	r3, r3, #2
 8002814:	bfcc      	ite	gt
 8002816:	2400      	movgt	r4, #0
 8002818:	2401      	movle	r4, #1
 800281a:	2b03      	cmp	r3, #3
 800281c:	d863      	bhi.n	80028e6 <_dtoa_r+0x296>
 800281e:	e8df f003 	tbb	[pc, r3]
 8002822:	372a      	.short	0x372a
 8002824:	5535      	.short	0x5535
 8002826:	e9dd 6316 	ldrd	r6, r3, [sp, #88]	@ 0x58
 800282a:	441e      	add	r6, r3
 800282c:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 8002830:	2b20      	cmp	r3, #32
 8002832:	bfc1      	itttt	gt
 8002834:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 8002838:	409f      	lslgt	r7, r3
 800283a:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 800283e:	fa24 f303 	lsrgt.w	r3, r4, r3
 8002842:	bfd6      	itet	le
 8002844:	f1c3 0320 	rsble	r3, r3, #32
 8002848:	ea47 0003 	orrgt.w	r0, r7, r3
 800284c:	fa04 f003 	lslle.w	r0, r4, r3
 8002850:	f7fd fe60 	bl	8000514 <__aeabi_ui2d>
 8002854:	2201      	movs	r2, #1
 8002856:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 800285a:	3e01      	subs	r6, #1
 800285c:	9214      	str	r2, [sp, #80]	@ 0x50
 800285e:	e777      	b.n	8002750 <_dtoa_r+0x100>
 8002860:	2301      	movs	r3, #1
 8002862:	e7b8      	b.n	80027d6 <_dtoa_r+0x186>
 8002864:	9012      	str	r0, [sp, #72]	@ 0x48
 8002866:	e7b7      	b.n	80027d8 <_dtoa_r+0x188>
 8002868:	427b      	negs	r3, r7
 800286a:	930a      	str	r3, [sp, #40]	@ 0x28
 800286c:	2300      	movs	r3, #0
 800286e:	eba8 0807 	sub.w	r8, r8, r7
 8002872:	930f      	str	r3, [sp, #60]	@ 0x3c
 8002874:	e7c4      	b.n	8002800 <_dtoa_r+0x1b0>
 8002876:	2300      	movs	r3, #0
 8002878:	930b      	str	r3, [sp, #44]	@ 0x2c
 800287a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800287c:	2b00      	cmp	r3, #0
 800287e:	dc35      	bgt.n	80028ec <_dtoa_r+0x29c>
 8002880:	2301      	movs	r3, #1
 8002882:	9300      	str	r3, [sp, #0]
 8002884:	9307      	str	r3, [sp, #28]
 8002886:	461a      	mov	r2, r3
 8002888:	920e      	str	r2, [sp, #56]	@ 0x38
 800288a:	e00b      	b.n	80028a4 <_dtoa_r+0x254>
 800288c:	2301      	movs	r3, #1
 800288e:	e7f3      	b.n	8002878 <_dtoa_r+0x228>
 8002890:	2300      	movs	r3, #0
 8002892:	930b      	str	r3, [sp, #44]	@ 0x2c
 8002894:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8002896:	18fb      	adds	r3, r7, r3
 8002898:	9300      	str	r3, [sp, #0]
 800289a:	3301      	adds	r3, #1
 800289c:	2b01      	cmp	r3, #1
 800289e:	9307      	str	r3, [sp, #28]
 80028a0:	bfb8      	it	lt
 80028a2:	2301      	movlt	r3, #1
 80028a4:	f8db 001c 	ldr.w	r0, [fp, #28]
 80028a8:	2100      	movs	r1, #0
 80028aa:	2204      	movs	r2, #4
 80028ac:	f102 0514 	add.w	r5, r2, #20
 80028b0:	429d      	cmp	r5, r3
 80028b2:	d91f      	bls.n	80028f4 <_dtoa_r+0x2a4>
 80028b4:	6041      	str	r1, [r0, #4]
 80028b6:	4658      	mov	r0, fp
 80028b8:	f000 fd8e 	bl	80033d8 <_Balloc>
 80028bc:	4682      	mov	sl, r0
 80028be:	2800      	cmp	r0, #0
 80028c0:	d13c      	bne.n	800293c <_dtoa_r+0x2ec>
 80028c2:	4b1b      	ldr	r3, [pc, #108]	@ (8002930 <_dtoa_r+0x2e0>)
 80028c4:	4602      	mov	r2, r0
 80028c6:	f240 11af 	movw	r1, #431	@ 0x1af
 80028ca:	e6d8      	b.n	800267e <_dtoa_r+0x2e>
 80028cc:	2301      	movs	r3, #1
 80028ce:	e7e0      	b.n	8002892 <_dtoa_r+0x242>
 80028d0:	2401      	movs	r4, #1
 80028d2:	2300      	movs	r3, #0
 80028d4:	9309      	str	r3, [sp, #36]	@ 0x24
 80028d6:	940b      	str	r4, [sp, #44]	@ 0x2c
 80028d8:	f04f 33ff 	mov.w	r3, #4294967295
 80028dc:	9300      	str	r3, [sp, #0]
 80028de:	9307      	str	r3, [sp, #28]
 80028e0:	2200      	movs	r2, #0
 80028e2:	2312      	movs	r3, #18
 80028e4:	e7d0      	b.n	8002888 <_dtoa_r+0x238>
 80028e6:	2301      	movs	r3, #1
 80028e8:	930b      	str	r3, [sp, #44]	@ 0x2c
 80028ea:	e7f5      	b.n	80028d8 <_dtoa_r+0x288>
 80028ec:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80028ee:	9300      	str	r3, [sp, #0]
 80028f0:	9307      	str	r3, [sp, #28]
 80028f2:	e7d7      	b.n	80028a4 <_dtoa_r+0x254>
 80028f4:	3101      	adds	r1, #1
 80028f6:	0052      	lsls	r2, r2, #1
 80028f8:	e7d8      	b.n	80028ac <_dtoa_r+0x25c>
 80028fa:	bf00      	nop
 80028fc:	f3af 8000 	nop.w
 8002900:	636f4361 	.word	0x636f4361
 8002904:	3fd287a7 	.word	0x3fd287a7
 8002908:	8b60c8b3 	.word	0x8b60c8b3
 800290c:	3fc68a28 	.word	0x3fc68a28
 8002910:	509f79fb 	.word	0x509f79fb
 8002914:	3fd34413 	.word	0x3fd34413
 8002918:	0800465a 	.word	0x0800465a
 800291c:	08004671 	.word	0x08004671
 8002920:	7ff00000 	.word	0x7ff00000
 8002924:	0800462a 	.word	0x0800462a
 8002928:	3ff80000 	.word	0x3ff80000
 800292c:	08004768 	.word	0x08004768
 8002930:	080046c9 	.word	0x080046c9
 8002934:	08004656 	.word	0x08004656
 8002938:	08004629 	.word	0x08004629
 800293c:	f8db 301c 	ldr.w	r3, [fp, #28]
 8002940:	6018      	str	r0, [r3, #0]
 8002942:	9b07      	ldr	r3, [sp, #28]
 8002944:	2b0e      	cmp	r3, #14
 8002946:	f200 80a4 	bhi.w	8002a92 <_dtoa_r+0x442>
 800294a:	2c00      	cmp	r4, #0
 800294c:	f000 80a1 	beq.w	8002a92 <_dtoa_r+0x442>
 8002950:	2f00      	cmp	r7, #0
 8002952:	dd33      	ble.n	80029bc <_dtoa_r+0x36c>
 8002954:	4bad      	ldr	r3, [pc, #692]	@ (8002c0c <_dtoa_r+0x5bc>)
 8002956:	f007 020f 	and.w	r2, r7, #15
 800295a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800295e:	ed93 7b00 	vldr	d7, [r3]
 8002962:	05f8      	lsls	r0, r7, #23
 8002964:	ed8d 7b04 	vstr	d7, [sp, #16]
 8002968:	ea4f 1427 	mov.w	r4, r7, asr #4
 800296c:	d516      	bpl.n	800299c <_dtoa_r+0x34c>
 800296e:	4ba8      	ldr	r3, [pc, #672]	@ (8002c10 <_dtoa_r+0x5c0>)
 8002970:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8002974:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8002978:	f7fd ff70 	bl	800085c <__aeabi_ddiv>
 800297c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002980:	f004 040f 	and.w	r4, r4, #15
 8002984:	2603      	movs	r6, #3
 8002986:	4da2      	ldr	r5, [pc, #648]	@ (8002c10 <_dtoa_r+0x5c0>)
 8002988:	b954      	cbnz	r4, 80029a0 <_dtoa_r+0x350>
 800298a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800298e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002992:	f7fd ff63 	bl	800085c <__aeabi_ddiv>
 8002996:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800299a:	e028      	b.n	80029ee <_dtoa_r+0x39e>
 800299c:	2602      	movs	r6, #2
 800299e:	e7f2      	b.n	8002986 <_dtoa_r+0x336>
 80029a0:	07e1      	lsls	r1, r4, #31
 80029a2:	d508      	bpl.n	80029b6 <_dtoa_r+0x366>
 80029a4:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80029a8:	e9d5 2300 	ldrd	r2, r3, [r5]
 80029ac:	f7fd fe2c 	bl	8000608 <__aeabi_dmul>
 80029b0:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80029b4:	3601      	adds	r6, #1
 80029b6:	1064      	asrs	r4, r4, #1
 80029b8:	3508      	adds	r5, #8
 80029ba:	e7e5      	b.n	8002988 <_dtoa_r+0x338>
 80029bc:	f000 80d2 	beq.w	8002b64 <_dtoa_r+0x514>
 80029c0:	427c      	negs	r4, r7
 80029c2:	4b92      	ldr	r3, [pc, #584]	@ (8002c0c <_dtoa_r+0x5bc>)
 80029c4:	4d92      	ldr	r5, [pc, #584]	@ (8002c10 <_dtoa_r+0x5c0>)
 80029c6:	f004 020f 	and.w	r2, r4, #15
 80029ca:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80029ce:	e9d3 2300 	ldrd	r2, r3, [r3]
 80029d2:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80029d6:	f7fd fe17 	bl	8000608 <__aeabi_dmul>
 80029da:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80029de:	1124      	asrs	r4, r4, #4
 80029e0:	2300      	movs	r3, #0
 80029e2:	2602      	movs	r6, #2
 80029e4:	2c00      	cmp	r4, #0
 80029e6:	f040 80b2 	bne.w	8002b4e <_dtoa_r+0x4fe>
 80029ea:	2b00      	cmp	r3, #0
 80029ec:	d1d3      	bne.n	8002996 <_dtoa_r+0x346>
 80029ee:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 80029f0:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 80029f4:	2b00      	cmp	r3, #0
 80029f6:	f000 80b7 	beq.w	8002b68 <_dtoa_r+0x518>
 80029fa:	4b86      	ldr	r3, [pc, #536]	@ (8002c14 <_dtoa_r+0x5c4>)
 80029fc:	2200      	movs	r2, #0
 80029fe:	4620      	mov	r0, r4
 8002a00:	4629      	mov	r1, r5
 8002a02:	f7fe f873 	bl	8000aec <__aeabi_dcmplt>
 8002a06:	2800      	cmp	r0, #0
 8002a08:	f000 80ae 	beq.w	8002b68 <_dtoa_r+0x518>
 8002a0c:	9b07      	ldr	r3, [sp, #28]
 8002a0e:	2b00      	cmp	r3, #0
 8002a10:	f000 80aa 	beq.w	8002b68 <_dtoa_r+0x518>
 8002a14:	9b00      	ldr	r3, [sp, #0]
 8002a16:	2b00      	cmp	r3, #0
 8002a18:	dd37      	ble.n	8002a8a <_dtoa_r+0x43a>
 8002a1a:	1e7b      	subs	r3, r7, #1
 8002a1c:	9304      	str	r3, [sp, #16]
 8002a1e:	4620      	mov	r0, r4
 8002a20:	4b7d      	ldr	r3, [pc, #500]	@ (8002c18 <_dtoa_r+0x5c8>)
 8002a22:	2200      	movs	r2, #0
 8002a24:	4629      	mov	r1, r5
 8002a26:	f7fd fdef 	bl	8000608 <__aeabi_dmul>
 8002a2a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002a2e:	9c00      	ldr	r4, [sp, #0]
 8002a30:	3601      	adds	r6, #1
 8002a32:	4630      	mov	r0, r6
 8002a34:	f7fd fd7e 	bl	8000534 <__aeabi_i2d>
 8002a38:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002a3c:	f7fd fde4 	bl	8000608 <__aeabi_dmul>
 8002a40:	4b76      	ldr	r3, [pc, #472]	@ (8002c1c <_dtoa_r+0x5cc>)
 8002a42:	2200      	movs	r2, #0
 8002a44:	f7fd fc2a 	bl	800029c <__adddf3>
 8002a48:	4605      	mov	r5, r0
 8002a4a:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 8002a4e:	2c00      	cmp	r4, #0
 8002a50:	f040 808d 	bne.w	8002b6e <_dtoa_r+0x51e>
 8002a54:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002a58:	4b71      	ldr	r3, [pc, #452]	@ (8002c20 <_dtoa_r+0x5d0>)
 8002a5a:	2200      	movs	r2, #0
 8002a5c:	f7fd fc1c 	bl	8000298 <__aeabi_dsub>
 8002a60:	4602      	mov	r2, r0
 8002a62:	460b      	mov	r3, r1
 8002a64:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002a68:	462a      	mov	r2, r5
 8002a6a:	4633      	mov	r3, r6
 8002a6c:	f7fe f85c 	bl	8000b28 <__aeabi_dcmpgt>
 8002a70:	2800      	cmp	r0, #0
 8002a72:	f040 828b 	bne.w	8002f8c <_dtoa_r+0x93c>
 8002a76:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002a7a:	462a      	mov	r2, r5
 8002a7c:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 8002a80:	f7fe f834 	bl	8000aec <__aeabi_dcmplt>
 8002a84:	2800      	cmp	r0, #0
 8002a86:	f040 8128 	bne.w	8002cda <_dtoa_r+0x68a>
 8002a8a:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 8002a8e:	e9cd 3402 	strd	r3, r4, [sp, #8]
 8002a92:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8002a94:	2b00      	cmp	r3, #0
 8002a96:	f2c0 815a 	blt.w	8002d4e <_dtoa_r+0x6fe>
 8002a9a:	2f0e      	cmp	r7, #14
 8002a9c:	f300 8157 	bgt.w	8002d4e <_dtoa_r+0x6fe>
 8002aa0:	4b5a      	ldr	r3, [pc, #360]	@ (8002c0c <_dtoa_r+0x5bc>)
 8002aa2:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8002aa6:	ed93 7b00 	vldr	d7, [r3]
 8002aaa:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8002aac:	2b00      	cmp	r3, #0
 8002aae:	ed8d 7b00 	vstr	d7, [sp]
 8002ab2:	da03      	bge.n	8002abc <_dtoa_r+0x46c>
 8002ab4:	9b07      	ldr	r3, [sp, #28]
 8002ab6:	2b00      	cmp	r3, #0
 8002ab8:	f340 8101 	ble.w	8002cbe <_dtoa_r+0x66e>
 8002abc:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8002ac0:	4656      	mov	r6, sl
 8002ac2:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002ac6:	4620      	mov	r0, r4
 8002ac8:	4629      	mov	r1, r5
 8002aca:	f7fd fec7 	bl	800085c <__aeabi_ddiv>
 8002ace:	f7fe f84b 	bl	8000b68 <__aeabi_d2iz>
 8002ad2:	4680      	mov	r8, r0
 8002ad4:	f7fd fd2e 	bl	8000534 <__aeabi_i2d>
 8002ad8:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002adc:	f7fd fd94 	bl	8000608 <__aeabi_dmul>
 8002ae0:	4602      	mov	r2, r0
 8002ae2:	460b      	mov	r3, r1
 8002ae4:	4620      	mov	r0, r4
 8002ae6:	4629      	mov	r1, r5
 8002ae8:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 8002aec:	f7fd fbd4 	bl	8000298 <__aeabi_dsub>
 8002af0:	f806 4b01 	strb.w	r4, [r6], #1
 8002af4:	9d07      	ldr	r5, [sp, #28]
 8002af6:	eba6 040a 	sub.w	r4, r6, sl
 8002afa:	42a5      	cmp	r5, r4
 8002afc:	4602      	mov	r2, r0
 8002afe:	460b      	mov	r3, r1
 8002b00:	f040 8117 	bne.w	8002d32 <_dtoa_r+0x6e2>
 8002b04:	f7fd fbca 	bl	800029c <__adddf3>
 8002b08:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002b0c:	4604      	mov	r4, r0
 8002b0e:	460d      	mov	r5, r1
 8002b10:	f7fe f80a 	bl	8000b28 <__aeabi_dcmpgt>
 8002b14:	2800      	cmp	r0, #0
 8002b16:	f040 80f9 	bne.w	8002d0c <_dtoa_r+0x6bc>
 8002b1a:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002b1e:	4620      	mov	r0, r4
 8002b20:	4629      	mov	r1, r5
 8002b22:	f7fd ffd9 	bl	8000ad8 <__aeabi_dcmpeq>
 8002b26:	b118      	cbz	r0, 8002b30 <_dtoa_r+0x4e0>
 8002b28:	f018 0f01 	tst.w	r8, #1
 8002b2c:	f040 80ee 	bne.w	8002d0c <_dtoa_r+0x6bc>
 8002b30:	4649      	mov	r1, r9
 8002b32:	4658      	mov	r0, fp
 8002b34:	f000 fc90 	bl	8003458 <_Bfree>
 8002b38:	2300      	movs	r3, #0
 8002b3a:	7033      	strb	r3, [r6, #0]
 8002b3c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8002b3e:	3701      	adds	r7, #1
 8002b40:	601f      	str	r7, [r3, #0]
 8002b42:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8002b44:	2b00      	cmp	r3, #0
 8002b46:	f000 831d 	beq.w	8003184 <_dtoa_r+0xb34>
 8002b4a:	601e      	str	r6, [r3, #0]
 8002b4c:	e31a      	b.n	8003184 <_dtoa_r+0xb34>
 8002b4e:	07e2      	lsls	r2, r4, #31
 8002b50:	d505      	bpl.n	8002b5e <_dtoa_r+0x50e>
 8002b52:	e9d5 2300 	ldrd	r2, r3, [r5]
 8002b56:	f7fd fd57 	bl	8000608 <__aeabi_dmul>
 8002b5a:	3601      	adds	r6, #1
 8002b5c:	2301      	movs	r3, #1
 8002b5e:	1064      	asrs	r4, r4, #1
 8002b60:	3508      	adds	r5, #8
 8002b62:	e73f      	b.n	80029e4 <_dtoa_r+0x394>
 8002b64:	2602      	movs	r6, #2
 8002b66:	e742      	b.n	80029ee <_dtoa_r+0x39e>
 8002b68:	9c07      	ldr	r4, [sp, #28]
 8002b6a:	9704      	str	r7, [sp, #16]
 8002b6c:	e761      	b.n	8002a32 <_dtoa_r+0x3e2>
 8002b6e:	4b27      	ldr	r3, [pc, #156]	@ (8002c0c <_dtoa_r+0x5bc>)
 8002b70:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8002b72:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8002b76:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8002b7a:	4454      	add	r4, sl
 8002b7c:	2900      	cmp	r1, #0
 8002b7e:	d053      	beq.n	8002c28 <_dtoa_r+0x5d8>
 8002b80:	4928      	ldr	r1, [pc, #160]	@ (8002c24 <_dtoa_r+0x5d4>)
 8002b82:	2000      	movs	r0, #0
 8002b84:	f7fd fe6a 	bl	800085c <__aeabi_ddiv>
 8002b88:	4633      	mov	r3, r6
 8002b8a:	462a      	mov	r2, r5
 8002b8c:	f7fd fb84 	bl	8000298 <__aeabi_dsub>
 8002b90:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8002b94:	4656      	mov	r6, sl
 8002b96:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002b9a:	f7fd ffe5 	bl	8000b68 <__aeabi_d2iz>
 8002b9e:	4605      	mov	r5, r0
 8002ba0:	f7fd fcc8 	bl	8000534 <__aeabi_i2d>
 8002ba4:	4602      	mov	r2, r0
 8002ba6:	460b      	mov	r3, r1
 8002ba8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002bac:	f7fd fb74 	bl	8000298 <__aeabi_dsub>
 8002bb0:	3530      	adds	r5, #48	@ 0x30
 8002bb2:	4602      	mov	r2, r0
 8002bb4:	460b      	mov	r3, r1
 8002bb6:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002bba:	f806 5b01 	strb.w	r5, [r6], #1
 8002bbe:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8002bc2:	f7fd ff93 	bl	8000aec <__aeabi_dcmplt>
 8002bc6:	2800      	cmp	r0, #0
 8002bc8:	d171      	bne.n	8002cae <_dtoa_r+0x65e>
 8002bca:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002bce:	4911      	ldr	r1, [pc, #68]	@ (8002c14 <_dtoa_r+0x5c4>)
 8002bd0:	2000      	movs	r0, #0
 8002bd2:	f7fd fb61 	bl	8000298 <__aeabi_dsub>
 8002bd6:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8002bda:	f7fd ff87 	bl	8000aec <__aeabi_dcmplt>
 8002bde:	2800      	cmp	r0, #0
 8002be0:	f040 8095 	bne.w	8002d0e <_dtoa_r+0x6be>
 8002be4:	42a6      	cmp	r6, r4
 8002be6:	f43f af50 	beq.w	8002a8a <_dtoa_r+0x43a>
 8002bea:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8002bee:	4b0a      	ldr	r3, [pc, #40]	@ (8002c18 <_dtoa_r+0x5c8>)
 8002bf0:	2200      	movs	r2, #0
 8002bf2:	f7fd fd09 	bl	8000608 <__aeabi_dmul>
 8002bf6:	4b08      	ldr	r3, [pc, #32]	@ (8002c18 <_dtoa_r+0x5c8>)
 8002bf8:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8002bfc:	2200      	movs	r2, #0
 8002bfe:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002c02:	f7fd fd01 	bl	8000608 <__aeabi_dmul>
 8002c06:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002c0a:	e7c4      	b.n	8002b96 <_dtoa_r+0x546>
 8002c0c:	08004768 	.word	0x08004768
 8002c10:	08004740 	.word	0x08004740
 8002c14:	3ff00000 	.word	0x3ff00000
 8002c18:	40240000 	.word	0x40240000
 8002c1c:	401c0000 	.word	0x401c0000
 8002c20:	40140000 	.word	0x40140000
 8002c24:	3fe00000 	.word	0x3fe00000
 8002c28:	4631      	mov	r1, r6
 8002c2a:	4628      	mov	r0, r5
 8002c2c:	f7fd fcec 	bl	8000608 <__aeabi_dmul>
 8002c30:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8002c34:	9415      	str	r4, [sp, #84]	@ 0x54
 8002c36:	4656      	mov	r6, sl
 8002c38:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002c3c:	f7fd ff94 	bl	8000b68 <__aeabi_d2iz>
 8002c40:	4605      	mov	r5, r0
 8002c42:	f7fd fc77 	bl	8000534 <__aeabi_i2d>
 8002c46:	4602      	mov	r2, r0
 8002c48:	460b      	mov	r3, r1
 8002c4a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002c4e:	f7fd fb23 	bl	8000298 <__aeabi_dsub>
 8002c52:	3530      	adds	r5, #48	@ 0x30
 8002c54:	f806 5b01 	strb.w	r5, [r6], #1
 8002c58:	4602      	mov	r2, r0
 8002c5a:	460b      	mov	r3, r1
 8002c5c:	42a6      	cmp	r6, r4
 8002c5e:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002c62:	f04f 0200 	mov.w	r2, #0
 8002c66:	d124      	bne.n	8002cb2 <_dtoa_r+0x662>
 8002c68:	4bac      	ldr	r3, [pc, #688]	@ (8002f1c <_dtoa_r+0x8cc>)
 8002c6a:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8002c6e:	f7fd fb15 	bl	800029c <__adddf3>
 8002c72:	4602      	mov	r2, r0
 8002c74:	460b      	mov	r3, r1
 8002c76:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002c7a:	f7fd ff55 	bl	8000b28 <__aeabi_dcmpgt>
 8002c7e:	2800      	cmp	r0, #0
 8002c80:	d145      	bne.n	8002d0e <_dtoa_r+0x6be>
 8002c82:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8002c86:	49a5      	ldr	r1, [pc, #660]	@ (8002f1c <_dtoa_r+0x8cc>)
 8002c88:	2000      	movs	r0, #0
 8002c8a:	f7fd fb05 	bl	8000298 <__aeabi_dsub>
 8002c8e:	4602      	mov	r2, r0
 8002c90:	460b      	mov	r3, r1
 8002c92:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002c96:	f7fd ff29 	bl	8000aec <__aeabi_dcmplt>
 8002c9a:	2800      	cmp	r0, #0
 8002c9c:	f43f aef5 	beq.w	8002a8a <_dtoa_r+0x43a>
 8002ca0:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 8002ca2:	1e73      	subs	r3, r6, #1
 8002ca4:	9315      	str	r3, [sp, #84]	@ 0x54
 8002ca6:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8002caa:	2b30      	cmp	r3, #48	@ 0x30
 8002cac:	d0f8      	beq.n	8002ca0 <_dtoa_r+0x650>
 8002cae:	9f04      	ldr	r7, [sp, #16]
 8002cb0:	e73e      	b.n	8002b30 <_dtoa_r+0x4e0>
 8002cb2:	4b9b      	ldr	r3, [pc, #620]	@ (8002f20 <_dtoa_r+0x8d0>)
 8002cb4:	f7fd fca8 	bl	8000608 <__aeabi_dmul>
 8002cb8:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002cbc:	e7bc      	b.n	8002c38 <_dtoa_r+0x5e8>
 8002cbe:	d10c      	bne.n	8002cda <_dtoa_r+0x68a>
 8002cc0:	4b98      	ldr	r3, [pc, #608]	@ (8002f24 <_dtoa_r+0x8d4>)
 8002cc2:	2200      	movs	r2, #0
 8002cc4:	e9dd 0100 	ldrd	r0, r1, [sp]
 8002cc8:	f7fd fc9e 	bl	8000608 <__aeabi_dmul>
 8002ccc:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002cd0:	f7fd ff20 	bl	8000b14 <__aeabi_dcmpge>
 8002cd4:	2800      	cmp	r0, #0
 8002cd6:	f000 8157 	beq.w	8002f88 <_dtoa_r+0x938>
 8002cda:	2400      	movs	r4, #0
 8002cdc:	4625      	mov	r5, r4
 8002cde:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8002ce0:	43db      	mvns	r3, r3
 8002ce2:	9304      	str	r3, [sp, #16]
 8002ce4:	4656      	mov	r6, sl
 8002ce6:	2700      	movs	r7, #0
 8002ce8:	4621      	mov	r1, r4
 8002cea:	4658      	mov	r0, fp
 8002cec:	f000 fbb4 	bl	8003458 <_Bfree>
 8002cf0:	2d00      	cmp	r5, #0
 8002cf2:	d0dc      	beq.n	8002cae <_dtoa_r+0x65e>
 8002cf4:	b12f      	cbz	r7, 8002d02 <_dtoa_r+0x6b2>
 8002cf6:	42af      	cmp	r7, r5
 8002cf8:	d003      	beq.n	8002d02 <_dtoa_r+0x6b2>
 8002cfa:	4639      	mov	r1, r7
 8002cfc:	4658      	mov	r0, fp
 8002cfe:	f000 fbab 	bl	8003458 <_Bfree>
 8002d02:	4629      	mov	r1, r5
 8002d04:	4658      	mov	r0, fp
 8002d06:	f000 fba7 	bl	8003458 <_Bfree>
 8002d0a:	e7d0      	b.n	8002cae <_dtoa_r+0x65e>
 8002d0c:	9704      	str	r7, [sp, #16]
 8002d0e:	4633      	mov	r3, r6
 8002d10:	461e      	mov	r6, r3
 8002d12:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8002d16:	2a39      	cmp	r2, #57	@ 0x39
 8002d18:	d107      	bne.n	8002d2a <_dtoa_r+0x6da>
 8002d1a:	459a      	cmp	sl, r3
 8002d1c:	d1f8      	bne.n	8002d10 <_dtoa_r+0x6c0>
 8002d1e:	9a04      	ldr	r2, [sp, #16]
 8002d20:	3201      	adds	r2, #1
 8002d22:	9204      	str	r2, [sp, #16]
 8002d24:	2230      	movs	r2, #48	@ 0x30
 8002d26:	f88a 2000 	strb.w	r2, [sl]
 8002d2a:	781a      	ldrb	r2, [r3, #0]
 8002d2c:	3201      	adds	r2, #1
 8002d2e:	701a      	strb	r2, [r3, #0]
 8002d30:	e7bd      	b.n	8002cae <_dtoa_r+0x65e>
 8002d32:	4b7b      	ldr	r3, [pc, #492]	@ (8002f20 <_dtoa_r+0x8d0>)
 8002d34:	2200      	movs	r2, #0
 8002d36:	f7fd fc67 	bl	8000608 <__aeabi_dmul>
 8002d3a:	2200      	movs	r2, #0
 8002d3c:	2300      	movs	r3, #0
 8002d3e:	4604      	mov	r4, r0
 8002d40:	460d      	mov	r5, r1
 8002d42:	f7fd fec9 	bl	8000ad8 <__aeabi_dcmpeq>
 8002d46:	2800      	cmp	r0, #0
 8002d48:	f43f aebb 	beq.w	8002ac2 <_dtoa_r+0x472>
 8002d4c:	e6f0      	b.n	8002b30 <_dtoa_r+0x4e0>
 8002d4e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8002d50:	2a00      	cmp	r2, #0
 8002d52:	f000 80db 	beq.w	8002f0c <_dtoa_r+0x8bc>
 8002d56:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8002d58:	2a01      	cmp	r2, #1
 8002d5a:	f300 80bf 	bgt.w	8002edc <_dtoa_r+0x88c>
 8002d5e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8002d60:	2a00      	cmp	r2, #0
 8002d62:	f000 80b7 	beq.w	8002ed4 <_dtoa_r+0x884>
 8002d66:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 8002d6a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8002d6c:	4646      	mov	r6, r8
 8002d6e:	9a08      	ldr	r2, [sp, #32]
 8002d70:	2101      	movs	r1, #1
 8002d72:	441a      	add	r2, r3
 8002d74:	4658      	mov	r0, fp
 8002d76:	4498      	add	r8, r3
 8002d78:	9208      	str	r2, [sp, #32]
 8002d7a:	f000 fc21 	bl	80035c0 <__i2b>
 8002d7e:	4605      	mov	r5, r0
 8002d80:	b15e      	cbz	r6, 8002d9a <_dtoa_r+0x74a>
 8002d82:	9b08      	ldr	r3, [sp, #32]
 8002d84:	2b00      	cmp	r3, #0
 8002d86:	dd08      	ble.n	8002d9a <_dtoa_r+0x74a>
 8002d88:	42b3      	cmp	r3, r6
 8002d8a:	9a08      	ldr	r2, [sp, #32]
 8002d8c:	bfa8      	it	ge
 8002d8e:	4633      	movge	r3, r6
 8002d90:	eba8 0803 	sub.w	r8, r8, r3
 8002d94:	1af6      	subs	r6, r6, r3
 8002d96:	1ad3      	subs	r3, r2, r3
 8002d98:	9308      	str	r3, [sp, #32]
 8002d9a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002d9c:	b1f3      	cbz	r3, 8002ddc <_dtoa_r+0x78c>
 8002d9e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8002da0:	2b00      	cmp	r3, #0
 8002da2:	f000 80b7 	beq.w	8002f14 <_dtoa_r+0x8c4>
 8002da6:	b18c      	cbz	r4, 8002dcc <_dtoa_r+0x77c>
 8002da8:	4629      	mov	r1, r5
 8002daa:	4622      	mov	r2, r4
 8002dac:	4658      	mov	r0, fp
 8002dae:	f000 fcc7 	bl	8003740 <__pow5mult>
 8002db2:	464a      	mov	r2, r9
 8002db4:	4601      	mov	r1, r0
 8002db6:	4605      	mov	r5, r0
 8002db8:	4658      	mov	r0, fp
 8002dba:	f000 fc17 	bl	80035ec <__multiply>
 8002dbe:	4649      	mov	r1, r9
 8002dc0:	9004      	str	r0, [sp, #16]
 8002dc2:	4658      	mov	r0, fp
 8002dc4:	f000 fb48 	bl	8003458 <_Bfree>
 8002dc8:	9b04      	ldr	r3, [sp, #16]
 8002dca:	4699      	mov	r9, r3
 8002dcc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002dce:	1b1a      	subs	r2, r3, r4
 8002dd0:	d004      	beq.n	8002ddc <_dtoa_r+0x78c>
 8002dd2:	4649      	mov	r1, r9
 8002dd4:	4658      	mov	r0, fp
 8002dd6:	f000 fcb3 	bl	8003740 <__pow5mult>
 8002dda:	4681      	mov	r9, r0
 8002ddc:	2101      	movs	r1, #1
 8002dde:	4658      	mov	r0, fp
 8002de0:	f000 fbee 	bl	80035c0 <__i2b>
 8002de4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8002de6:	4604      	mov	r4, r0
 8002de8:	2b00      	cmp	r3, #0
 8002dea:	f000 81cf 	beq.w	800318c <_dtoa_r+0xb3c>
 8002dee:	461a      	mov	r2, r3
 8002df0:	4601      	mov	r1, r0
 8002df2:	4658      	mov	r0, fp
 8002df4:	f000 fca4 	bl	8003740 <__pow5mult>
 8002df8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002dfa:	2b01      	cmp	r3, #1
 8002dfc:	4604      	mov	r4, r0
 8002dfe:	f300 8095 	bgt.w	8002f2c <_dtoa_r+0x8dc>
 8002e02:	9b02      	ldr	r3, [sp, #8]
 8002e04:	2b00      	cmp	r3, #0
 8002e06:	f040 8087 	bne.w	8002f18 <_dtoa_r+0x8c8>
 8002e0a:	9b03      	ldr	r3, [sp, #12]
 8002e0c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002e10:	2b00      	cmp	r3, #0
 8002e12:	f040 8089 	bne.w	8002f28 <_dtoa_r+0x8d8>
 8002e16:	9b03      	ldr	r3, [sp, #12]
 8002e18:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8002e1c:	0d1b      	lsrs	r3, r3, #20
 8002e1e:	051b      	lsls	r3, r3, #20
 8002e20:	b12b      	cbz	r3, 8002e2e <_dtoa_r+0x7de>
 8002e22:	9b08      	ldr	r3, [sp, #32]
 8002e24:	3301      	adds	r3, #1
 8002e26:	9308      	str	r3, [sp, #32]
 8002e28:	f108 0801 	add.w	r8, r8, #1
 8002e2c:	2301      	movs	r3, #1
 8002e2e:	930a      	str	r3, [sp, #40]	@ 0x28
 8002e30:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8002e32:	2b00      	cmp	r3, #0
 8002e34:	f000 81b0 	beq.w	8003198 <_dtoa_r+0xb48>
 8002e38:	6923      	ldr	r3, [r4, #16]
 8002e3a:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8002e3e:	6918      	ldr	r0, [r3, #16]
 8002e40:	f000 fb72 	bl	8003528 <__hi0bits>
 8002e44:	f1c0 0020 	rsb	r0, r0, #32
 8002e48:	9b08      	ldr	r3, [sp, #32]
 8002e4a:	4418      	add	r0, r3
 8002e4c:	f010 001f 	ands.w	r0, r0, #31
 8002e50:	d077      	beq.n	8002f42 <_dtoa_r+0x8f2>
 8002e52:	f1c0 0320 	rsb	r3, r0, #32
 8002e56:	2b04      	cmp	r3, #4
 8002e58:	dd6b      	ble.n	8002f32 <_dtoa_r+0x8e2>
 8002e5a:	9b08      	ldr	r3, [sp, #32]
 8002e5c:	f1c0 001c 	rsb	r0, r0, #28
 8002e60:	4403      	add	r3, r0
 8002e62:	4480      	add	r8, r0
 8002e64:	4406      	add	r6, r0
 8002e66:	9308      	str	r3, [sp, #32]
 8002e68:	f1b8 0f00 	cmp.w	r8, #0
 8002e6c:	dd05      	ble.n	8002e7a <_dtoa_r+0x82a>
 8002e6e:	4649      	mov	r1, r9
 8002e70:	4642      	mov	r2, r8
 8002e72:	4658      	mov	r0, fp
 8002e74:	f000 fcbe 	bl	80037f4 <__lshift>
 8002e78:	4681      	mov	r9, r0
 8002e7a:	9b08      	ldr	r3, [sp, #32]
 8002e7c:	2b00      	cmp	r3, #0
 8002e7e:	dd05      	ble.n	8002e8c <_dtoa_r+0x83c>
 8002e80:	4621      	mov	r1, r4
 8002e82:	461a      	mov	r2, r3
 8002e84:	4658      	mov	r0, fp
 8002e86:	f000 fcb5 	bl	80037f4 <__lshift>
 8002e8a:	4604      	mov	r4, r0
 8002e8c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8002e8e:	2b00      	cmp	r3, #0
 8002e90:	d059      	beq.n	8002f46 <_dtoa_r+0x8f6>
 8002e92:	4621      	mov	r1, r4
 8002e94:	4648      	mov	r0, r9
 8002e96:	f000 fd19 	bl	80038cc <__mcmp>
 8002e9a:	2800      	cmp	r0, #0
 8002e9c:	da53      	bge.n	8002f46 <_dtoa_r+0x8f6>
 8002e9e:	1e7b      	subs	r3, r7, #1
 8002ea0:	9304      	str	r3, [sp, #16]
 8002ea2:	4649      	mov	r1, r9
 8002ea4:	2300      	movs	r3, #0
 8002ea6:	220a      	movs	r2, #10
 8002ea8:	4658      	mov	r0, fp
 8002eaa:	f000 faf7 	bl	800349c <__multadd>
 8002eae:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8002eb0:	4681      	mov	r9, r0
 8002eb2:	2b00      	cmp	r3, #0
 8002eb4:	f000 8172 	beq.w	800319c <_dtoa_r+0xb4c>
 8002eb8:	2300      	movs	r3, #0
 8002eba:	4629      	mov	r1, r5
 8002ebc:	220a      	movs	r2, #10
 8002ebe:	4658      	mov	r0, fp
 8002ec0:	f000 faec 	bl	800349c <__multadd>
 8002ec4:	9b00      	ldr	r3, [sp, #0]
 8002ec6:	2b00      	cmp	r3, #0
 8002ec8:	4605      	mov	r5, r0
 8002eca:	dc67      	bgt.n	8002f9c <_dtoa_r+0x94c>
 8002ecc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002ece:	2b02      	cmp	r3, #2
 8002ed0:	dc41      	bgt.n	8002f56 <_dtoa_r+0x906>
 8002ed2:	e063      	b.n	8002f9c <_dtoa_r+0x94c>
 8002ed4:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8002ed6:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 8002eda:	e746      	b.n	8002d6a <_dtoa_r+0x71a>
 8002edc:	9b07      	ldr	r3, [sp, #28]
 8002ede:	1e5c      	subs	r4, r3, #1
 8002ee0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002ee2:	42a3      	cmp	r3, r4
 8002ee4:	bfbf      	itttt	lt
 8002ee6:	9b0a      	ldrlt	r3, [sp, #40]	@ 0x28
 8002ee8:	9a0f      	ldrlt	r2, [sp, #60]	@ 0x3c
 8002eea:	940a      	strlt	r4, [sp, #40]	@ 0x28
 8002eec:	1ae3      	sublt	r3, r4, r3
 8002eee:	bfb4      	ite	lt
 8002ef0:	18d2      	addlt	r2, r2, r3
 8002ef2:	1b1c      	subge	r4, r3, r4
 8002ef4:	9b07      	ldr	r3, [sp, #28]
 8002ef6:	bfbc      	itt	lt
 8002ef8:	920f      	strlt	r2, [sp, #60]	@ 0x3c
 8002efa:	2400      	movlt	r4, #0
 8002efc:	2b00      	cmp	r3, #0
 8002efe:	bfb5      	itete	lt
 8002f00:	eba8 0603 	sublt.w	r6, r8, r3
 8002f04:	9b07      	ldrge	r3, [sp, #28]
 8002f06:	2300      	movlt	r3, #0
 8002f08:	4646      	movge	r6, r8
 8002f0a:	e730      	b.n	8002d6e <_dtoa_r+0x71e>
 8002f0c:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8002f0e:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8002f10:	4646      	mov	r6, r8
 8002f12:	e735      	b.n	8002d80 <_dtoa_r+0x730>
 8002f14:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8002f16:	e75c      	b.n	8002dd2 <_dtoa_r+0x782>
 8002f18:	2300      	movs	r3, #0
 8002f1a:	e788      	b.n	8002e2e <_dtoa_r+0x7de>
 8002f1c:	3fe00000 	.word	0x3fe00000
 8002f20:	40240000 	.word	0x40240000
 8002f24:	40140000 	.word	0x40140000
 8002f28:	9b02      	ldr	r3, [sp, #8]
 8002f2a:	e780      	b.n	8002e2e <_dtoa_r+0x7de>
 8002f2c:	2300      	movs	r3, #0
 8002f2e:	930a      	str	r3, [sp, #40]	@ 0x28
 8002f30:	e782      	b.n	8002e38 <_dtoa_r+0x7e8>
 8002f32:	d099      	beq.n	8002e68 <_dtoa_r+0x818>
 8002f34:	9a08      	ldr	r2, [sp, #32]
 8002f36:	331c      	adds	r3, #28
 8002f38:	441a      	add	r2, r3
 8002f3a:	4498      	add	r8, r3
 8002f3c:	441e      	add	r6, r3
 8002f3e:	9208      	str	r2, [sp, #32]
 8002f40:	e792      	b.n	8002e68 <_dtoa_r+0x818>
 8002f42:	4603      	mov	r3, r0
 8002f44:	e7f6      	b.n	8002f34 <_dtoa_r+0x8e4>
 8002f46:	9b07      	ldr	r3, [sp, #28]
 8002f48:	9704      	str	r7, [sp, #16]
 8002f4a:	2b00      	cmp	r3, #0
 8002f4c:	dc20      	bgt.n	8002f90 <_dtoa_r+0x940>
 8002f4e:	9300      	str	r3, [sp, #0]
 8002f50:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002f52:	2b02      	cmp	r3, #2
 8002f54:	dd1e      	ble.n	8002f94 <_dtoa_r+0x944>
 8002f56:	9b00      	ldr	r3, [sp, #0]
 8002f58:	2b00      	cmp	r3, #0
 8002f5a:	f47f aec0 	bne.w	8002cde <_dtoa_r+0x68e>
 8002f5e:	4621      	mov	r1, r4
 8002f60:	2205      	movs	r2, #5
 8002f62:	4658      	mov	r0, fp
 8002f64:	f000 fa9a 	bl	800349c <__multadd>
 8002f68:	4601      	mov	r1, r0
 8002f6a:	4604      	mov	r4, r0
 8002f6c:	4648      	mov	r0, r9
 8002f6e:	f000 fcad 	bl	80038cc <__mcmp>
 8002f72:	2800      	cmp	r0, #0
 8002f74:	f77f aeb3 	ble.w	8002cde <_dtoa_r+0x68e>
 8002f78:	4656      	mov	r6, sl
 8002f7a:	2331      	movs	r3, #49	@ 0x31
 8002f7c:	f806 3b01 	strb.w	r3, [r6], #1
 8002f80:	9b04      	ldr	r3, [sp, #16]
 8002f82:	3301      	adds	r3, #1
 8002f84:	9304      	str	r3, [sp, #16]
 8002f86:	e6ae      	b.n	8002ce6 <_dtoa_r+0x696>
 8002f88:	9c07      	ldr	r4, [sp, #28]
 8002f8a:	9704      	str	r7, [sp, #16]
 8002f8c:	4625      	mov	r5, r4
 8002f8e:	e7f3      	b.n	8002f78 <_dtoa_r+0x928>
 8002f90:	9b07      	ldr	r3, [sp, #28]
 8002f92:	9300      	str	r3, [sp, #0]
 8002f94:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8002f96:	2b00      	cmp	r3, #0
 8002f98:	f000 8104 	beq.w	80031a4 <_dtoa_r+0xb54>
 8002f9c:	2e00      	cmp	r6, #0
 8002f9e:	dd05      	ble.n	8002fac <_dtoa_r+0x95c>
 8002fa0:	4629      	mov	r1, r5
 8002fa2:	4632      	mov	r2, r6
 8002fa4:	4658      	mov	r0, fp
 8002fa6:	f000 fc25 	bl	80037f4 <__lshift>
 8002faa:	4605      	mov	r5, r0
 8002fac:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002fae:	2b00      	cmp	r3, #0
 8002fb0:	d05a      	beq.n	8003068 <_dtoa_r+0xa18>
 8002fb2:	6869      	ldr	r1, [r5, #4]
 8002fb4:	4658      	mov	r0, fp
 8002fb6:	f000 fa0f 	bl	80033d8 <_Balloc>
 8002fba:	4606      	mov	r6, r0
 8002fbc:	b928      	cbnz	r0, 8002fca <_dtoa_r+0x97a>
 8002fbe:	4b84      	ldr	r3, [pc, #528]	@ (80031d0 <_dtoa_r+0xb80>)
 8002fc0:	4602      	mov	r2, r0
 8002fc2:	f240 21ef 	movw	r1, #751	@ 0x2ef
 8002fc6:	f7ff bb5a 	b.w	800267e <_dtoa_r+0x2e>
 8002fca:	692a      	ldr	r2, [r5, #16]
 8002fcc:	3202      	adds	r2, #2
 8002fce:	0092      	lsls	r2, r2, #2
 8002fd0:	f105 010c 	add.w	r1, r5, #12
 8002fd4:	300c      	adds	r0, #12
 8002fd6:	f000 ffaf 	bl	8003f38 <memcpy>
 8002fda:	2201      	movs	r2, #1
 8002fdc:	4631      	mov	r1, r6
 8002fde:	4658      	mov	r0, fp
 8002fe0:	f000 fc08 	bl	80037f4 <__lshift>
 8002fe4:	f10a 0301 	add.w	r3, sl, #1
 8002fe8:	9307      	str	r3, [sp, #28]
 8002fea:	9b00      	ldr	r3, [sp, #0]
 8002fec:	4453      	add	r3, sl
 8002fee:	930b      	str	r3, [sp, #44]	@ 0x2c
 8002ff0:	9b02      	ldr	r3, [sp, #8]
 8002ff2:	f003 0301 	and.w	r3, r3, #1
 8002ff6:	462f      	mov	r7, r5
 8002ff8:	930a      	str	r3, [sp, #40]	@ 0x28
 8002ffa:	4605      	mov	r5, r0
 8002ffc:	9b07      	ldr	r3, [sp, #28]
 8002ffe:	4621      	mov	r1, r4
 8003000:	3b01      	subs	r3, #1
 8003002:	4648      	mov	r0, r9
 8003004:	9300      	str	r3, [sp, #0]
 8003006:	f7ff fa98 	bl	800253a <quorem>
 800300a:	4639      	mov	r1, r7
 800300c:	9002      	str	r0, [sp, #8]
 800300e:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 8003012:	4648      	mov	r0, r9
 8003014:	f000 fc5a 	bl	80038cc <__mcmp>
 8003018:	462a      	mov	r2, r5
 800301a:	9008      	str	r0, [sp, #32]
 800301c:	4621      	mov	r1, r4
 800301e:	4658      	mov	r0, fp
 8003020:	f000 fc70 	bl	8003904 <__mdiff>
 8003024:	68c2      	ldr	r2, [r0, #12]
 8003026:	4606      	mov	r6, r0
 8003028:	bb02      	cbnz	r2, 800306c <_dtoa_r+0xa1c>
 800302a:	4601      	mov	r1, r0
 800302c:	4648      	mov	r0, r9
 800302e:	f000 fc4d 	bl	80038cc <__mcmp>
 8003032:	4602      	mov	r2, r0
 8003034:	4631      	mov	r1, r6
 8003036:	4658      	mov	r0, fp
 8003038:	920e      	str	r2, [sp, #56]	@ 0x38
 800303a:	f000 fa0d 	bl	8003458 <_Bfree>
 800303e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003040:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8003042:	9e07      	ldr	r6, [sp, #28]
 8003044:	ea43 0102 	orr.w	r1, r3, r2
 8003048:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800304a:	4319      	orrs	r1, r3
 800304c:	d110      	bne.n	8003070 <_dtoa_r+0xa20>
 800304e:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8003052:	d029      	beq.n	80030a8 <_dtoa_r+0xa58>
 8003054:	9b08      	ldr	r3, [sp, #32]
 8003056:	2b00      	cmp	r3, #0
 8003058:	dd02      	ble.n	8003060 <_dtoa_r+0xa10>
 800305a:	9b02      	ldr	r3, [sp, #8]
 800305c:	f103 0831 	add.w	r8, r3, #49	@ 0x31
 8003060:	9b00      	ldr	r3, [sp, #0]
 8003062:	f883 8000 	strb.w	r8, [r3]
 8003066:	e63f      	b.n	8002ce8 <_dtoa_r+0x698>
 8003068:	4628      	mov	r0, r5
 800306a:	e7bb      	b.n	8002fe4 <_dtoa_r+0x994>
 800306c:	2201      	movs	r2, #1
 800306e:	e7e1      	b.n	8003034 <_dtoa_r+0x9e4>
 8003070:	9b08      	ldr	r3, [sp, #32]
 8003072:	2b00      	cmp	r3, #0
 8003074:	db04      	blt.n	8003080 <_dtoa_r+0xa30>
 8003076:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8003078:	430b      	orrs	r3, r1
 800307a:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800307c:	430b      	orrs	r3, r1
 800307e:	d120      	bne.n	80030c2 <_dtoa_r+0xa72>
 8003080:	2a00      	cmp	r2, #0
 8003082:	dded      	ble.n	8003060 <_dtoa_r+0xa10>
 8003084:	4649      	mov	r1, r9
 8003086:	2201      	movs	r2, #1
 8003088:	4658      	mov	r0, fp
 800308a:	f000 fbb3 	bl	80037f4 <__lshift>
 800308e:	4621      	mov	r1, r4
 8003090:	4681      	mov	r9, r0
 8003092:	f000 fc1b 	bl	80038cc <__mcmp>
 8003096:	2800      	cmp	r0, #0
 8003098:	dc03      	bgt.n	80030a2 <_dtoa_r+0xa52>
 800309a:	d1e1      	bne.n	8003060 <_dtoa_r+0xa10>
 800309c:	f018 0f01 	tst.w	r8, #1
 80030a0:	d0de      	beq.n	8003060 <_dtoa_r+0xa10>
 80030a2:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 80030a6:	d1d8      	bne.n	800305a <_dtoa_r+0xa0a>
 80030a8:	9a00      	ldr	r2, [sp, #0]
 80030aa:	2339      	movs	r3, #57	@ 0x39
 80030ac:	7013      	strb	r3, [r2, #0]
 80030ae:	4633      	mov	r3, r6
 80030b0:	461e      	mov	r6, r3
 80030b2:	3b01      	subs	r3, #1
 80030b4:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 80030b8:	2a39      	cmp	r2, #57	@ 0x39
 80030ba:	d052      	beq.n	8003162 <_dtoa_r+0xb12>
 80030bc:	3201      	adds	r2, #1
 80030be:	701a      	strb	r2, [r3, #0]
 80030c0:	e612      	b.n	8002ce8 <_dtoa_r+0x698>
 80030c2:	2a00      	cmp	r2, #0
 80030c4:	dd07      	ble.n	80030d6 <_dtoa_r+0xa86>
 80030c6:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 80030ca:	d0ed      	beq.n	80030a8 <_dtoa_r+0xa58>
 80030cc:	9a00      	ldr	r2, [sp, #0]
 80030ce:	f108 0301 	add.w	r3, r8, #1
 80030d2:	7013      	strb	r3, [r2, #0]
 80030d4:	e608      	b.n	8002ce8 <_dtoa_r+0x698>
 80030d6:	9b07      	ldr	r3, [sp, #28]
 80030d8:	9a07      	ldr	r2, [sp, #28]
 80030da:	f803 8c01 	strb.w	r8, [r3, #-1]
 80030de:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80030e0:	4293      	cmp	r3, r2
 80030e2:	d028      	beq.n	8003136 <_dtoa_r+0xae6>
 80030e4:	4649      	mov	r1, r9
 80030e6:	2300      	movs	r3, #0
 80030e8:	220a      	movs	r2, #10
 80030ea:	4658      	mov	r0, fp
 80030ec:	f000 f9d6 	bl	800349c <__multadd>
 80030f0:	42af      	cmp	r7, r5
 80030f2:	4681      	mov	r9, r0
 80030f4:	f04f 0300 	mov.w	r3, #0
 80030f8:	f04f 020a 	mov.w	r2, #10
 80030fc:	4639      	mov	r1, r7
 80030fe:	4658      	mov	r0, fp
 8003100:	d107      	bne.n	8003112 <_dtoa_r+0xac2>
 8003102:	f000 f9cb 	bl	800349c <__multadd>
 8003106:	4607      	mov	r7, r0
 8003108:	4605      	mov	r5, r0
 800310a:	9b07      	ldr	r3, [sp, #28]
 800310c:	3301      	adds	r3, #1
 800310e:	9307      	str	r3, [sp, #28]
 8003110:	e774      	b.n	8002ffc <_dtoa_r+0x9ac>
 8003112:	f000 f9c3 	bl	800349c <__multadd>
 8003116:	4629      	mov	r1, r5
 8003118:	4607      	mov	r7, r0
 800311a:	2300      	movs	r3, #0
 800311c:	220a      	movs	r2, #10
 800311e:	4658      	mov	r0, fp
 8003120:	f000 f9bc 	bl	800349c <__multadd>
 8003124:	4605      	mov	r5, r0
 8003126:	e7f0      	b.n	800310a <_dtoa_r+0xaba>
 8003128:	9b00      	ldr	r3, [sp, #0]
 800312a:	2b00      	cmp	r3, #0
 800312c:	bfcc      	ite	gt
 800312e:	461e      	movgt	r6, r3
 8003130:	2601      	movle	r6, #1
 8003132:	4456      	add	r6, sl
 8003134:	2700      	movs	r7, #0
 8003136:	4649      	mov	r1, r9
 8003138:	2201      	movs	r2, #1
 800313a:	4658      	mov	r0, fp
 800313c:	f000 fb5a 	bl	80037f4 <__lshift>
 8003140:	4621      	mov	r1, r4
 8003142:	4681      	mov	r9, r0
 8003144:	f000 fbc2 	bl	80038cc <__mcmp>
 8003148:	2800      	cmp	r0, #0
 800314a:	dcb0      	bgt.n	80030ae <_dtoa_r+0xa5e>
 800314c:	d102      	bne.n	8003154 <_dtoa_r+0xb04>
 800314e:	f018 0f01 	tst.w	r8, #1
 8003152:	d1ac      	bne.n	80030ae <_dtoa_r+0xa5e>
 8003154:	4633      	mov	r3, r6
 8003156:	461e      	mov	r6, r3
 8003158:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800315c:	2a30      	cmp	r2, #48	@ 0x30
 800315e:	d0fa      	beq.n	8003156 <_dtoa_r+0xb06>
 8003160:	e5c2      	b.n	8002ce8 <_dtoa_r+0x698>
 8003162:	459a      	cmp	sl, r3
 8003164:	d1a4      	bne.n	80030b0 <_dtoa_r+0xa60>
 8003166:	9b04      	ldr	r3, [sp, #16]
 8003168:	3301      	adds	r3, #1
 800316a:	9304      	str	r3, [sp, #16]
 800316c:	2331      	movs	r3, #49	@ 0x31
 800316e:	f88a 3000 	strb.w	r3, [sl]
 8003172:	e5b9      	b.n	8002ce8 <_dtoa_r+0x698>
 8003174:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8003176:	f8df a05c 	ldr.w	sl, [pc, #92]	@ 80031d4 <_dtoa_r+0xb84>
 800317a:	b11b      	cbz	r3, 8003184 <_dtoa_r+0xb34>
 800317c:	f10a 0308 	add.w	r3, sl, #8
 8003180:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8003182:	6013      	str	r3, [r2, #0]
 8003184:	4650      	mov	r0, sl
 8003186:	b019      	add	sp, #100	@ 0x64
 8003188:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800318c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800318e:	2b01      	cmp	r3, #1
 8003190:	f77f ae37 	ble.w	8002e02 <_dtoa_r+0x7b2>
 8003194:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8003196:	930a      	str	r3, [sp, #40]	@ 0x28
 8003198:	2001      	movs	r0, #1
 800319a:	e655      	b.n	8002e48 <_dtoa_r+0x7f8>
 800319c:	9b00      	ldr	r3, [sp, #0]
 800319e:	2b00      	cmp	r3, #0
 80031a0:	f77f aed6 	ble.w	8002f50 <_dtoa_r+0x900>
 80031a4:	4656      	mov	r6, sl
 80031a6:	4621      	mov	r1, r4
 80031a8:	4648      	mov	r0, r9
 80031aa:	f7ff f9c6 	bl	800253a <quorem>
 80031ae:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 80031b2:	f806 8b01 	strb.w	r8, [r6], #1
 80031b6:	9b00      	ldr	r3, [sp, #0]
 80031b8:	eba6 020a 	sub.w	r2, r6, sl
 80031bc:	4293      	cmp	r3, r2
 80031be:	ddb3      	ble.n	8003128 <_dtoa_r+0xad8>
 80031c0:	4649      	mov	r1, r9
 80031c2:	2300      	movs	r3, #0
 80031c4:	220a      	movs	r2, #10
 80031c6:	4658      	mov	r0, fp
 80031c8:	f000 f968 	bl	800349c <__multadd>
 80031cc:	4681      	mov	r9, r0
 80031ce:	e7ea      	b.n	80031a6 <_dtoa_r+0xb56>
 80031d0:	080046c9 	.word	0x080046c9
 80031d4:	0800464d 	.word	0x0800464d

080031d8 <_free_r>:
 80031d8:	b538      	push	{r3, r4, r5, lr}
 80031da:	4605      	mov	r5, r0
 80031dc:	2900      	cmp	r1, #0
 80031de:	d041      	beq.n	8003264 <_free_r+0x8c>
 80031e0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80031e4:	1f0c      	subs	r4, r1, #4
 80031e6:	2b00      	cmp	r3, #0
 80031e8:	bfb8      	it	lt
 80031ea:	18e4      	addlt	r4, r4, r3
 80031ec:	f000 f8e8 	bl	80033c0 <__malloc_lock>
 80031f0:	4a1d      	ldr	r2, [pc, #116]	@ (8003268 <_free_r+0x90>)
 80031f2:	6813      	ldr	r3, [r2, #0]
 80031f4:	b933      	cbnz	r3, 8003204 <_free_r+0x2c>
 80031f6:	6063      	str	r3, [r4, #4]
 80031f8:	6014      	str	r4, [r2, #0]
 80031fa:	4628      	mov	r0, r5
 80031fc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003200:	f000 b8e4 	b.w	80033cc <__malloc_unlock>
 8003204:	42a3      	cmp	r3, r4
 8003206:	d908      	bls.n	800321a <_free_r+0x42>
 8003208:	6820      	ldr	r0, [r4, #0]
 800320a:	1821      	adds	r1, r4, r0
 800320c:	428b      	cmp	r3, r1
 800320e:	bf01      	itttt	eq
 8003210:	6819      	ldreq	r1, [r3, #0]
 8003212:	685b      	ldreq	r3, [r3, #4]
 8003214:	1809      	addeq	r1, r1, r0
 8003216:	6021      	streq	r1, [r4, #0]
 8003218:	e7ed      	b.n	80031f6 <_free_r+0x1e>
 800321a:	461a      	mov	r2, r3
 800321c:	685b      	ldr	r3, [r3, #4]
 800321e:	b10b      	cbz	r3, 8003224 <_free_r+0x4c>
 8003220:	42a3      	cmp	r3, r4
 8003222:	d9fa      	bls.n	800321a <_free_r+0x42>
 8003224:	6811      	ldr	r1, [r2, #0]
 8003226:	1850      	adds	r0, r2, r1
 8003228:	42a0      	cmp	r0, r4
 800322a:	d10b      	bne.n	8003244 <_free_r+0x6c>
 800322c:	6820      	ldr	r0, [r4, #0]
 800322e:	4401      	add	r1, r0
 8003230:	1850      	adds	r0, r2, r1
 8003232:	4283      	cmp	r3, r0
 8003234:	6011      	str	r1, [r2, #0]
 8003236:	d1e0      	bne.n	80031fa <_free_r+0x22>
 8003238:	6818      	ldr	r0, [r3, #0]
 800323a:	685b      	ldr	r3, [r3, #4]
 800323c:	6053      	str	r3, [r2, #4]
 800323e:	4408      	add	r0, r1
 8003240:	6010      	str	r0, [r2, #0]
 8003242:	e7da      	b.n	80031fa <_free_r+0x22>
 8003244:	d902      	bls.n	800324c <_free_r+0x74>
 8003246:	230c      	movs	r3, #12
 8003248:	602b      	str	r3, [r5, #0]
 800324a:	e7d6      	b.n	80031fa <_free_r+0x22>
 800324c:	6820      	ldr	r0, [r4, #0]
 800324e:	1821      	adds	r1, r4, r0
 8003250:	428b      	cmp	r3, r1
 8003252:	bf04      	itt	eq
 8003254:	6819      	ldreq	r1, [r3, #0]
 8003256:	685b      	ldreq	r3, [r3, #4]
 8003258:	6063      	str	r3, [r4, #4]
 800325a:	bf04      	itt	eq
 800325c:	1809      	addeq	r1, r1, r0
 800325e:	6021      	streq	r1, [r4, #0]
 8003260:	6054      	str	r4, [r2, #4]
 8003262:	e7ca      	b.n	80031fa <_free_r+0x22>
 8003264:	bd38      	pop	{r3, r4, r5, pc}
 8003266:	bf00      	nop
 8003268:	2000034c 	.word	0x2000034c

0800326c <malloc>:
 800326c:	4b02      	ldr	r3, [pc, #8]	@ (8003278 <malloc+0xc>)
 800326e:	4601      	mov	r1, r0
 8003270:	6818      	ldr	r0, [r3, #0]
 8003272:	f000 b825 	b.w	80032c0 <_malloc_r>
 8003276:	bf00      	nop
 8003278:	2000000c 	.word	0x2000000c

0800327c <sbrk_aligned>:
 800327c:	b570      	push	{r4, r5, r6, lr}
 800327e:	4e0f      	ldr	r6, [pc, #60]	@ (80032bc <sbrk_aligned+0x40>)
 8003280:	460c      	mov	r4, r1
 8003282:	6831      	ldr	r1, [r6, #0]
 8003284:	4605      	mov	r5, r0
 8003286:	b911      	cbnz	r1, 800328e <sbrk_aligned+0x12>
 8003288:	f000 fe46 	bl	8003f18 <_sbrk_r>
 800328c:	6030      	str	r0, [r6, #0]
 800328e:	4621      	mov	r1, r4
 8003290:	4628      	mov	r0, r5
 8003292:	f000 fe41 	bl	8003f18 <_sbrk_r>
 8003296:	1c43      	adds	r3, r0, #1
 8003298:	d103      	bne.n	80032a2 <sbrk_aligned+0x26>
 800329a:	f04f 34ff 	mov.w	r4, #4294967295
 800329e:	4620      	mov	r0, r4
 80032a0:	bd70      	pop	{r4, r5, r6, pc}
 80032a2:	1cc4      	adds	r4, r0, #3
 80032a4:	f024 0403 	bic.w	r4, r4, #3
 80032a8:	42a0      	cmp	r0, r4
 80032aa:	d0f8      	beq.n	800329e <sbrk_aligned+0x22>
 80032ac:	1a21      	subs	r1, r4, r0
 80032ae:	4628      	mov	r0, r5
 80032b0:	f000 fe32 	bl	8003f18 <_sbrk_r>
 80032b4:	3001      	adds	r0, #1
 80032b6:	d1f2      	bne.n	800329e <sbrk_aligned+0x22>
 80032b8:	e7ef      	b.n	800329a <sbrk_aligned+0x1e>
 80032ba:	bf00      	nop
 80032bc:	20000348 	.word	0x20000348

080032c0 <_malloc_r>:
 80032c0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80032c4:	1ccd      	adds	r5, r1, #3
 80032c6:	f025 0503 	bic.w	r5, r5, #3
 80032ca:	3508      	adds	r5, #8
 80032cc:	2d0c      	cmp	r5, #12
 80032ce:	bf38      	it	cc
 80032d0:	250c      	movcc	r5, #12
 80032d2:	2d00      	cmp	r5, #0
 80032d4:	4606      	mov	r6, r0
 80032d6:	db01      	blt.n	80032dc <_malloc_r+0x1c>
 80032d8:	42a9      	cmp	r1, r5
 80032da:	d904      	bls.n	80032e6 <_malloc_r+0x26>
 80032dc:	230c      	movs	r3, #12
 80032de:	6033      	str	r3, [r6, #0]
 80032e0:	2000      	movs	r0, #0
 80032e2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80032e6:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 80033bc <_malloc_r+0xfc>
 80032ea:	f000 f869 	bl	80033c0 <__malloc_lock>
 80032ee:	f8d8 3000 	ldr.w	r3, [r8]
 80032f2:	461c      	mov	r4, r3
 80032f4:	bb44      	cbnz	r4, 8003348 <_malloc_r+0x88>
 80032f6:	4629      	mov	r1, r5
 80032f8:	4630      	mov	r0, r6
 80032fa:	f7ff ffbf 	bl	800327c <sbrk_aligned>
 80032fe:	1c43      	adds	r3, r0, #1
 8003300:	4604      	mov	r4, r0
 8003302:	d158      	bne.n	80033b6 <_malloc_r+0xf6>
 8003304:	f8d8 4000 	ldr.w	r4, [r8]
 8003308:	4627      	mov	r7, r4
 800330a:	2f00      	cmp	r7, #0
 800330c:	d143      	bne.n	8003396 <_malloc_r+0xd6>
 800330e:	2c00      	cmp	r4, #0
 8003310:	d04b      	beq.n	80033aa <_malloc_r+0xea>
 8003312:	6823      	ldr	r3, [r4, #0]
 8003314:	4639      	mov	r1, r7
 8003316:	4630      	mov	r0, r6
 8003318:	eb04 0903 	add.w	r9, r4, r3
 800331c:	f000 fdfc 	bl	8003f18 <_sbrk_r>
 8003320:	4581      	cmp	r9, r0
 8003322:	d142      	bne.n	80033aa <_malloc_r+0xea>
 8003324:	6821      	ldr	r1, [r4, #0]
 8003326:	1a6d      	subs	r5, r5, r1
 8003328:	4629      	mov	r1, r5
 800332a:	4630      	mov	r0, r6
 800332c:	f7ff ffa6 	bl	800327c <sbrk_aligned>
 8003330:	3001      	adds	r0, #1
 8003332:	d03a      	beq.n	80033aa <_malloc_r+0xea>
 8003334:	6823      	ldr	r3, [r4, #0]
 8003336:	442b      	add	r3, r5
 8003338:	6023      	str	r3, [r4, #0]
 800333a:	f8d8 3000 	ldr.w	r3, [r8]
 800333e:	685a      	ldr	r2, [r3, #4]
 8003340:	bb62      	cbnz	r2, 800339c <_malloc_r+0xdc>
 8003342:	f8c8 7000 	str.w	r7, [r8]
 8003346:	e00f      	b.n	8003368 <_malloc_r+0xa8>
 8003348:	6822      	ldr	r2, [r4, #0]
 800334a:	1b52      	subs	r2, r2, r5
 800334c:	d420      	bmi.n	8003390 <_malloc_r+0xd0>
 800334e:	2a0b      	cmp	r2, #11
 8003350:	d917      	bls.n	8003382 <_malloc_r+0xc2>
 8003352:	1961      	adds	r1, r4, r5
 8003354:	42a3      	cmp	r3, r4
 8003356:	6025      	str	r5, [r4, #0]
 8003358:	bf18      	it	ne
 800335a:	6059      	strne	r1, [r3, #4]
 800335c:	6863      	ldr	r3, [r4, #4]
 800335e:	bf08      	it	eq
 8003360:	f8c8 1000 	streq.w	r1, [r8]
 8003364:	5162      	str	r2, [r4, r5]
 8003366:	604b      	str	r3, [r1, #4]
 8003368:	4630      	mov	r0, r6
 800336a:	f000 f82f 	bl	80033cc <__malloc_unlock>
 800336e:	f104 000b 	add.w	r0, r4, #11
 8003372:	1d23      	adds	r3, r4, #4
 8003374:	f020 0007 	bic.w	r0, r0, #7
 8003378:	1ac2      	subs	r2, r0, r3
 800337a:	bf1c      	itt	ne
 800337c:	1a1b      	subne	r3, r3, r0
 800337e:	50a3      	strne	r3, [r4, r2]
 8003380:	e7af      	b.n	80032e2 <_malloc_r+0x22>
 8003382:	6862      	ldr	r2, [r4, #4]
 8003384:	42a3      	cmp	r3, r4
 8003386:	bf0c      	ite	eq
 8003388:	f8c8 2000 	streq.w	r2, [r8]
 800338c:	605a      	strne	r2, [r3, #4]
 800338e:	e7eb      	b.n	8003368 <_malloc_r+0xa8>
 8003390:	4623      	mov	r3, r4
 8003392:	6864      	ldr	r4, [r4, #4]
 8003394:	e7ae      	b.n	80032f4 <_malloc_r+0x34>
 8003396:	463c      	mov	r4, r7
 8003398:	687f      	ldr	r7, [r7, #4]
 800339a:	e7b6      	b.n	800330a <_malloc_r+0x4a>
 800339c:	461a      	mov	r2, r3
 800339e:	685b      	ldr	r3, [r3, #4]
 80033a0:	42a3      	cmp	r3, r4
 80033a2:	d1fb      	bne.n	800339c <_malloc_r+0xdc>
 80033a4:	2300      	movs	r3, #0
 80033a6:	6053      	str	r3, [r2, #4]
 80033a8:	e7de      	b.n	8003368 <_malloc_r+0xa8>
 80033aa:	230c      	movs	r3, #12
 80033ac:	6033      	str	r3, [r6, #0]
 80033ae:	4630      	mov	r0, r6
 80033b0:	f000 f80c 	bl	80033cc <__malloc_unlock>
 80033b4:	e794      	b.n	80032e0 <_malloc_r+0x20>
 80033b6:	6005      	str	r5, [r0, #0]
 80033b8:	e7d6      	b.n	8003368 <_malloc_r+0xa8>
 80033ba:	bf00      	nop
 80033bc:	2000034c 	.word	0x2000034c

080033c0 <__malloc_lock>:
 80033c0:	4801      	ldr	r0, [pc, #4]	@ (80033c8 <__malloc_lock+0x8>)
 80033c2:	f7ff b8b8 	b.w	8002536 <__retarget_lock_acquire_recursive>
 80033c6:	bf00      	nop
 80033c8:	20000344 	.word	0x20000344

080033cc <__malloc_unlock>:
 80033cc:	4801      	ldr	r0, [pc, #4]	@ (80033d4 <__malloc_unlock+0x8>)
 80033ce:	f7ff b8b3 	b.w	8002538 <__retarget_lock_release_recursive>
 80033d2:	bf00      	nop
 80033d4:	20000344 	.word	0x20000344

080033d8 <_Balloc>:
 80033d8:	b570      	push	{r4, r5, r6, lr}
 80033da:	69c6      	ldr	r6, [r0, #28]
 80033dc:	4604      	mov	r4, r0
 80033de:	460d      	mov	r5, r1
 80033e0:	b976      	cbnz	r6, 8003400 <_Balloc+0x28>
 80033e2:	2010      	movs	r0, #16
 80033e4:	f7ff ff42 	bl	800326c <malloc>
 80033e8:	4602      	mov	r2, r0
 80033ea:	61e0      	str	r0, [r4, #28]
 80033ec:	b920      	cbnz	r0, 80033f8 <_Balloc+0x20>
 80033ee:	4b18      	ldr	r3, [pc, #96]	@ (8003450 <_Balloc+0x78>)
 80033f0:	4818      	ldr	r0, [pc, #96]	@ (8003454 <_Balloc+0x7c>)
 80033f2:	216b      	movs	r1, #107	@ 0x6b
 80033f4:	f000 fdae 	bl	8003f54 <__assert_func>
 80033f8:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80033fc:	6006      	str	r6, [r0, #0]
 80033fe:	60c6      	str	r6, [r0, #12]
 8003400:	69e6      	ldr	r6, [r4, #28]
 8003402:	68f3      	ldr	r3, [r6, #12]
 8003404:	b183      	cbz	r3, 8003428 <_Balloc+0x50>
 8003406:	69e3      	ldr	r3, [r4, #28]
 8003408:	68db      	ldr	r3, [r3, #12]
 800340a:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800340e:	b9b8      	cbnz	r0, 8003440 <_Balloc+0x68>
 8003410:	2101      	movs	r1, #1
 8003412:	fa01 f605 	lsl.w	r6, r1, r5
 8003416:	1d72      	adds	r2, r6, #5
 8003418:	0092      	lsls	r2, r2, #2
 800341a:	4620      	mov	r0, r4
 800341c:	f000 fdb8 	bl	8003f90 <_calloc_r>
 8003420:	b160      	cbz	r0, 800343c <_Balloc+0x64>
 8003422:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8003426:	e00e      	b.n	8003446 <_Balloc+0x6e>
 8003428:	2221      	movs	r2, #33	@ 0x21
 800342a:	2104      	movs	r1, #4
 800342c:	4620      	mov	r0, r4
 800342e:	f000 fdaf 	bl	8003f90 <_calloc_r>
 8003432:	69e3      	ldr	r3, [r4, #28]
 8003434:	60f0      	str	r0, [r6, #12]
 8003436:	68db      	ldr	r3, [r3, #12]
 8003438:	2b00      	cmp	r3, #0
 800343a:	d1e4      	bne.n	8003406 <_Balloc+0x2e>
 800343c:	2000      	movs	r0, #0
 800343e:	bd70      	pop	{r4, r5, r6, pc}
 8003440:	6802      	ldr	r2, [r0, #0]
 8003442:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8003446:	2300      	movs	r3, #0
 8003448:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800344c:	e7f7      	b.n	800343e <_Balloc+0x66>
 800344e:	bf00      	nop
 8003450:	0800465a 	.word	0x0800465a
 8003454:	080046da 	.word	0x080046da

08003458 <_Bfree>:
 8003458:	b570      	push	{r4, r5, r6, lr}
 800345a:	69c6      	ldr	r6, [r0, #28]
 800345c:	4605      	mov	r5, r0
 800345e:	460c      	mov	r4, r1
 8003460:	b976      	cbnz	r6, 8003480 <_Bfree+0x28>
 8003462:	2010      	movs	r0, #16
 8003464:	f7ff ff02 	bl	800326c <malloc>
 8003468:	4602      	mov	r2, r0
 800346a:	61e8      	str	r0, [r5, #28]
 800346c:	b920      	cbnz	r0, 8003478 <_Bfree+0x20>
 800346e:	4b09      	ldr	r3, [pc, #36]	@ (8003494 <_Bfree+0x3c>)
 8003470:	4809      	ldr	r0, [pc, #36]	@ (8003498 <_Bfree+0x40>)
 8003472:	218f      	movs	r1, #143	@ 0x8f
 8003474:	f000 fd6e 	bl	8003f54 <__assert_func>
 8003478:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800347c:	6006      	str	r6, [r0, #0]
 800347e:	60c6      	str	r6, [r0, #12]
 8003480:	b13c      	cbz	r4, 8003492 <_Bfree+0x3a>
 8003482:	69eb      	ldr	r3, [r5, #28]
 8003484:	6862      	ldr	r2, [r4, #4]
 8003486:	68db      	ldr	r3, [r3, #12]
 8003488:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800348c:	6021      	str	r1, [r4, #0]
 800348e:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8003492:	bd70      	pop	{r4, r5, r6, pc}
 8003494:	0800465a 	.word	0x0800465a
 8003498:	080046da 	.word	0x080046da

0800349c <__multadd>:
 800349c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80034a0:	690d      	ldr	r5, [r1, #16]
 80034a2:	4607      	mov	r7, r0
 80034a4:	460c      	mov	r4, r1
 80034a6:	461e      	mov	r6, r3
 80034a8:	f101 0c14 	add.w	ip, r1, #20
 80034ac:	2000      	movs	r0, #0
 80034ae:	f8dc 3000 	ldr.w	r3, [ip]
 80034b2:	b299      	uxth	r1, r3
 80034b4:	fb02 6101 	mla	r1, r2, r1, r6
 80034b8:	0c1e      	lsrs	r6, r3, #16
 80034ba:	0c0b      	lsrs	r3, r1, #16
 80034bc:	fb02 3306 	mla	r3, r2, r6, r3
 80034c0:	b289      	uxth	r1, r1
 80034c2:	3001      	adds	r0, #1
 80034c4:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 80034c8:	4285      	cmp	r5, r0
 80034ca:	f84c 1b04 	str.w	r1, [ip], #4
 80034ce:	ea4f 4613 	mov.w	r6, r3, lsr #16
 80034d2:	dcec      	bgt.n	80034ae <__multadd+0x12>
 80034d4:	b30e      	cbz	r6, 800351a <__multadd+0x7e>
 80034d6:	68a3      	ldr	r3, [r4, #8]
 80034d8:	42ab      	cmp	r3, r5
 80034da:	dc19      	bgt.n	8003510 <__multadd+0x74>
 80034dc:	6861      	ldr	r1, [r4, #4]
 80034de:	4638      	mov	r0, r7
 80034e0:	3101      	adds	r1, #1
 80034e2:	f7ff ff79 	bl	80033d8 <_Balloc>
 80034e6:	4680      	mov	r8, r0
 80034e8:	b928      	cbnz	r0, 80034f6 <__multadd+0x5a>
 80034ea:	4602      	mov	r2, r0
 80034ec:	4b0c      	ldr	r3, [pc, #48]	@ (8003520 <__multadd+0x84>)
 80034ee:	480d      	ldr	r0, [pc, #52]	@ (8003524 <__multadd+0x88>)
 80034f0:	21ba      	movs	r1, #186	@ 0xba
 80034f2:	f000 fd2f 	bl	8003f54 <__assert_func>
 80034f6:	6922      	ldr	r2, [r4, #16]
 80034f8:	3202      	adds	r2, #2
 80034fa:	f104 010c 	add.w	r1, r4, #12
 80034fe:	0092      	lsls	r2, r2, #2
 8003500:	300c      	adds	r0, #12
 8003502:	f000 fd19 	bl	8003f38 <memcpy>
 8003506:	4621      	mov	r1, r4
 8003508:	4638      	mov	r0, r7
 800350a:	f7ff ffa5 	bl	8003458 <_Bfree>
 800350e:	4644      	mov	r4, r8
 8003510:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8003514:	3501      	adds	r5, #1
 8003516:	615e      	str	r6, [r3, #20]
 8003518:	6125      	str	r5, [r4, #16]
 800351a:	4620      	mov	r0, r4
 800351c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003520:	080046c9 	.word	0x080046c9
 8003524:	080046da 	.word	0x080046da

08003528 <__hi0bits>:
 8003528:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 800352c:	4603      	mov	r3, r0
 800352e:	bf36      	itet	cc
 8003530:	0403      	lslcc	r3, r0, #16
 8003532:	2000      	movcs	r0, #0
 8003534:	2010      	movcc	r0, #16
 8003536:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 800353a:	bf3c      	itt	cc
 800353c:	021b      	lslcc	r3, r3, #8
 800353e:	3008      	addcc	r0, #8
 8003540:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8003544:	bf3c      	itt	cc
 8003546:	011b      	lslcc	r3, r3, #4
 8003548:	3004      	addcc	r0, #4
 800354a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800354e:	bf3c      	itt	cc
 8003550:	009b      	lslcc	r3, r3, #2
 8003552:	3002      	addcc	r0, #2
 8003554:	2b00      	cmp	r3, #0
 8003556:	db05      	blt.n	8003564 <__hi0bits+0x3c>
 8003558:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 800355c:	f100 0001 	add.w	r0, r0, #1
 8003560:	bf08      	it	eq
 8003562:	2020      	moveq	r0, #32
 8003564:	4770      	bx	lr

08003566 <__lo0bits>:
 8003566:	6803      	ldr	r3, [r0, #0]
 8003568:	4602      	mov	r2, r0
 800356a:	f013 0007 	ands.w	r0, r3, #7
 800356e:	d00b      	beq.n	8003588 <__lo0bits+0x22>
 8003570:	07d9      	lsls	r1, r3, #31
 8003572:	d421      	bmi.n	80035b8 <__lo0bits+0x52>
 8003574:	0798      	lsls	r0, r3, #30
 8003576:	bf49      	itett	mi
 8003578:	085b      	lsrmi	r3, r3, #1
 800357a:	089b      	lsrpl	r3, r3, #2
 800357c:	2001      	movmi	r0, #1
 800357e:	6013      	strmi	r3, [r2, #0]
 8003580:	bf5c      	itt	pl
 8003582:	6013      	strpl	r3, [r2, #0]
 8003584:	2002      	movpl	r0, #2
 8003586:	4770      	bx	lr
 8003588:	b299      	uxth	r1, r3
 800358a:	b909      	cbnz	r1, 8003590 <__lo0bits+0x2a>
 800358c:	0c1b      	lsrs	r3, r3, #16
 800358e:	2010      	movs	r0, #16
 8003590:	b2d9      	uxtb	r1, r3
 8003592:	b909      	cbnz	r1, 8003598 <__lo0bits+0x32>
 8003594:	3008      	adds	r0, #8
 8003596:	0a1b      	lsrs	r3, r3, #8
 8003598:	0719      	lsls	r1, r3, #28
 800359a:	bf04      	itt	eq
 800359c:	091b      	lsreq	r3, r3, #4
 800359e:	3004      	addeq	r0, #4
 80035a0:	0799      	lsls	r1, r3, #30
 80035a2:	bf04      	itt	eq
 80035a4:	089b      	lsreq	r3, r3, #2
 80035a6:	3002      	addeq	r0, #2
 80035a8:	07d9      	lsls	r1, r3, #31
 80035aa:	d403      	bmi.n	80035b4 <__lo0bits+0x4e>
 80035ac:	085b      	lsrs	r3, r3, #1
 80035ae:	f100 0001 	add.w	r0, r0, #1
 80035b2:	d003      	beq.n	80035bc <__lo0bits+0x56>
 80035b4:	6013      	str	r3, [r2, #0]
 80035b6:	4770      	bx	lr
 80035b8:	2000      	movs	r0, #0
 80035ba:	4770      	bx	lr
 80035bc:	2020      	movs	r0, #32
 80035be:	4770      	bx	lr

080035c0 <__i2b>:
 80035c0:	b510      	push	{r4, lr}
 80035c2:	460c      	mov	r4, r1
 80035c4:	2101      	movs	r1, #1
 80035c6:	f7ff ff07 	bl	80033d8 <_Balloc>
 80035ca:	4602      	mov	r2, r0
 80035cc:	b928      	cbnz	r0, 80035da <__i2b+0x1a>
 80035ce:	4b05      	ldr	r3, [pc, #20]	@ (80035e4 <__i2b+0x24>)
 80035d0:	4805      	ldr	r0, [pc, #20]	@ (80035e8 <__i2b+0x28>)
 80035d2:	f240 1145 	movw	r1, #325	@ 0x145
 80035d6:	f000 fcbd 	bl	8003f54 <__assert_func>
 80035da:	2301      	movs	r3, #1
 80035dc:	6144      	str	r4, [r0, #20]
 80035de:	6103      	str	r3, [r0, #16]
 80035e0:	bd10      	pop	{r4, pc}
 80035e2:	bf00      	nop
 80035e4:	080046c9 	.word	0x080046c9
 80035e8:	080046da 	.word	0x080046da

080035ec <__multiply>:
 80035ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80035f0:	4614      	mov	r4, r2
 80035f2:	690a      	ldr	r2, [r1, #16]
 80035f4:	6923      	ldr	r3, [r4, #16]
 80035f6:	429a      	cmp	r2, r3
 80035f8:	bfa8      	it	ge
 80035fa:	4623      	movge	r3, r4
 80035fc:	460f      	mov	r7, r1
 80035fe:	bfa4      	itt	ge
 8003600:	460c      	movge	r4, r1
 8003602:	461f      	movge	r7, r3
 8003604:	f8d4 a010 	ldr.w	sl, [r4, #16]
 8003608:	f8d7 9010 	ldr.w	r9, [r7, #16]
 800360c:	68a3      	ldr	r3, [r4, #8]
 800360e:	6861      	ldr	r1, [r4, #4]
 8003610:	eb0a 0609 	add.w	r6, sl, r9
 8003614:	42b3      	cmp	r3, r6
 8003616:	b085      	sub	sp, #20
 8003618:	bfb8      	it	lt
 800361a:	3101      	addlt	r1, #1
 800361c:	f7ff fedc 	bl	80033d8 <_Balloc>
 8003620:	b930      	cbnz	r0, 8003630 <__multiply+0x44>
 8003622:	4602      	mov	r2, r0
 8003624:	4b44      	ldr	r3, [pc, #272]	@ (8003738 <__multiply+0x14c>)
 8003626:	4845      	ldr	r0, [pc, #276]	@ (800373c <__multiply+0x150>)
 8003628:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 800362c:	f000 fc92 	bl	8003f54 <__assert_func>
 8003630:	f100 0514 	add.w	r5, r0, #20
 8003634:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8003638:	462b      	mov	r3, r5
 800363a:	2200      	movs	r2, #0
 800363c:	4543      	cmp	r3, r8
 800363e:	d321      	bcc.n	8003684 <__multiply+0x98>
 8003640:	f107 0114 	add.w	r1, r7, #20
 8003644:	f104 0214 	add.w	r2, r4, #20
 8003648:	eb02 028a 	add.w	r2, r2, sl, lsl #2
 800364c:	eb01 0389 	add.w	r3, r1, r9, lsl #2
 8003650:	9302      	str	r3, [sp, #8]
 8003652:	1b13      	subs	r3, r2, r4
 8003654:	3b15      	subs	r3, #21
 8003656:	f023 0303 	bic.w	r3, r3, #3
 800365a:	3304      	adds	r3, #4
 800365c:	f104 0715 	add.w	r7, r4, #21
 8003660:	42ba      	cmp	r2, r7
 8003662:	bf38      	it	cc
 8003664:	2304      	movcc	r3, #4
 8003666:	9301      	str	r3, [sp, #4]
 8003668:	9b02      	ldr	r3, [sp, #8]
 800366a:	9103      	str	r1, [sp, #12]
 800366c:	428b      	cmp	r3, r1
 800366e:	d80c      	bhi.n	800368a <__multiply+0x9e>
 8003670:	2e00      	cmp	r6, #0
 8003672:	dd03      	ble.n	800367c <__multiply+0x90>
 8003674:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8003678:	2b00      	cmp	r3, #0
 800367a:	d05b      	beq.n	8003734 <__multiply+0x148>
 800367c:	6106      	str	r6, [r0, #16]
 800367e:	b005      	add	sp, #20
 8003680:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003684:	f843 2b04 	str.w	r2, [r3], #4
 8003688:	e7d8      	b.n	800363c <__multiply+0x50>
 800368a:	f8b1 a000 	ldrh.w	sl, [r1]
 800368e:	f1ba 0f00 	cmp.w	sl, #0
 8003692:	d024      	beq.n	80036de <__multiply+0xf2>
 8003694:	f104 0e14 	add.w	lr, r4, #20
 8003698:	46a9      	mov	r9, r5
 800369a:	f04f 0c00 	mov.w	ip, #0
 800369e:	f85e 7b04 	ldr.w	r7, [lr], #4
 80036a2:	f8d9 3000 	ldr.w	r3, [r9]
 80036a6:	fa1f fb87 	uxth.w	fp, r7
 80036aa:	b29b      	uxth	r3, r3
 80036ac:	fb0a 330b 	mla	r3, sl, fp, r3
 80036b0:	ea4f 4b17 	mov.w	fp, r7, lsr #16
 80036b4:	f8d9 7000 	ldr.w	r7, [r9]
 80036b8:	4463      	add	r3, ip
 80036ba:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 80036be:	fb0a c70b 	mla	r7, sl, fp, ip
 80036c2:	eb07 4713 	add.w	r7, r7, r3, lsr #16
 80036c6:	b29b      	uxth	r3, r3
 80036c8:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 80036cc:	4572      	cmp	r2, lr
 80036ce:	f849 3b04 	str.w	r3, [r9], #4
 80036d2:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 80036d6:	d8e2      	bhi.n	800369e <__multiply+0xb2>
 80036d8:	9b01      	ldr	r3, [sp, #4]
 80036da:	f845 c003 	str.w	ip, [r5, r3]
 80036de:	9b03      	ldr	r3, [sp, #12]
 80036e0:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 80036e4:	3104      	adds	r1, #4
 80036e6:	f1b9 0f00 	cmp.w	r9, #0
 80036ea:	d021      	beq.n	8003730 <__multiply+0x144>
 80036ec:	682b      	ldr	r3, [r5, #0]
 80036ee:	f104 0c14 	add.w	ip, r4, #20
 80036f2:	46ae      	mov	lr, r5
 80036f4:	f04f 0a00 	mov.w	sl, #0
 80036f8:	f8bc b000 	ldrh.w	fp, [ip]
 80036fc:	f8be 7002 	ldrh.w	r7, [lr, #2]
 8003700:	fb09 770b 	mla	r7, r9, fp, r7
 8003704:	4457      	add	r7, sl
 8003706:	b29b      	uxth	r3, r3
 8003708:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 800370c:	f84e 3b04 	str.w	r3, [lr], #4
 8003710:	f85c 3b04 	ldr.w	r3, [ip], #4
 8003714:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8003718:	f8be 3000 	ldrh.w	r3, [lr]
 800371c:	fb09 330a 	mla	r3, r9, sl, r3
 8003720:	eb03 4317 	add.w	r3, r3, r7, lsr #16
 8003724:	4562      	cmp	r2, ip
 8003726:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800372a:	d8e5      	bhi.n	80036f8 <__multiply+0x10c>
 800372c:	9f01      	ldr	r7, [sp, #4]
 800372e:	51eb      	str	r3, [r5, r7]
 8003730:	3504      	adds	r5, #4
 8003732:	e799      	b.n	8003668 <__multiply+0x7c>
 8003734:	3e01      	subs	r6, #1
 8003736:	e79b      	b.n	8003670 <__multiply+0x84>
 8003738:	080046c9 	.word	0x080046c9
 800373c:	080046da 	.word	0x080046da

08003740 <__pow5mult>:
 8003740:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003744:	4615      	mov	r5, r2
 8003746:	f012 0203 	ands.w	r2, r2, #3
 800374a:	4607      	mov	r7, r0
 800374c:	460e      	mov	r6, r1
 800374e:	d007      	beq.n	8003760 <__pow5mult+0x20>
 8003750:	4c25      	ldr	r4, [pc, #148]	@ (80037e8 <__pow5mult+0xa8>)
 8003752:	3a01      	subs	r2, #1
 8003754:	2300      	movs	r3, #0
 8003756:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800375a:	f7ff fe9f 	bl	800349c <__multadd>
 800375e:	4606      	mov	r6, r0
 8003760:	10ad      	asrs	r5, r5, #2
 8003762:	d03d      	beq.n	80037e0 <__pow5mult+0xa0>
 8003764:	69fc      	ldr	r4, [r7, #28]
 8003766:	b97c      	cbnz	r4, 8003788 <__pow5mult+0x48>
 8003768:	2010      	movs	r0, #16
 800376a:	f7ff fd7f 	bl	800326c <malloc>
 800376e:	4602      	mov	r2, r0
 8003770:	61f8      	str	r0, [r7, #28]
 8003772:	b928      	cbnz	r0, 8003780 <__pow5mult+0x40>
 8003774:	4b1d      	ldr	r3, [pc, #116]	@ (80037ec <__pow5mult+0xac>)
 8003776:	481e      	ldr	r0, [pc, #120]	@ (80037f0 <__pow5mult+0xb0>)
 8003778:	f240 11b3 	movw	r1, #435	@ 0x1b3
 800377c:	f000 fbea 	bl	8003f54 <__assert_func>
 8003780:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8003784:	6004      	str	r4, [r0, #0]
 8003786:	60c4      	str	r4, [r0, #12]
 8003788:	f8d7 801c 	ldr.w	r8, [r7, #28]
 800378c:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8003790:	b94c      	cbnz	r4, 80037a6 <__pow5mult+0x66>
 8003792:	f240 2171 	movw	r1, #625	@ 0x271
 8003796:	4638      	mov	r0, r7
 8003798:	f7ff ff12 	bl	80035c0 <__i2b>
 800379c:	2300      	movs	r3, #0
 800379e:	f8c8 0008 	str.w	r0, [r8, #8]
 80037a2:	4604      	mov	r4, r0
 80037a4:	6003      	str	r3, [r0, #0]
 80037a6:	f04f 0900 	mov.w	r9, #0
 80037aa:	07eb      	lsls	r3, r5, #31
 80037ac:	d50a      	bpl.n	80037c4 <__pow5mult+0x84>
 80037ae:	4631      	mov	r1, r6
 80037b0:	4622      	mov	r2, r4
 80037b2:	4638      	mov	r0, r7
 80037b4:	f7ff ff1a 	bl	80035ec <__multiply>
 80037b8:	4631      	mov	r1, r6
 80037ba:	4680      	mov	r8, r0
 80037bc:	4638      	mov	r0, r7
 80037be:	f7ff fe4b 	bl	8003458 <_Bfree>
 80037c2:	4646      	mov	r6, r8
 80037c4:	106d      	asrs	r5, r5, #1
 80037c6:	d00b      	beq.n	80037e0 <__pow5mult+0xa0>
 80037c8:	6820      	ldr	r0, [r4, #0]
 80037ca:	b938      	cbnz	r0, 80037dc <__pow5mult+0x9c>
 80037cc:	4622      	mov	r2, r4
 80037ce:	4621      	mov	r1, r4
 80037d0:	4638      	mov	r0, r7
 80037d2:	f7ff ff0b 	bl	80035ec <__multiply>
 80037d6:	6020      	str	r0, [r4, #0]
 80037d8:	f8c0 9000 	str.w	r9, [r0]
 80037dc:	4604      	mov	r4, r0
 80037de:	e7e4      	b.n	80037aa <__pow5mult+0x6a>
 80037e0:	4630      	mov	r0, r6
 80037e2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80037e6:	bf00      	nop
 80037e8:	08004734 	.word	0x08004734
 80037ec:	0800465a 	.word	0x0800465a
 80037f0:	080046da 	.word	0x080046da

080037f4 <__lshift>:
 80037f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80037f8:	460c      	mov	r4, r1
 80037fa:	6849      	ldr	r1, [r1, #4]
 80037fc:	6923      	ldr	r3, [r4, #16]
 80037fe:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8003802:	68a3      	ldr	r3, [r4, #8]
 8003804:	4607      	mov	r7, r0
 8003806:	4691      	mov	r9, r2
 8003808:	ea4f 1a62 	mov.w	sl, r2, asr #5
 800380c:	f108 0601 	add.w	r6, r8, #1
 8003810:	42b3      	cmp	r3, r6
 8003812:	db0b      	blt.n	800382c <__lshift+0x38>
 8003814:	4638      	mov	r0, r7
 8003816:	f7ff fddf 	bl	80033d8 <_Balloc>
 800381a:	4605      	mov	r5, r0
 800381c:	b948      	cbnz	r0, 8003832 <__lshift+0x3e>
 800381e:	4602      	mov	r2, r0
 8003820:	4b28      	ldr	r3, [pc, #160]	@ (80038c4 <__lshift+0xd0>)
 8003822:	4829      	ldr	r0, [pc, #164]	@ (80038c8 <__lshift+0xd4>)
 8003824:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 8003828:	f000 fb94 	bl	8003f54 <__assert_func>
 800382c:	3101      	adds	r1, #1
 800382e:	005b      	lsls	r3, r3, #1
 8003830:	e7ee      	b.n	8003810 <__lshift+0x1c>
 8003832:	2300      	movs	r3, #0
 8003834:	f100 0114 	add.w	r1, r0, #20
 8003838:	f100 0210 	add.w	r2, r0, #16
 800383c:	4618      	mov	r0, r3
 800383e:	4553      	cmp	r3, sl
 8003840:	db33      	blt.n	80038aa <__lshift+0xb6>
 8003842:	6920      	ldr	r0, [r4, #16]
 8003844:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8003848:	f104 0314 	add.w	r3, r4, #20
 800384c:	f019 091f 	ands.w	r9, r9, #31
 8003850:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8003854:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8003858:	d02b      	beq.n	80038b2 <__lshift+0xbe>
 800385a:	f1c9 0e20 	rsb	lr, r9, #32
 800385e:	468a      	mov	sl, r1
 8003860:	2200      	movs	r2, #0
 8003862:	6818      	ldr	r0, [r3, #0]
 8003864:	fa00 f009 	lsl.w	r0, r0, r9
 8003868:	4310      	orrs	r0, r2
 800386a:	f84a 0b04 	str.w	r0, [sl], #4
 800386e:	f853 2b04 	ldr.w	r2, [r3], #4
 8003872:	459c      	cmp	ip, r3
 8003874:	fa22 f20e 	lsr.w	r2, r2, lr
 8003878:	d8f3      	bhi.n	8003862 <__lshift+0x6e>
 800387a:	ebac 0304 	sub.w	r3, ip, r4
 800387e:	3b15      	subs	r3, #21
 8003880:	f023 0303 	bic.w	r3, r3, #3
 8003884:	3304      	adds	r3, #4
 8003886:	f104 0015 	add.w	r0, r4, #21
 800388a:	4584      	cmp	ip, r0
 800388c:	bf38      	it	cc
 800388e:	2304      	movcc	r3, #4
 8003890:	50ca      	str	r2, [r1, r3]
 8003892:	b10a      	cbz	r2, 8003898 <__lshift+0xa4>
 8003894:	f108 0602 	add.w	r6, r8, #2
 8003898:	3e01      	subs	r6, #1
 800389a:	4638      	mov	r0, r7
 800389c:	612e      	str	r6, [r5, #16]
 800389e:	4621      	mov	r1, r4
 80038a0:	f7ff fdda 	bl	8003458 <_Bfree>
 80038a4:	4628      	mov	r0, r5
 80038a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80038aa:	f842 0f04 	str.w	r0, [r2, #4]!
 80038ae:	3301      	adds	r3, #1
 80038b0:	e7c5      	b.n	800383e <__lshift+0x4a>
 80038b2:	3904      	subs	r1, #4
 80038b4:	f853 2b04 	ldr.w	r2, [r3], #4
 80038b8:	f841 2f04 	str.w	r2, [r1, #4]!
 80038bc:	459c      	cmp	ip, r3
 80038be:	d8f9      	bhi.n	80038b4 <__lshift+0xc0>
 80038c0:	e7ea      	b.n	8003898 <__lshift+0xa4>
 80038c2:	bf00      	nop
 80038c4:	080046c9 	.word	0x080046c9
 80038c8:	080046da 	.word	0x080046da

080038cc <__mcmp>:
 80038cc:	690a      	ldr	r2, [r1, #16]
 80038ce:	4603      	mov	r3, r0
 80038d0:	6900      	ldr	r0, [r0, #16]
 80038d2:	1a80      	subs	r0, r0, r2
 80038d4:	b530      	push	{r4, r5, lr}
 80038d6:	d10e      	bne.n	80038f6 <__mcmp+0x2a>
 80038d8:	3314      	adds	r3, #20
 80038da:	3114      	adds	r1, #20
 80038dc:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 80038e0:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 80038e4:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 80038e8:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 80038ec:	4295      	cmp	r5, r2
 80038ee:	d003      	beq.n	80038f8 <__mcmp+0x2c>
 80038f0:	d205      	bcs.n	80038fe <__mcmp+0x32>
 80038f2:	f04f 30ff 	mov.w	r0, #4294967295
 80038f6:	bd30      	pop	{r4, r5, pc}
 80038f8:	42a3      	cmp	r3, r4
 80038fa:	d3f3      	bcc.n	80038e4 <__mcmp+0x18>
 80038fc:	e7fb      	b.n	80038f6 <__mcmp+0x2a>
 80038fe:	2001      	movs	r0, #1
 8003900:	e7f9      	b.n	80038f6 <__mcmp+0x2a>
	...

08003904 <__mdiff>:
 8003904:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003908:	4689      	mov	r9, r1
 800390a:	4606      	mov	r6, r0
 800390c:	4611      	mov	r1, r2
 800390e:	4648      	mov	r0, r9
 8003910:	4614      	mov	r4, r2
 8003912:	f7ff ffdb 	bl	80038cc <__mcmp>
 8003916:	1e05      	subs	r5, r0, #0
 8003918:	d112      	bne.n	8003940 <__mdiff+0x3c>
 800391a:	4629      	mov	r1, r5
 800391c:	4630      	mov	r0, r6
 800391e:	f7ff fd5b 	bl	80033d8 <_Balloc>
 8003922:	4602      	mov	r2, r0
 8003924:	b928      	cbnz	r0, 8003932 <__mdiff+0x2e>
 8003926:	4b3f      	ldr	r3, [pc, #252]	@ (8003a24 <__mdiff+0x120>)
 8003928:	f240 2137 	movw	r1, #567	@ 0x237
 800392c:	483e      	ldr	r0, [pc, #248]	@ (8003a28 <__mdiff+0x124>)
 800392e:	f000 fb11 	bl	8003f54 <__assert_func>
 8003932:	2301      	movs	r3, #1
 8003934:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8003938:	4610      	mov	r0, r2
 800393a:	b003      	add	sp, #12
 800393c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003940:	bfbc      	itt	lt
 8003942:	464b      	movlt	r3, r9
 8003944:	46a1      	movlt	r9, r4
 8003946:	4630      	mov	r0, r6
 8003948:	f8d9 1004 	ldr.w	r1, [r9, #4]
 800394c:	bfba      	itte	lt
 800394e:	461c      	movlt	r4, r3
 8003950:	2501      	movlt	r5, #1
 8003952:	2500      	movge	r5, #0
 8003954:	f7ff fd40 	bl	80033d8 <_Balloc>
 8003958:	4602      	mov	r2, r0
 800395a:	b918      	cbnz	r0, 8003964 <__mdiff+0x60>
 800395c:	4b31      	ldr	r3, [pc, #196]	@ (8003a24 <__mdiff+0x120>)
 800395e:	f240 2145 	movw	r1, #581	@ 0x245
 8003962:	e7e3      	b.n	800392c <__mdiff+0x28>
 8003964:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8003968:	6926      	ldr	r6, [r4, #16]
 800396a:	60c5      	str	r5, [r0, #12]
 800396c:	f109 0310 	add.w	r3, r9, #16
 8003970:	f109 0514 	add.w	r5, r9, #20
 8003974:	f104 0e14 	add.w	lr, r4, #20
 8003978:	f100 0b14 	add.w	fp, r0, #20
 800397c:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 8003980:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 8003984:	9301      	str	r3, [sp, #4]
 8003986:	46d9      	mov	r9, fp
 8003988:	f04f 0c00 	mov.w	ip, #0
 800398c:	9b01      	ldr	r3, [sp, #4]
 800398e:	f85e 0b04 	ldr.w	r0, [lr], #4
 8003992:	f853 af04 	ldr.w	sl, [r3, #4]!
 8003996:	9301      	str	r3, [sp, #4]
 8003998:	fa1f f38a 	uxth.w	r3, sl
 800399c:	4619      	mov	r1, r3
 800399e:	b283      	uxth	r3, r0
 80039a0:	1acb      	subs	r3, r1, r3
 80039a2:	0c00      	lsrs	r0, r0, #16
 80039a4:	4463      	add	r3, ip
 80039a6:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 80039aa:	eb00 4023 	add.w	r0, r0, r3, asr #16
 80039ae:	b29b      	uxth	r3, r3
 80039b0:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 80039b4:	4576      	cmp	r6, lr
 80039b6:	f849 3b04 	str.w	r3, [r9], #4
 80039ba:	ea4f 4c20 	mov.w	ip, r0, asr #16
 80039be:	d8e5      	bhi.n	800398c <__mdiff+0x88>
 80039c0:	1b33      	subs	r3, r6, r4
 80039c2:	3b15      	subs	r3, #21
 80039c4:	f023 0303 	bic.w	r3, r3, #3
 80039c8:	3415      	adds	r4, #21
 80039ca:	3304      	adds	r3, #4
 80039cc:	42a6      	cmp	r6, r4
 80039ce:	bf38      	it	cc
 80039d0:	2304      	movcc	r3, #4
 80039d2:	441d      	add	r5, r3
 80039d4:	445b      	add	r3, fp
 80039d6:	461e      	mov	r6, r3
 80039d8:	462c      	mov	r4, r5
 80039da:	4544      	cmp	r4, r8
 80039dc:	d30e      	bcc.n	80039fc <__mdiff+0xf8>
 80039de:	f108 0103 	add.w	r1, r8, #3
 80039e2:	1b49      	subs	r1, r1, r5
 80039e4:	f021 0103 	bic.w	r1, r1, #3
 80039e8:	3d03      	subs	r5, #3
 80039ea:	45a8      	cmp	r8, r5
 80039ec:	bf38      	it	cc
 80039ee:	2100      	movcc	r1, #0
 80039f0:	440b      	add	r3, r1
 80039f2:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 80039f6:	b191      	cbz	r1, 8003a1e <__mdiff+0x11a>
 80039f8:	6117      	str	r7, [r2, #16]
 80039fa:	e79d      	b.n	8003938 <__mdiff+0x34>
 80039fc:	f854 1b04 	ldr.w	r1, [r4], #4
 8003a00:	46e6      	mov	lr, ip
 8003a02:	0c08      	lsrs	r0, r1, #16
 8003a04:	fa1c fc81 	uxtah	ip, ip, r1
 8003a08:	4471      	add	r1, lr
 8003a0a:	eb00 402c 	add.w	r0, r0, ip, asr #16
 8003a0e:	b289      	uxth	r1, r1
 8003a10:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8003a14:	f846 1b04 	str.w	r1, [r6], #4
 8003a18:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8003a1c:	e7dd      	b.n	80039da <__mdiff+0xd6>
 8003a1e:	3f01      	subs	r7, #1
 8003a20:	e7e7      	b.n	80039f2 <__mdiff+0xee>
 8003a22:	bf00      	nop
 8003a24:	080046c9 	.word	0x080046c9
 8003a28:	080046da 	.word	0x080046da

08003a2c <__d2b>:
 8003a2c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8003a30:	460f      	mov	r7, r1
 8003a32:	2101      	movs	r1, #1
 8003a34:	ec59 8b10 	vmov	r8, r9, d0
 8003a38:	4616      	mov	r6, r2
 8003a3a:	f7ff fccd 	bl	80033d8 <_Balloc>
 8003a3e:	4604      	mov	r4, r0
 8003a40:	b930      	cbnz	r0, 8003a50 <__d2b+0x24>
 8003a42:	4602      	mov	r2, r0
 8003a44:	4b23      	ldr	r3, [pc, #140]	@ (8003ad4 <__d2b+0xa8>)
 8003a46:	4824      	ldr	r0, [pc, #144]	@ (8003ad8 <__d2b+0xac>)
 8003a48:	f240 310f 	movw	r1, #783	@ 0x30f
 8003a4c:	f000 fa82 	bl	8003f54 <__assert_func>
 8003a50:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8003a54:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8003a58:	b10d      	cbz	r5, 8003a5e <__d2b+0x32>
 8003a5a:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8003a5e:	9301      	str	r3, [sp, #4]
 8003a60:	f1b8 0300 	subs.w	r3, r8, #0
 8003a64:	d023      	beq.n	8003aae <__d2b+0x82>
 8003a66:	4668      	mov	r0, sp
 8003a68:	9300      	str	r3, [sp, #0]
 8003a6a:	f7ff fd7c 	bl	8003566 <__lo0bits>
 8003a6e:	e9dd 1200 	ldrd	r1, r2, [sp]
 8003a72:	b1d0      	cbz	r0, 8003aaa <__d2b+0x7e>
 8003a74:	f1c0 0320 	rsb	r3, r0, #32
 8003a78:	fa02 f303 	lsl.w	r3, r2, r3
 8003a7c:	430b      	orrs	r3, r1
 8003a7e:	40c2      	lsrs	r2, r0
 8003a80:	6163      	str	r3, [r4, #20]
 8003a82:	9201      	str	r2, [sp, #4]
 8003a84:	9b01      	ldr	r3, [sp, #4]
 8003a86:	61a3      	str	r3, [r4, #24]
 8003a88:	2b00      	cmp	r3, #0
 8003a8a:	bf0c      	ite	eq
 8003a8c:	2201      	moveq	r2, #1
 8003a8e:	2202      	movne	r2, #2
 8003a90:	6122      	str	r2, [r4, #16]
 8003a92:	b1a5      	cbz	r5, 8003abe <__d2b+0x92>
 8003a94:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 8003a98:	4405      	add	r5, r0
 8003a9a:	603d      	str	r5, [r7, #0]
 8003a9c:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 8003aa0:	6030      	str	r0, [r6, #0]
 8003aa2:	4620      	mov	r0, r4
 8003aa4:	b003      	add	sp, #12
 8003aa6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8003aaa:	6161      	str	r1, [r4, #20]
 8003aac:	e7ea      	b.n	8003a84 <__d2b+0x58>
 8003aae:	a801      	add	r0, sp, #4
 8003ab0:	f7ff fd59 	bl	8003566 <__lo0bits>
 8003ab4:	9b01      	ldr	r3, [sp, #4]
 8003ab6:	6163      	str	r3, [r4, #20]
 8003ab8:	3020      	adds	r0, #32
 8003aba:	2201      	movs	r2, #1
 8003abc:	e7e8      	b.n	8003a90 <__d2b+0x64>
 8003abe:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8003ac2:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 8003ac6:	6038      	str	r0, [r7, #0]
 8003ac8:	6918      	ldr	r0, [r3, #16]
 8003aca:	f7ff fd2d 	bl	8003528 <__hi0bits>
 8003ace:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8003ad2:	e7e5      	b.n	8003aa0 <__d2b+0x74>
 8003ad4:	080046c9 	.word	0x080046c9
 8003ad8:	080046da 	.word	0x080046da

08003adc <__ssputs_r>:
 8003adc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003ae0:	688e      	ldr	r6, [r1, #8]
 8003ae2:	461f      	mov	r7, r3
 8003ae4:	42be      	cmp	r6, r7
 8003ae6:	680b      	ldr	r3, [r1, #0]
 8003ae8:	4682      	mov	sl, r0
 8003aea:	460c      	mov	r4, r1
 8003aec:	4690      	mov	r8, r2
 8003aee:	d82d      	bhi.n	8003b4c <__ssputs_r+0x70>
 8003af0:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8003af4:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8003af8:	d026      	beq.n	8003b48 <__ssputs_r+0x6c>
 8003afa:	6965      	ldr	r5, [r4, #20]
 8003afc:	6909      	ldr	r1, [r1, #16]
 8003afe:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8003b02:	eba3 0901 	sub.w	r9, r3, r1
 8003b06:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8003b0a:	1c7b      	adds	r3, r7, #1
 8003b0c:	444b      	add	r3, r9
 8003b0e:	106d      	asrs	r5, r5, #1
 8003b10:	429d      	cmp	r5, r3
 8003b12:	bf38      	it	cc
 8003b14:	461d      	movcc	r5, r3
 8003b16:	0553      	lsls	r3, r2, #21
 8003b18:	d527      	bpl.n	8003b6a <__ssputs_r+0x8e>
 8003b1a:	4629      	mov	r1, r5
 8003b1c:	f7ff fbd0 	bl	80032c0 <_malloc_r>
 8003b20:	4606      	mov	r6, r0
 8003b22:	b360      	cbz	r0, 8003b7e <__ssputs_r+0xa2>
 8003b24:	6921      	ldr	r1, [r4, #16]
 8003b26:	464a      	mov	r2, r9
 8003b28:	f000 fa06 	bl	8003f38 <memcpy>
 8003b2c:	89a3      	ldrh	r3, [r4, #12]
 8003b2e:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 8003b32:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8003b36:	81a3      	strh	r3, [r4, #12]
 8003b38:	6126      	str	r6, [r4, #16]
 8003b3a:	6165      	str	r5, [r4, #20]
 8003b3c:	444e      	add	r6, r9
 8003b3e:	eba5 0509 	sub.w	r5, r5, r9
 8003b42:	6026      	str	r6, [r4, #0]
 8003b44:	60a5      	str	r5, [r4, #8]
 8003b46:	463e      	mov	r6, r7
 8003b48:	42be      	cmp	r6, r7
 8003b4a:	d900      	bls.n	8003b4e <__ssputs_r+0x72>
 8003b4c:	463e      	mov	r6, r7
 8003b4e:	6820      	ldr	r0, [r4, #0]
 8003b50:	4632      	mov	r2, r6
 8003b52:	4641      	mov	r1, r8
 8003b54:	f000 f9c6 	bl	8003ee4 <memmove>
 8003b58:	68a3      	ldr	r3, [r4, #8]
 8003b5a:	1b9b      	subs	r3, r3, r6
 8003b5c:	60a3      	str	r3, [r4, #8]
 8003b5e:	6823      	ldr	r3, [r4, #0]
 8003b60:	4433      	add	r3, r6
 8003b62:	6023      	str	r3, [r4, #0]
 8003b64:	2000      	movs	r0, #0
 8003b66:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003b6a:	462a      	mov	r2, r5
 8003b6c:	f000 fa36 	bl	8003fdc <_realloc_r>
 8003b70:	4606      	mov	r6, r0
 8003b72:	2800      	cmp	r0, #0
 8003b74:	d1e0      	bne.n	8003b38 <__ssputs_r+0x5c>
 8003b76:	6921      	ldr	r1, [r4, #16]
 8003b78:	4650      	mov	r0, sl
 8003b7a:	f7ff fb2d 	bl	80031d8 <_free_r>
 8003b7e:	230c      	movs	r3, #12
 8003b80:	f8ca 3000 	str.w	r3, [sl]
 8003b84:	89a3      	ldrh	r3, [r4, #12]
 8003b86:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003b8a:	81a3      	strh	r3, [r4, #12]
 8003b8c:	f04f 30ff 	mov.w	r0, #4294967295
 8003b90:	e7e9      	b.n	8003b66 <__ssputs_r+0x8a>
	...

08003b94 <_svfiprintf_r>:
 8003b94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003b98:	4698      	mov	r8, r3
 8003b9a:	898b      	ldrh	r3, [r1, #12]
 8003b9c:	061b      	lsls	r3, r3, #24
 8003b9e:	b09d      	sub	sp, #116	@ 0x74
 8003ba0:	4607      	mov	r7, r0
 8003ba2:	460d      	mov	r5, r1
 8003ba4:	4614      	mov	r4, r2
 8003ba6:	d510      	bpl.n	8003bca <_svfiprintf_r+0x36>
 8003ba8:	690b      	ldr	r3, [r1, #16]
 8003baa:	b973      	cbnz	r3, 8003bca <_svfiprintf_r+0x36>
 8003bac:	2140      	movs	r1, #64	@ 0x40
 8003bae:	f7ff fb87 	bl	80032c0 <_malloc_r>
 8003bb2:	6028      	str	r0, [r5, #0]
 8003bb4:	6128      	str	r0, [r5, #16]
 8003bb6:	b930      	cbnz	r0, 8003bc6 <_svfiprintf_r+0x32>
 8003bb8:	230c      	movs	r3, #12
 8003bba:	603b      	str	r3, [r7, #0]
 8003bbc:	f04f 30ff 	mov.w	r0, #4294967295
 8003bc0:	b01d      	add	sp, #116	@ 0x74
 8003bc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003bc6:	2340      	movs	r3, #64	@ 0x40
 8003bc8:	616b      	str	r3, [r5, #20]
 8003bca:	2300      	movs	r3, #0
 8003bcc:	9309      	str	r3, [sp, #36]	@ 0x24
 8003bce:	2320      	movs	r3, #32
 8003bd0:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8003bd4:	f8cd 800c 	str.w	r8, [sp, #12]
 8003bd8:	2330      	movs	r3, #48	@ 0x30
 8003bda:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 8003d78 <_svfiprintf_r+0x1e4>
 8003bde:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8003be2:	f04f 0901 	mov.w	r9, #1
 8003be6:	4623      	mov	r3, r4
 8003be8:	469a      	mov	sl, r3
 8003bea:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003bee:	b10a      	cbz	r2, 8003bf4 <_svfiprintf_r+0x60>
 8003bf0:	2a25      	cmp	r2, #37	@ 0x25
 8003bf2:	d1f9      	bne.n	8003be8 <_svfiprintf_r+0x54>
 8003bf4:	ebba 0b04 	subs.w	fp, sl, r4
 8003bf8:	d00b      	beq.n	8003c12 <_svfiprintf_r+0x7e>
 8003bfa:	465b      	mov	r3, fp
 8003bfc:	4622      	mov	r2, r4
 8003bfe:	4629      	mov	r1, r5
 8003c00:	4638      	mov	r0, r7
 8003c02:	f7ff ff6b 	bl	8003adc <__ssputs_r>
 8003c06:	3001      	adds	r0, #1
 8003c08:	f000 80a7 	beq.w	8003d5a <_svfiprintf_r+0x1c6>
 8003c0c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8003c0e:	445a      	add	r2, fp
 8003c10:	9209      	str	r2, [sp, #36]	@ 0x24
 8003c12:	f89a 3000 	ldrb.w	r3, [sl]
 8003c16:	2b00      	cmp	r3, #0
 8003c18:	f000 809f 	beq.w	8003d5a <_svfiprintf_r+0x1c6>
 8003c1c:	2300      	movs	r3, #0
 8003c1e:	f04f 32ff 	mov.w	r2, #4294967295
 8003c22:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003c26:	f10a 0a01 	add.w	sl, sl, #1
 8003c2a:	9304      	str	r3, [sp, #16]
 8003c2c:	9307      	str	r3, [sp, #28]
 8003c2e:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8003c32:	931a      	str	r3, [sp, #104]	@ 0x68
 8003c34:	4654      	mov	r4, sl
 8003c36:	2205      	movs	r2, #5
 8003c38:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003c3c:	484e      	ldr	r0, [pc, #312]	@ (8003d78 <_svfiprintf_r+0x1e4>)
 8003c3e:	f7fc facf 	bl	80001e0 <memchr>
 8003c42:	9a04      	ldr	r2, [sp, #16]
 8003c44:	b9d8      	cbnz	r0, 8003c7e <_svfiprintf_r+0xea>
 8003c46:	06d0      	lsls	r0, r2, #27
 8003c48:	bf44      	itt	mi
 8003c4a:	2320      	movmi	r3, #32
 8003c4c:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8003c50:	0711      	lsls	r1, r2, #28
 8003c52:	bf44      	itt	mi
 8003c54:	232b      	movmi	r3, #43	@ 0x2b
 8003c56:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8003c5a:	f89a 3000 	ldrb.w	r3, [sl]
 8003c5e:	2b2a      	cmp	r3, #42	@ 0x2a
 8003c60:	d015      	beq.n	8003c8e <_svfiprintf_r+0xfa>
 8003c62:	9a07      	ldr	r2, [sp, #28]
 8003c64:	4654      	mov	r4, sl
 8003c66:	2000      	movs	r0, #0
 8003c68:	f04f 0c0a 	mov.w	ip, #10
 8003c6c:	4621      	mov	r1, r4
 8003c6e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003c72:	3b30      	subs	r3, #48	@ 0x30
 8003c74:	2b09      	cmp	r3, #9
 8003c76:	d94b      	bls.n	8003d10 <_svfiprintf_r+0x17c>
 8003c78:	b1b0      	cbz	r0, 8003ca8 <_svfiprintf_r+0x114>
 8003c7a:	9207      	str	r2, [sp, #28]
 8003c7c:	e014      	b.n	8003ca8 <_svfiprintf_r+0x114>
 8003c7e:	eba0 0308 	sub.w	r3, r0, r8
 8003c82:	fa09 f303 	lsl.w	r3, r9, r3
 8003c86:	4313      	orrs	r3, r2
 8003c88:	9304      	str	r3, [sp, #16]
 8003c8a:	46a2      	mov	sl, r4
 8003c8c:	e7d2      	b.n	8003c34 <_svfiprintf_r+0xa0>
 8003c8e:	9b03      	ldr	r3, [sp, #12]
 8003c90:	1d19      	adds	r1, r3, #4
 8003c92:	681b      	ldr	r3, [r3, #0]
 8003c94:	9103      	str	r1, [sp, #12]
 8003c96:	2b00      	cmp	r3, #0
 8003c98:	bfbb      	ittet	lt
 8003c9a:	425b      	neglt	r3, r3
 8003c9c:	f042 0202 	orrlt.w	r2, r2, #2
 8003ca0:	9307      	strge	r3, [sp, #28]
 8003ca2:	9307      	strlt	r3, [sp, #28]
 8003ca4:	bfb8      	it	lt
 8003ca6:	9204      	strlt	r2, [sp, #16]
 8003ca8:	7823      	ldrb	r3, [r4, #0]
 8003caa:	2b2e      	cmp	r3, #46	@ 0x2e
 8003cac:	d10a      	bne.n	8003cc4 <_svfiprintf_r+0x130>
 8003cae:	7863      	ldrb	r3, [r4, #1]
 8003cb0:	2b2a      	cmp	r3, #42	@ 0x2a
 8003cb2:	d132      	bne.n	8003d1a <_svfiprintf_r+0x186>
 8003cb4:	9b03      	ldr	r3, [sp, #12]
 8003cb6:	1d1a      	adds	r2, r3, #4
 8003cb8:	681b      	ldr	r3, [r3, #0]
 8003cba:	9203      	str	r2, [sp, #12]
 8003cbc:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8003cc0:	3402      	adds	r4, #2
 8003cc2:	9305      	str	r3, [sp, #20]
 8003cc4:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 8003d88 <_svfiprintf_r+0x1f4>
 8003cc8:	7821      	ldrb	r1, [r4, #0]
 8003cca:	2203      	movs	r2, #3
 8003ccc:	4650      	mov	r0, sl
 8003cce:	f7fc fa87 	bl	80001e0 <memchr>
 8003cd2:	b138      	cbz	r0, 8003ce4 <_svfiprintf_r+0x150>
 8003cd4:	9b04      	ldr	r3, [sp, #16]
 8003cd6:	eba0 000a 	sub.w	r0, r0, sl
 8003cda:	2240      	movs	r2, #64	@ 0x40
 8003cdc:	4082      	lsls	r2, r0
 8003cde:	4313      	orrs	r3, r2
 8003ce0:	3401      	adds	r4, #1
 8003ce2:	9304      	str	r3, [sp, #16]
 8003ce4:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003ce8:	4824      	ldr	r0, [pc, #144]	@ (8003d7c <_svfiprintf_r+0x1e8>)
 8003cea:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8003cee:	2206      	movs	r2, #6
 8003cf0:	f7fc fa76 	bl	80001e0 <memchr>
 8003cf4:	2800      	cmp	r0, #0
 8003cf6:	d036      	beq.n	8003d66 <_svfiprintf_r+0x1d2>
 8003cf8:	4b21      	ldr	r3, [pc, #132]	@ (8003d80 <_svfiprintf_r+0x1ec>)
 8003cfa:	bb1b      	cbnz	r3, 8003d44 <_svfiprintf_r+0x1b0>
 8003cfc:	9b03      	ldr	r3, [sp, #12]
 8003cfe:	3307      	adds	r3, #7
 8003d00:	f023 0307 	bic.w	r3, r3, #7
 8003d04:	3308      	adds	r3, #8
 8003d06:	9303      	str	r3, [sp, #12]
 8003d08:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003d0a:	4433      	add	r3, r6
 8003d0c:	9309      	str	r3, [sp, #36]	@ 0x24
 8003d0e:	e76a      	b.n	8003be6 <_svfiprintf_r+0x52>
 8003d10:	fb0c 3202 	mla	r2, ip, r2, r3
 8003d14:	460c      	mov	r4, r1
 8003d16:	2001      	movs	r0, #1
 8003d18:	e7a8      	b.n	8003c6c <_svfiprintf_r+0xd8>
 8003d1a:	2300      	movs	r3, #0
 8003d1c:	3401      	adds	r4, #1
 8003d1e:	9305      	str	r3, [sp, #20]
 8003d20:	4619      	mov	r1, r3
 8003d22:	f04f 0c0a 	mov.w	ip, #10
 8003d26:	4620      	mov	r0, r4
 8003d28:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003d2c:	3a30      	subs	r2, #48	@ 0x30
 8003d2e:	2a09      	cmp	r2, #9
 8003d30:	d903      	bls.n	8003d3a <_svfiprintf_r+0x1a6>
 8003d32:	2b00      	cmp	r3, #0
 8003d34:	d0c6      	beq.n	8003cc4 <_svfiprintf_r+0x130>
 8003d36:	9105      	str	r1, [sp, #20]
 8003d38:	e7c4      	b.n	8003cc4 <_svfiprintf_r+0x130>
 8003d3a:	fb0c 2101 	mla	r1, ip, r1, r2
 8003d3e:	4604      	mov	r4, r0
 8003d40:	2301      	movs	r3, #1
 8003d42:	e7f0      	b.n	8003d26 <_svfiprintf_r+0x192>
 8003d44:	ab03      	add	r3, sp, #12
 8003d46:	9300      	str	r3, [sp, #0]
 8003d48:	462a      	mov	r2, r5
 8003d4a:	4b0e      	ldr	r3, [pc, #56]	@ (8003d84 <_svfiprintf_r+0x1f0>)
 8003d4c:	a904      	add	r1, sp, #16
 8003d4e:	4638      	mov	r0, r7
 8003d50:	f7fd fe96 	bl	8001a80 <_printf_float>
 8003d54:	1c42      	adds	r2, r0, #1
 8003d56:	4606      	mov	r6, r0
 8003d58:	d1d6      	bne.n	8003d08 <_svfiprintf_r+0x174>
 8003d5a:	89ab      	ldrh	r3, [r5, #12]
 8003d5c:	065b      	lsls	r3, r3, #25
 8003d5e:	f53f af2d 	bmi.w	8003bbc <_svfiprintf_r+0x28>
 8003d62:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8003d64:	e72c      	b.n	8003bc0 <_svfiprintf_r+0x2c>
 8003d66:	ab03      	add	r3, sp, #12
 8003d68:	9300      	str	r3, [sp, #0]
 8003d6a:	462a      	mov	r2, r5
 8003d6c:	4b05      	ldr	r3, [pc, #20]	@ (8003d84 <_svfiprintf_r+0x1f0>)
 8003d6e:	a904      	add	r1, sp, #16
 8003d70:	4638      	mov	r0, r7
 8003d72:	f7fe f91d 	bl	8001fb0 <_printf_i>
 8003d76:	e7ed      	b.n	8003d54 <_svfiprintf_r+0x1c0>
 8003d78:	08004830 	.word	0x08004830
 8003d7c:	0800483a 	.word	0x0800483a
 8003d80:	08001a81 	.word	0x08001a81
 8003d84:	08003add 	.word	0x08003add
 8003d88:	08004836 	.word	0x08004836

08003d8c <__sflush_r>:
 8003d8c:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8003d90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003d94:	0716      	lsls	r6, r2, #28
 8003d96:	4605      	mov	r5, r0
 8003d98:	460c      	mov	r4, r1
 8003d9a:	d454      	bmi.n	8003e46 <__sflush_r+0xba>
 8003d9c:	684b      	ldr	r3, [r1, #4]
 8003d9e:	2b00      	cmp	r3, #0
 8003da0:	dc02      	bgt.n	8003da8 <__sflush_r+0x1c>
 8003da2:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8003da4:	2b00      	cmp	r3, #0
 8003da6:	dd48      	ble.n	8003e3a <__sflush_r+0xae>
 8003da8:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8003daa:	2e00      	cmp	r6, #0
 8003dac:	d045      	beq.n	8003e3a <__sflush_r+0xae>
 8003dae:	2300      	movs	r3, #0
 8003db0:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8003db4:	682f      	ldr	r7, [r5, #0]
 8003db6:	6a21      	ldr	r1, [r4, #32]
 8003db8:	602b      	str	r3, [r5, #0]
 8003dba:	d030      	beq.n	8003e1e <__sflush_r+0x92>
 8003dbc:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8003dbe:	89a3      	ldrh	r3, [r4, #12]
 8003dc0:	0759      	lsls	r1, r3, #29
 8003dc2:	d505      	bpl.n	8003dd0 <__sflush_r+0x44>
 8003dc4:	6863      	ldr	r3, [r4, #4]
 8003dc6:	1ad2      	subs	r2, r2, r3
 8003dc8:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8003dca:	b10b      	cbz	r3, 8003dd0 <__sflush_r+0x44>
 8003dcc:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8003dce:	1ad2      	subs	r2, r2, r3
 8003dd0:	2300      	movs	r3, #0
 8003dd2:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8003dd4:	6a21      	ldr	r1, [r4, #32]
 8003dd6:	4628      	mov	r0, r5
 8003dd8:	47b0      	blx	r6
 8003dda:	1c43      	adds	r3, r0, #1
 8003ddc:	89a3      	ldrh	r3, [r4, #12]
 8003dde:	d106      	bne.n	8003dee <__sflush_r+0x62>
 8003de0:	6829      	ldr	r1, [r5, #0]
 8003de2:	291d      	cmp	r1, #29
 8003de4:	d82b      	bhi.n	8003e3e <__sflush_r+0xb2>
 8003de6:	4a2a      	ldr	r2, [pc, #168]	@ (8003e90 <__sflush_r+0x104>)
 8003de8:	410a      	asrs	r2, r1
 8003dea:	07d6      	lsls	r6, r2, #31
 8003dec:	d427      	bmi.n	8003e3e <__sflush_r+0xb2>
 8003dee:	2200      	movs	r2, #0
 8003df0:	6062      	str	r2, [r4, #4]
 8003df2:	04d9      	lsls	r1, r3, #19
 8003df4:	6922      	ldr	r2, [r4, #16]
 8003df6:	6022      	str	r2, [r4, #0]
 8003df8:	d504      	bpl.n	8003e04 <__sflush_r+0x78>
 8003dfa:	1c42      	adds	r2, r0, #1
 8003dfc:	d101      	bne.n	8003e02 <__sflush_r+0x76>
 8003dfe:	682b      	ldr	r3, [r5, #0]
 8003e00:	b903      	cbnz	r3, 8003e04 <__sflush_r+0x78>
 8003e02:	6560      	str	r0, [r4, #84]	@ 0x54
 8003e04:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8003e06:	602f      	str	r7, [r5, #0]
 8003e08:	b1b9      	cbz	r1, 8003e3a <__sflush_r+0xae>
 8003e0a:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8003e0e:	4299      	cmp	r1, r3
 8003e10:	d002      	beq.n	8003e18 <__sflush_r+0x8c>
 8003e12:	4628      	mov	r0, r5
 8003e14:	f7ff f9e0 	bl	80031d8 <_free_r>
 8003e18:	2300      	movs	r3, #0
 8003e1a:	6363      	str	r3, [r4, #52]	@ 0x34
 8003e1c:	e00d      	b.n	8003e3a <__sflush_r+0xae>
 8003e1e:	2301      	movs	r3, #1
 8003e20:	4628      	mov	r0, r5
 8003e22:	47b0      	blx	r6
 8003e24:	4602      	mov	r2, r0
 8003e26:	1c50      	adds	r0, r2, #1
 8003e28:	d1c9      	bne.n	8003dbe <__sflush_r+0x32>
 8003e2a:	682b      	ldr	r3, [r5, #0]
 8003e2c:	2b00      	cmp	r3, #0
 8003e2e:	d0c6      	beq.n	8003dbe <__sflush_r+0x32>
 8003e30:	2b1d      	cmp	r3, #29
 8003e32:	d001      	beq.n	8003e38 <__sflush_r+0xac>
 8003e34:	2b16      	cmp	r3, #22
 8003e36:	d11e      	bne.n	8003e76 <__sflush_r+0xea>
 8003e38:	602f      	str	r7, [r5, #0]
 8003e3a:	2000      	movs	r0, #0
 8003e3c:	e022      	b.n	8003e84 <__sflush_r+0xf8>
 8003e3e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003e42:	b21b      	sxth	r3, r3
 8003e44:	e01b      	b.n	8003e7e <__sflush_r+0xf2>
 8003e46:	690f      	ldr	r7, [r1, #16]
 8003e48:	2f00      	cmp	r7, #0
 8003e4a:	d0f6      	beq.n	8003e3a <__sflush_r+0xae>
 8003e4c:	0793      	lsls	r3, r2, #30
 8003e4e:	680e      	ldr	r6, [r1, #0]
 8003e50:	bf08      	it	eq
 8003e52:	694b      	ldreq	r3, [r1, #20]
 8003e54:	600f      	str	r7, [r1, #0]
 8003e56:	bf18      	it	ne
 8003e58:	2300      	movne	r3, #0
 8003e5a:	eba6 0807 	sub.w	r8, r6, r7
 8003e5e:	608b      	str	r3, [r1, #8]
 8003e60:	f1b8 0f00 	cmp.w	r8, #0
 8003e64:	dde9      	ble.n	8003e3a <__sflush_r+0xae>
 8003e66:	6a21      	ldr	r1, [r4, #32]
 8003e68:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8003e6a:	4643      	mov	r3, r8
 8003e6c:	463a      	mov	r2, r7
 8003e6e:	4628      	mov	r0, r5
 8003e70:	47b0      	blx	r6
 8003e72:	2800      	cmp	r0, #0
 8003e74:	dc08      	bgt.n	8003e88 <__sflush_r+0xfc>
 8003e76:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003e7a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003e7e:	81a3      	strh	r3, [r4, #12]
 8003e80:	f04f 30ff 	mov.w	r0, #4294967295
 8003e84:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003e88:	4407      	add	r7, r0
 8003e8a:	eba8 0800 	sub.w	r8, r8, r0
 8003e8e:	e7e7      	b.n	8003e60 <__sflush_r+0xd4>
 8003e90:	dfbffffe 	.word	0xdfbffffe

08003e94 <_fflush_r>:
 8003e94:	b538      	push	{r3, r4, r5, lr}
 8003e96:	690b      	ldr	r3, [r1, #16]
 8003e98:	4605      	mov	r5, r0
 8003e9a:	460c      	mov	r4, r1
 8003e9c:	b913      	cbnz	r3, 8003ea4 <_fflush_r+0x10>
 8003e9e:	2500      	movs	r5, #0
 8003ea0:	4628      	mov	r0, r5
 8003ea2:	bd38      	pop	{r3, r4, r5, pc}
 8003ea4:	b118      	cbz	r0, 8003eae <_fflush_r+0x1a>
 8003ea6:	6a03      	ldr	r3, [r0, #32]
 8003ea8:	b90b      	cbnz	r3, 8003eae <_fflush_r+0x1a>
 8003eaa:	f7fe fa2d 	bl	8002308 <__sinit>
 8003eae:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003eb2:	2b00      	cmp	r3, #0
 8003eb4:	d0f3      	beq.n	8003e9e <_fflush_r+0xa>
 8003eb6:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8003eb8:	07d0      	lsls	r0, r2, #31
 8003eba:	d404      	bmi.n	8003ec6 <_fflush_r+0x32>
 8003ebc:	0599      	lsls	r1, r3, #22
 8003ebe:	d402      	bmi.n	8003ec6 <_fflush_r+0x32>
 8003ec0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8003ec2:	f7fe fb38 	bl	8002536 <__retarget_lock_acquire_recursive>
 8003ec6:	4628      	mov	r0, r5
 8003ec8:	4621      	mov	r1, r4
 8003eca:	f7ff ff5f 	bl	8003d8c <__sflush_r>
 8003ece:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8003ed0:	07da      	lsls	r2, r3, #31
 8003ed2:	4605      	mov	r5, r0
 8003ed4:	d4e4      	bmi.n	8003ea0 <_fflush_r+0xc>
 8003ed6:	89a3      	ldrh	r3, [r4, #12]
 8003ed8:	059b      	lsls	r3, r3, #22
 8003eda:	d4e1      	bmi.n	8003ea0 <_fflush_r+0xc>
 8003edc:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8003ede:	f7fe fb2b 	bl	8002538 <__retarget_lock_release_recursive>
 8003ee2:	e7dd      	b.n	8003ea0 <_fflush_r+0xc>

08003ee4 <memmove>:
 8003ee4:	4288      	cmp	r0, r1
 8003ee6:	b510      	push	{r4, lr}
 8003ee8:	eb01 0402 	add.w	r4, r1, r2
 8003eec:	d902      	bls.n	8003ef4 <memmove+0x10>
 8003eee:	4284      	cmp	r4, r0
 8003ef0:	4623      	mov	r3, r4
 8003ef2:	d807      	bhi.n	8003f04 <memmove+0x20>
 8003ef4:	1e43      	subs	r3, r0, #1
 8003ef6:	42a1      	cmp	r1, r4
 8003ef8:	d008      	beq.n	8003f0c <memmove+0x28>
 8003efa:	f811 2b01 	ldrb.w	r2, [r1], #1
 8003efe:	f803 2f01 	strb.w	r2, [r3, #1]!
 8003f02:	e7f8      	b.n	8003ef6 <memmove+0x12>
 8003f04:	4402      	add	r2, r0
 8003f06:	4601      	mov	r1, r0
 8003f08:	428a      	cmp	r2, r1
 8003f0a:	d100      	bne.n	8003f0e <memmove+0x2a>
 8003f0c:	bd10      	pop	{r4, pc}
 8003f0e:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8003f12:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8003f16:	e7f7      	b.n	8003f08 <memmove+0x24>

08003f18 <_sbrk_r>:
 8003f18:	b538      	push	{r3, r4, r5, lr}
 8003f1a:	4d06      	ldr	r5, [pc, #24]	@ (8003f34 <_sbrk_r+0x1c>)
 8003f1c:	2300      	movs	r3, #0
 8003f1e:	4604      	mov	r4, r0
 8003f20:	4608      	mov	r0, r1
 8003f22:	602b      	str	r3, [r5, #0]
 8003f24:	f7fd fc66 	bl	80017f4 <_sbrk>
 8003f28:	1c43      	adds	r3, r0, #1
 8003f2a:	d102      	bne.n	8003f32 <_sbrk_r+0x1a>
 8003f2c:	682b      	ldr	r3, [r5, #0]
 8003f2e:	b103      	cbz	r3, 8003f32 <_sbrk_r+0x1a>
 8003f30:	6023      	str	r3, [r4, #0]
 8003f32:	bd38      	pop	{r3, r4, r5, pc}
 8003f34:	20000340 	.word	0x20000340

08003f38 <memcpy>:
 8003f38:	440a      	add	r2, r1
 8003f3a:	4291      	cmp	r1, r2
 8003f3c:	f100 33ff 	add.w	r3, r0, #4294967295
 8003f40:	d100      	bne.n	8003f44 <memcpy+0xc>
 8003f42:	4770      	bx	lr
 8003f44:	b510      	push	{r4, lr}
 8003f46:	f811 4b01 	ldrb.w	r4, [r1], #1
 8003f4a:	f803 4f01 	strb.w	r4, [r3, #1]!
 8003f4e:	4291      	cmp	r1, r2
 8003f50:	d1f9      	bne.n	8003f46 <memcpy+0xe>
 8003f52:	bd10      	pop	{r4, pc}

08003f54 <__assert_func>:
 8003f54:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8003f56:	4614      	mov	r4, r2
 8003f58:	461a      	mov	r2, r3
 8003f5a:	4b09      	ldr	r3, [pc, #36]	@ (8003f80 <__assert_func+0x2c>)
 8003f5c:	681b      	ldr	r3, [r3, #0]
 8003f5e:	4605      	mov	r5, r0
 8003f60:	68d8      	ldr	r0, [r3, #12]
 8003f62:	b954      	cbnz	r4, 8003f7a <__assert_func+0x26>
 8003f64:	4b07      	ldr	r3, [pc, #28]	@ (8003f84 <__assert_func+0x30>)
 8003f66:	461c      	mov	r4, r3
 8003f68:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8003f6c:	9100      	str	r1, [sp, #0]
 8003f6e:	462b      	mov	r3, r5
 8003f70:	4905      	ldr	r1, [pc, #20]	@ (8003f88 <__assert_func+0x34>)
 8003f72:	f000 f86f 	bl	8004054 <fiprintf>
 8003f76:	f000 f87f 	bl	8004078 <abort>
 8003f7a:	4b04      	ldr	r3, [pc, #16]	@ (8003f8c <__assert_func+0x38>)
 8003f7c:	e7f4      	b.n	8003f68 <__assert_func+0x14>
 8003f7e:	bf00      	nop
 8003f80:	2000000c 	.word	0x2000000c
 8003f84:	08004886 	.word	0x08004886
 8003f88:	08004858 	.word	0x08004858
 8003f8c:	0800484b 	.word	0x0800484b

08003f90 <_calloc_r>:
 8003f90:	b570      	push	{r4, r5, r6, lr}
 8003f92:	fba1 5402 	umull	r5, r4, r1, r2
 8003f96:	b93c      	cbnz	r4, 8003fa8 <_calloc_r+0x18>
 8003f98:	4629      	mov	r1, r5
 8003f9a:	f7ff f991 	bl	80032c0 <_malloc_r>
 8003f9e:	4606      	mov	r6, r0
 8003fa0:	b928      	cbnz	r0, 8003fae <_calloc_r+0x1e>
 8003fa2:	2600      	movs	r6, #0
 8003fa4:	4630      	mov	r0, r6
 8003fa6:	bd70      	pop	{r4, r5, r6, pc}
 8003fa8:	220c      	movs	r2, #12
 8003faa:	6002      	str	r2, [r0, #0]
 8003fac:	e7f9      	b.n	8003fa2 <_calloc_r+0x12>
 8003fae:	462a      	mov	r2, r5
 8003fb0:	4621      	mov	r1, r4
 8003fb2:	f7fe fa43 	bl	800243c <memset>
 8003fb6:	e7f5      	b.n	8003fa4 <_calloc_r+0x14>

08003fb8 <__ascii_mbtowc>:
 8003fb8:	b082      	sub	sp, #8
 8003fba:	b901      	cbnz	r1, 8003fbe <__ascii_mbtowc+0x6>
 8003fbc:	a901      	add	r1, sp, #4
 8003fbe:	b142      	cbz	r2, 8003fd2 <__ascii_mbtowc+0x1a>
 8003fc0:	b14b      	cbz	r3, 8003fd6 <__ascii_mbtowc+0x1e>
 8003fc2:	7813      	ldrb	r3, [r2, #0]
 8003fc4:	600b      	str	r3, [r1, #0]
 8003fc6:	7812      	ldrb	r2, [r2, #0]
 8003fc8:	1e10      	subs	r0, r2, #0
 8003fca:	bf18      	it	ne
 8003fcc:	2001      	movne	r0, #1
 8003fce:	b002      	add	sp, #8
 8003fd0:	4770      	bx	lr
 8003fd2:	4610      	mov	r0, r2
 8003fd4:	e7fb      	b.n	8003fce <__ascii_mbtowc+0x16>
 8003fd6:	f06f 0001 	mvn.w	r0, #1
 8003fda:	e7f8      	b.n	8003fce <__ascii_mbtowc+0x16>

08003fdc <_realloc_r>:
 8003fdc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003fe0:	4680      	mov	r8, r0
 8003fe2:	4615      	mov	r5, r2
 8003fe4:	460c      	mov	r4, r1
 8003fe6:	b921      	cbnz	r1, 8003ff2 <_realloc_r+0x16>
 8003fe8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003fec:	4611      	mov	r1, r2
 8003fee:	f7ff b967 	b.w	80032c0 <_malloc_r>
 8003ff2:	b92a      	cbnz	r2, 8004000 <_realloc_r+0x24>
 8003ff4:	f7ff f8f0 	bl	80031d8 <_free_r>
 8003ff8:	2400      	movs	r4, #0
 8003ffa:	4620      	mov	r0, r4
 8003ffc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004000:	f000 f841 	bl	8004086 <_malloc_usable_size_r>
 8004004:	4285      	cmp	r5, r0
 8004006:	4606      	mov	r6, r0
 8004008:	d802      	bhi.n	8004010 <_realloc_r+0x34>
 800400a:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 800400e:	d8f4      	bhi.n	8003ffa <_realloc_r+0x1e>
 8004010:	4629      	mov	r1, r5
 8004012:	4640      	mov	r0, r8
 8004014:	f7ff f954 	bl	80032c0 <_malloc_r>
 8004018:	4607      	mov	r7, r0
 800401a:	2800      	cmp	r0, #0
 800401c:	d0ec      	beq.n	8003ff8 <_realloc_r+0x1c>
 800401e:	42b5      	cmp	r5, r6
 8004020:	462a      	mov	r2, r5
 8004022:	4621      	mov	r1, r4
 8004024:	bf28      	it	cs
 8004026:	4632      	movcs	r2, r6
 8004028:	f7ff ff86 	bl	8003f38 <memcpy>
 800402c:	4621      	mov	r1, r4
 800402e:	4640      	mov	r0, r8
 8004030:	f7ff f8d2 	bl	80031d8 <_free_r>
 8004034:	463c      	mov	r4, r7
 8004036:	e7e0      	b.n	8003ffa <_realloc_r+0x1e>

08004038 <__ascii_wctomb>:
 8004038:	4603      	mov	r3, r0
 800403a:	4608      	mov	r0, r1
 800403c:	b141      	cbz	r1, 8004050 <__ascii_wctomb+0x18>
 800403e:	2aff      	cmp	r2, #255	@ 0xff
 8004040:	d904      	bls.n	800404c <__ascii_wctomb+0x14>
 8004042:	228a      	movs	r2, #138	@ 0x8a
 8004044:	601a      	str	r2, [r3, #0]
 8004046:	f04f 30ff 	mov.w	r0, #4294967295
 800404a:	4770      	bx	lr
 800404c:	700a      	strb	r2, [r1, #0]
 800404e:	2001      	movs	r0, #1
 8004050:	4770      	bx	lr
	...

08004054 <fiprintf>:
 8004054:	b40e      	push	{r1, r2, r3}
 8004056:	b503      	push	{r0, r1, lr}
 8004058:	4601      	mov	r1, r0
 800405a:	ab03      	add	r3, sp, #12
 800405c:	4805      	ldr	r0, [pc, #20]	@ (8004074 <fiprintf+0x20>)
 800405e:	f853 2b04 	ldr.w	r2, [r3], #4
 8004062:	6800      	ldr	r0, [r0, #0]
 8004064:	9301      	str	r3, [sp, #4]
 8004066:	f000 f83f 	bl	80040e8 <_vfiprintf_r>
 800406a:	b002      	add	sp, #8
 800406c:	f85d eb04 	ldr.w	lr, [sp], #4
 8004070:	b003      	add	sp, #12
 8004072:	4770      	bx	lr
 8004074:	2000000c 	.word	0x2000000c

08004078 <abort>:
 8004078:	b508      	push	{r3, lr}
 800407a:	2006      	movs	r0, #6
 800407c:	f000 fa08 	bl	8004490 <raise>
 8004080:	2001      	movs	r0, #1
 8004082:	f7fd fb3f 	bl	8001704 <_exit>

08004086 <_malloc_usable_size_r>:
 8004086:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800408a:	1f18      	subs	r0, r3, #4
 800408c:	2b00      	cmp	r3, #0
 800408e:	bfbc      	itt	lt
 8004090:	580b      	ldrlt	r3, [r1, r0]
 8004092:	18c0      	addlt	r0, r0, r3
 8004094:	4770      	bx	lr

08004096 <__sfputc_r>:
 8004096:	6893      	ldr	r3, [r2, #8]
 8004098:	3b01      	subs	r3, #1
 800409a:	2b00      	cmp	r3, #0
 800409c:	b410      	push	{r4}
 800409e:	6093      	str	r3, [r2, #8]
 80040a0:	da08      	bge.n	80040b4 <__sfputc_r+0x1e>
 80040a2:	6994      	ldr	r4, [r2, #24]
 80040a4:	42a3      	cmp	r3, r4
 80040a6:	db01      	blt.n	80040ac <__sfputc_r+0x16>
 80040a8:	290a      	cmp	r1, #10
 80040aa:	d103      	bne.n	80040b4 <__sfputc_r+0x1e>
 80040ac:	f85d 4b04 	ldr.w	r4, [sp], #4
 80040b0:	f000 b932 	b.w	8004318 <__swbuf_r>
 80040b4:	6813      	ldr	r3, [r2, #0]
 80040b6:	1c58      	adds	r0, r3, #1
 80040b8:	6010      	str	r0, [r2, #0]
 80040ba:	7019      	strb	r1, [r3, #0]
 80040bc:	4608      	mov	r0, r1
 80040be:	f85d 4b04 	ldr.w	r4, [sp], #4
 80040c2:	4770      	bx	lr

080040c4 <__sfputs_r>:
 80040c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80040c6:	4606      	mov	r6, r0
 80040c8:	460f      	mov	r7, r1
 80040ca:	4614      	mov	r4, r2
 80040cc:	18d5      	adds	r5, r2, r3
 80040ce:	42ac      	cmp	r4, r5
 80040d0:	d101      	bne.n	80040d6 <__sfputs_r+0x12>
 80040d2:	2000      	movs	r0, #0
 80040d4:	e007      	b.n	80040e6 <__sfputs_r+0x22>
 80040d6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80040da:	463a      	mov	r2, r7
 80040dc:	4630      	mov	r0, r6
 80040de:	f7ff ffda 	bl	8004096 <__sfputc_r>
 80040e2:	1c43      	adds	r3, r0, #1
 80040e4:	d1f3      	bne.n	80040ce <__sfputs_r+0xa>
 80040e6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080040e8 <_vfiprintf_r>:
 80040e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80040ec:	460d      	mov	r5, r1
 80040ee:	b09d      	sub	sp, #116	@ 0x74
 80040f0:	4614      	mov	r4, r2
 80040f2:	4698      	mov	r8, r3
 80040f4:	4606      	mov	r6, r0
 80040f6:	b118      	cbz	r0, 8004100 <_vfiprintf_r+0x18>
 80040f8:	6a03      	ldr	r3, [r0, #32]
 80040fa:	b90b      	cbnz	r3, 8004100 <_vfiprintf_r+0x18>
 80040fc:	f7fe f904 	bl	8002308 <__sinit>
 8004100:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8004102:	07d9      	lsls	r1, r3, #31
 8004104:	d405      	bmi.n	8004112 <_vfiprintf_r+0x2a>
 8004106:	89ab      	ldrh	r3, [r5, #12]
 8004108:	059a      	lsls	r2, r3, #22
 800410a:	d402      	bmi.n	8004112 <_vfiprintf_r+0x2a>
 800410c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800410e:	f7fe fa12 	bl	8002536 <__retarget_lock_acquire_recursive>
 8004112:	89ab      	ldrh	r3, [r5, #12]
 8004114:	071b      	lsls	r3, r3, #28
 8004116:	d501      	bpl.n	800411c <_vfiprintf_r+0x34>
 8004118:	692b      	ldr	r3, [r5, #16]
 800411a:	b99b      	cbnz	r3, 8004144 <_vfiprintf_r+0x5c>
 800411c:	4629      	mov	r1, r5
 800411e:	4630      	mov	r0, r6
 8004120:	f000 f938 	bl	8004394 <__swsetup_r>
 8004124:	b170      	cbz	r0, 8004144 <_vfiprintf_r+0x5c>
 8004126:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8004128:	07dc      	lsls	r4, r3, #31
 800412a:	d504      	bpl.n	8004136 <_vfiprintf_r+0x4e>
 800412c:	f04f 30ff 	mov.w	r0, #4294967295
 8004130:	b01d      	add	sp, #116	@ 0x74
 8004132:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004136:	89ab      	ldrh	r3, [r5, #12]
 8004138:	0598      	lsls	r0, r3, #22
 800413a:	d4f7      	bmi.n	800412c <_vfiprintf_r+0x44>
 800413c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800413e:	f7fe f9fb 	bl	8002538 <__retarget_lock_release_recursive>
 8004142:	e7f3      	b.n	800412c <_vfiprintf_r+0x44>
 8004144:	2300      	movs	r3, #0
 8004146:	9309      	str	r3, [sp, #36]	@ 0x24
 8004148:	2320      	movs	r3, #32
 800414a:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800414e:	f8cd 800c 	str.w	r8, [sp, #12]
 8004152:	2330      	movs	r3, #48	@ 0x30
 8004154:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8004304 <_vfiprintf_r+0x21c>
 8004158:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 800415c:	f04f 0901 	mov.w	r9, #1
 8004160:	4623      	mov	r3, r4
 8004162:	469a      	mov	sl, r3
 8004164:	f813 2b01 	ldrb.w	r2, [r3], #1
 8004168:	b10a      	cbz	r2, 800416e <_vfiprintf_r+0x86>
 800416a:	2a25      	cmp	r2, #37	@ 0x25
 800416c:	d1f9      	bne.n	8004162 <_vfiprintf_r+0x7a>
 800416e:	ebba 0b04 	subs.w	fp, sl, r4
 8004172:	d00b      	beq.n	800418c <_vfiprintf_r+0xa4>
 8004174:	465b      	mov	r3, fp
 8004176:	4622      	mov	r2, r4
 8004178:	4629      	mov	r1, r5
 800417a:	4630      	mov	r0, r6
 800417c:	f7ff ffa2 	bl	80040c4 <__sfputs_r>
 8004180:	3001      	adds	r0, #1
 8004182:	f000 80a7 	beq.w	80042d4 <_vfiprintf_r+0x1ec>
 8004186:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8004188:	445a      	add	r2, fp
 800418a:	9209      	str	r2, [sp, #36]	@ 0x24
 800418c:	f89a 3000 	ldrb.w	r3, [sl]
 8004190:	2b00      	cmp	r3, #0
 8004192:	f000 809f 	beq.w	80042d4 <_vfiprintf_r+0x1ec>
 8004196:	2300      	movs	r3, #0
 8004198:	f04f 32ff 	mov.w	r2, #4294967295
 800419c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80041a0:	f10a 0a01 	add.w	sl, sl, #1
 80041a4:	9304      	str	r3, [sp, #16]
 80041a6:	9307      	str	r3, [sp, #28]
 80041a8:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 80041ac:	931a      	str	r3, [sp, #104]	@ 0x68
 80041ae:	4654      	mov	r4, sl
 80041b0:	2205      	movs	r2, #5
 80041b2:	f814 1b01 	ldrb.w	r1, [r4], #1
 80041b6:	4853      	ldr	r0, [pc, #332]	@ (8004304 <_vfiprintf_r+0x21c>)
 80041b8:	f7fc f812 	bl	80001e0 <memchr>
 80041bc:	9a04      	ldr	r2, [sp, #16]
 80041be:	b9d8      	cbnz	r0, 80041f8 <_vfiprintf_r+0x110>
 80041c0:	06d1      	lsls	r1, r2, #27
 80041c2:	bf44      	itt	mi
 80041c4:	2320      	movmi	r3, #32
 80041c6:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80041ca:	0713      	lsls	r3, r2, #28
 80041cc:	bf44      	itt	mi
 80041ce:	232b      	movmi	r3, #43	@ 0x2b
 80041d0:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80041d4:	f89a 3000 	ldrb.w	r3, [sl]
 80041d8:	2b2a      	cmp	r3, #42	@ 0x2a
 80041da:	d015      	beq.n	8004208 <_vfiprintf_r+0x120>
 80041dc:	9a07      	ldr	r2, [sp, #28]
 80041de:	4654      	mov	r4, sl
 80041e0:	2000      	movs	r0, #0
 80041e2:	f04f 0c0a 	mov.w	ip, #10
 80041e6:	4621      	mov	r1, r4
 80041e8:	f811 3b01 	ldrb.w	r3, [r1], #1
 80041ec:	3b30      	subs	r3, #48	@ 0x30
 80041ee:	2b09      	cmp	r3, #9
 80041f0:	d94b      	bls.n	800428a <_vfiprintf_r+0x1a2>
 80041f2:	b1b0      	cbz	r0, 8004222 <_vfiprintf_r+0x13a>
 80041f4:	9207      	str	r2, [sp, #28]
 80041f6:	e014      	b.n	8004222 <_vfiprintf_r+0x13a>
 80041f8:	eba0 0308 	sub.w	r3, r0, r8
 80041fc:	fa09 f303 	lsl.w	r3, r9, r3
 8004200:	4313      	orrs	r3, r2
 8004202:	9304      	str	r3, [sp, #16]
 8004204:	46a2      	mov	sl, r4
 8004206:	e7d2      	b.n	80041ae <_vfiprintf_r+0xc6>
 8004208:	9b03      	ldr	r3, [sp, #12]
 800420a:	1d19      	adds	r1, r3, #4
 800420c:	681b      	ldr	r3, [r3, #0]
 800420e:	9103      	str	r1, [sp, #12]
 8004210:	2b00      	cmp	r3, #0
 8004212:	bfbb      	ittet	lt
 8004214:	425b      	neglt	r3, r3
 8004216:	f042 0202 	orrlt.w	r2, r2, #2
 800421a:	9307      	strge	r3, [sp, #28]
 800421c:	9307      	strlt	r3, [sp, #28]
 800421e:	bfb8      	it	lt
 8004220:	9204      	strlt	r2, [sp, #16]
 8004222:	7823      	ldrb	r3, [r4, #0]
 8004224:	2b2e      	cmp	r3, #46	@ 0x2e
 8004226:	d10a      	bne.n	800423e <_vfiprintf_r+0x156>
 8004228:	7863      	ldrb	r3, [r4, #1]
 800422a:	2b2a      	cmp	r3, #42	@ 0x2a
 800422c:	d132      	bne.n	8004294 <_vfiprintf_r+0x1ac>
 800422e:	9b03      	ldr	r3, [sp, #12]
 8004230:	1d1a      	adds	r2, r3, #4
 8004232:	681b      	ldr	r3, [r3, #0]
 8004234:	9203      	str	r2, [sp, #12]
 8004236:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 800423a:	3402      	adds	r4, #2
 800423c:	9305      	str	r3, [sp, #20]
 800423e:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8004314 <_vfiprintf_r+0x22c>
 8004242:	7821      	ldrb	r1, [r4, #0]
 8004244:	2203      	movs	r2, #3
 8004246:	4650      	mov	r0, sl
 8004248:	f7fb ffca 	bl	80001e0 <memchr>
 800424c:	b138      	cbz	r0, 800425e <_vfiprintf_r+0x176>
 800424e:	9b04      	ldr	r3, [sp, #16]
 8004250:	eba0 000a 	sub.w	r0, r0, sl
 8004254:	2240      	movs	r2, #64	@ 0x40
 8004256:	4082      	lsls	r2, r0
 8004258:	4313      	orrs	r3, r2
 800425a:	3401      	adds	r4, #1
 800425c:	9304      	str	r3, [sp, #16]
 800425e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004262:	4829      	ldr	r0, [pc, #164]	@ (8004308 <_vfiprintf_r+0x220>)
 8004264:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8004268:	2206      	movs	r2, #6
 800426a:	f7fb ffb9 	bl	80001e0 <memchr>
 800426e:	2800      	cmp	r0, #0
 8004270:	d03f      	beq.n	80042f2 <_vfiprintf_r+0x20a>
 8004272:	4b26      	ldr	r3, [pc, #152]	@ (800430c <_vfiprintf_r+0x224>)
 8004274:	bb1b      	cbnz	r3, 80042be <_vfiprintf_r+0x1d6>
 8004276:	9b03      	ldr	r3, [sp, #12]
 8004278:	3307      	adds	r3, #7
 800427a:	f023 0307 	bic.w	r3, r3, #7
 800427e:	3308      	adds	r3, #8
 8004280:	9303      	str	r3, [sp, #12]
 8004282:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004284:	443b      	add	r3, r7
 8004286:	9309      	str	r3, [sp, #36]	@ 0x24
 8004288:	e76a      	b.n	8004160 <_vfiprintf_r+0x78>
 800428a:	fb0c 3202 	mla	r2, ip, r2, r3
 800428e:	460c      	mov	r4, r1
 8004290:	2001      	movs	r0, #1
 8004292:	e7a8      	b.n	80041e6 <_vfiprintf_r+0xfe>
 8004294:	2300      	movs	r3, #0
 8004296:	3401      	adds	r4, #1
 8004298:	9305      	str	r3, [sp, #20]
 800429a:	4619      	mov	r1, r3
 800429c:	f04f 0c0a 	mov.w	ip, #10
 80042a0:	4620      	mov	r0, r4
 80042a2:	f810 2b01 	ldrb.w	r2, [r0], #1
 80042a6:	3a30      	subs	r2, #48	@ 0x30
 80042a8:	2a09      	cmp	r2, #9
 80042aa:	d903      	bls.n	80042b4 <_vfiprintf_r+0x1cc>
 80042ac:	2b00      	cmp	r3, #0
 80042ae:	d0c6      	beq.n	800423e <_vfiprintf_r+0x156>
 80042b0:	9105      	str	r1, [sp, #20]
 80042b2:	e7c4      	b.n	800423e <_vfiprintf_r+0x156>
 80042b4:	fb0c 2101 	mla	r1, ip, r1, r2
 80042b8:	4604      	mov	r4, r0
 80042ba:	2301      	movs	r3, #1
 80042bc:	e7f0      	b.n	80042a0 <_vfiprintf_r+0x1b8>
 80042be:	ab03      	add	r3, sp, #12
 80042c0:	9300      	str	r3, [sp, #0]
 80042c2:	462a      	mov	r2, r5
 80042c4:	4b12      	ldr	r3, [pc, #72]	@ (8004310 <_vfiprintf_r+0x228>)
 80042c6:	a904      	add	r1, sp, #16
 80042c8:	4630      	mov	r0, r6
 80042ca:	f7fd fbd9 	bl	8001a80 <_printf_float>
 80042ce:	4607      	mov	r7, r0
 80042d0:	1c78      	adds	r0, r7, #1
 80042d2:	d1d6      	bne.n	8004282 <_vfiprintf_r+0x19a>
 80042d4:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80042d6:	07d9      	lsls	r1, r3, #31
 80042d8:	d405      	bmi.n	80042e6 <_vfiprintf_r+0x1fe>
 80042da:	89ab      	ldrh	r3, [r5, #12]
 80042dc:	059a      	lsls	r2, r3, #22
 80042de:	d402      	bmi.n	80042e6 <_vfiprintf_r+0x1fe>
 80042e0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80042e2:	f7fe f929 	bl	8002538 <__retarget_lock_release_recursive>
 80042e6:	89ab      	ldrh	r3, [r5, #12]
 80042e8:	065b      	lsls	r3, r3, #25
 80042ea:	f53f af1f 	bmi.w	800412c <_vfiprintf_r+0x44>
 80042ee:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80042f0:	e71e      	b.n	8004130 <_vfiprintf_r+0x48>
 80042f2:	ab03      	add	r3, sp, #12
 80042f4:	9300      	str	r3, [sp, #0]
 80042f6:	462a      	mov	r2, r5
 80042f8:	4b05      	ldr	r3, [pc, #20]	@ (8004310 <_vfiprintf_r+0x228>)
 80042fa:	a904      	add	r1, sp, #16
 80042fc:	4630      	mov	r0, r6
 80042fe:	f7fd fe57 	bl	8001fb0 <_printf_i>
 8004302:	e7e4      	b.n	80042ce <_vfiprintf_r+0x1e6>
 8004304:	08004830 	.word	0x08004830
 8004308:	0800483a 	.word	0x0800483a
 800430c:	08001a81 	.word	0x08001a81
 8004310:	080040c5 	.word	0x080040c5
 8004314:	08004836 	.word	0x08004836

08004318 <__swbuf_r>:
 8004318:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800431a:	460e      	mov	r6, r1
 800431c:	4614      	mov	r4, r2
 800431e:	4605      	mov	r5, r0
 8004320:	b118      	cbz	r0, 800432a <__swbuf_r+0x12>
 8004322:	6a03      	ldr	r3, [r0, #32]
 8004324:	b90b      	cbnz	r3, 800432a <__swbuf_r+0x12>
 8004326:	f7fd ffef 	bl	8002308 <__sinit>
 800432a:	69a3      	ldr	r3, [r4, #24]
 800432c:	60a3      	str	r3, [r4, #8]
 800432e:	89a3      	ldrh	r3, [r4, #12]
 8004330:	071a      	lsls	r2, r3, #28
 8004332:	d501      	bpl.n	8004338 <__swbuf_r+0x20>
 8004334:	6923      	ldr	r3, [r4, #16]
 8004336:	b943      	cbnz	r3, 800434a <__swbuf_r+0x32>
 8004338:	4621      	mov	r1, r4
 800433a:	4628      	mov	r0, r5
 800433c:	f000 f82a 	bl	8004394 <__swsetup_r>
 8004340:	b118      	cbz	r0, 800434a <__swbuf_r+0x32>
 8004342:	f04f 37ff 	mov.w	r7, #4294967295
 8004346:	4638      	mov	r0, r7
 8004348:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800434a:	6823      	ldr	r3, [r4, #0]
 800434c:	6922      	ldr	r2, [r4, #16]
 800434e:	1a98      	subs	r0, r3, r2
 8004350:	6963      	ldr	r3, [r4, #20]
 8004352:	b2f6      	uxtb	r6, r6
 8004354:	4283      	cmp	r3, r0
 8004356:	4637      	mov	r7, r6
 8004358:	dc05      	bgt.n	8004366 <__swbuf_r+0x4e>
 800435a:	4621      	mov	r1, r4
 800435c:	4628      	mov	r0, r5
 800435e:	f7ff fd99 	bl	8003e94 <_fflush_r>
 8004362:	2800      	cmp	r0, #0
 8004364:	d1ed      	bne.n	8004342 <__swbuf_r+0x2a>
 8004366:	68a3      	ldr	r3, [r4, #8]
 8004368:	3b01      	subs	r3, #1
 800436a:	60a3      	str	r3, [r4, #8]
 800436c:	6823      	ldr	r3, [r4, #0]
 800436e:	1c5a      	adds	r2, r3, #1
 8004370:	6022      	str	r2, [r4, #0]
 8004372:	701e      	strb	r6, [r3, #0]
 8004374:	6962      	ldr	r2, [r4, #20]
 8004376:	1c43      	adds	r3, r0, #1
 8004378:	429a      	cmp	r2, r3
 800437a:	d004      	beq.n	8004386 <__swbuf_r+0x6e>
 800437c:	89a3      	ldrh	r3, [r4, #12]
 800437e:	07db      	lsls	r3, r3, #31
 8004380:	d5e1      	bpl.n	8004346 <__swbuf_r+0x2e>
 8004382:	2e0a      	cmp	r6, #10
 8004384:	d1df      	bne.n	8004346 <__swbuf_r+0x2e>
 8004386:	4621      	mov	r1, r4
 8004388:	4628      	mov	r0, r5
 800438a:	f7ff fd83 	bl	8003e94 <_fflush_r>
 800438e:	2800      	cmp	r0, #0
 8004390:	d0d9      	beq.n	8004346 <__swbuf_r+0x2e>
 8004392:	e7d6      	b.n	8004342 <__swbuf_r+0x2a>

08004394 <__swsetup_r>:
 8004394:	b538      	push	{r3, r4, r5, lr}
 8004396:	4b29      	ldr	r3, [pc, #164]	@ (800443c <__swsetup_r+0xa8>)
 8004398:	4605      	mov	r5, r0
 800439a:	6818      	ldr	r0, [r3, #0]
 800439c:	460c      	mov	r4, r1
 800439e:	b118      	cbz	r0, 80043a8 <__swsetup_r+0x14>
 80043a0:	6a03      	ldr	r3, [r0, #32]
 80043a2:	b90b      	cbnz	r3, 80043a8 <__swsetup_r+0x14>
 80043a4:	f7fd ffb0 	bl	8002308 <__sinit>
 80043a8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80043ac:	0719      	lsls	r1, r3, #28
 80043ae:	d422      	bmi.n	80043f6 <__swsetup_r+0x62>
 80043b0:	06da      	lsls	r2, r3, #27
 80043b2:	d407      	bmi.n	80043c4 <__swsetup_r+0x30>
 80043b4:	2209      	movs	r2, #9
 80043b6:	602a      	str	r2, [r5, #0]
 80043b8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80043bc:	81a3      	strh	r3, [r4, #12]
 80043be:	f04f 30ff 	mov.w	r0, #4294967295
 80043c2:	e033      	b.n	800442c <__swsetup_r+0x98>
 80043c4:	0758      	lsls	r0, r3, #29
 80043c6:	d512      	bpl.n	80043ee <__swsetup_r+0x5a>
 80043c8:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80043ca:	b141      	cbz	r1, 80043de <__swsetup_r+0x4a>
 80043cc:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80043d0:	4299      	cmp	r1, r3
 80043d2:	d002      	beq.n	80043da <__swsetup_r+0x46>
 80043d4:	4628      	mov	r0, r5
 80043d6:	f7fe feff 	bl	80031d8 <_free_r>
 80043da:	2300      	movs	r3, #0
 80043dc:	6363      	str	r3, [r4, #52]	@ 0x34
 80043de:	89a3      	ldrh	r3, [r4, #12]
 80043e0:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 80043e4:	81a3      	strh	r3, [r4, #12]
 80043e6:	2300      	movs	r3, #0
 80043e8:	6063      	str	r3, [r4, #4]
 80043ea:	6923      	ldr	r3, [r4, #16]
 80043ec:	6023      	str	r3, [r4, #0]
 80043ee:	89a3      	ldrh	r3, [r4, #12]
 80043f0:	f043 0308 	orr.w	r3, r3, #8
 80043f4:	81a3      	strh	r3, [r4, #12]
 80043f6:	6923      	ldr	r3, [r4, #16]
 80043f8:	b94b      	cbnz	r3, 800440e <__swsetup_r+0x7a>
 80043fa:	89a3      	ldrh	r3, [r4, #12]
 80043fc:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8004400:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8004404:	d003      	beq.n	800440e <__swsetup_r+0x7a>
 8004406:	4621      	mov	r1, r4
 8004408:	4628      	mov	r0, r5
 800440a:	f000 f883 	bl	8004514 <__smakebuf_r>
 800440e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004412:	f013 0201 	ands.w	r2, r3, #1
 8004416:	d00a      	beq.n	800442e <__swsetup_r+0x9a>
 8004418:	2200      	movs	r2, #0
 800441a:	60a2      	str	r2, [r4, #8]
 800441c:	6962      	ldr	r2, [r4, #20]
 800441e:	4252      	negs	r2, r2
 8004420:	61a2      	str	r2, [r4, #24]
 8004422:	6922      	ldr	r2, [r4, #16]
 8004424:	b942      	cbnz	r2, 8004438 <__swsetup_r+0xa4>
 8004426:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 800442a:	d1c5      	bne.n	80043b8 <__swsetup_r+0x24>
 800442c:	bd38      	pop	{r3, r4, r5, pc}
 800442e:	0799      	lsls	r1, r3, #30
 8004430:	bf58      	it	pl
 8004432:	6962      	ldrpl	r2, [r4, #20]
 8004434:	60a2      	str	r2, [r4, #8]
 8004436:	e7f4      	b.n	8004422 <__swsetup_r+0x8e>
 8004438:	2000      	movs	r0, #0
 800443a:	e7f7      	b.n	800442c <__swsetup_r+0x98>
 800443c:	2000000c 	.word	0x2000000c

08004440 <_raise_r>:
 8004440:	291f      	cmp	r1, #31
 8004442:	b538      	push	{r3, r4, r5, lr}
 8004444:	4605      	mov	r5, r0
 8004446:	460c      	mov	r4, r1
 8004448:	d904      	bls.n	8004454 <_raise_r+0x14>
 800444a:	2316      	movs	r3, #22
 800444c:	6003      	str	r3, [r0, #0]
 800444e:	f04f 30ff 	mov.w	r0, #4294967295
 8004452:	bd38      	pop	{r3, r4, r5, pc}
 8004454:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8004456:	b112      	cbz	r2, 800445e <_raise_r+0x1e>
 8004458:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800445c:	b94b      	cbnz	r3, 8004472 <_raise_r+0x32>
 800445e:	4628      	mov	r0, r5
 8004460:	f000 f830 	bl	80044c4 <_getpid_r>
 8004464:	4622      	mov	r2, r4
 8004466:	4601      	mov	r1, r0
 8004468:	4628      	mov	r0, r5
 800446a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800446e:	f000 b817 	b.w	80044a0 <_kill_r>
 8004472:	2b01      	cmp	r3, #1
 8004474:	d00a      	beq.n	800448c <_raise_r+0x4c>
 8004476:	1c59      	adds	r1, r3, #1
 8004478:	d103      	bne.n	8004482 <_raise_r+0x42>
 800447a:	2316      	movs	r3, #22
 800447c:	6003      	str	r3, [r0, #0]
 800447e:	2001      	movs	r0, #1
 8004480:	e7e7      	b.n	8004452 <_raise_r+0x12>
 8004482:	2100      	movs	r1, #0
 8004484:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8004488:	4620      	mov	r0, r4
 800448a:	4798      	blx	r3
 800448c:	2000      	movs	r0, #0
 800448e:	e7e0      	b.n	8004452 <_raise_r+0x12>

08004490 <raise>:
 8004490:	4b02      	ldr	r3, [pc, #8]	@ (800449c <raise+0xc>)
 8004492:	4601      	mov	r1, r0
 8004494:	6818      	ldr	r0, [r3, #0]
 8004496:	f7ff bfd3 	b.w	8004440 <_raise_r>
 800449a:	bf00      	nop
 800449c:	2000000c 	.word	0x2000000c

080044a0 <_kill_r>:
 80044a0:	b538      	push	{r3, r4, r5, lr}
 80044a2:	4d07      	ldr	r5, [pc, #28]	@ (80044c0 <_kill_r+0x20>)
 80044a4:	2300      	movs	r3, #0
 80044a6:	4604      	mov	r4, r0
 80044a8:	4608      	mov	r0, r1
 80044aa:	4611      	mov	r1, r2
 80044ac:	602b      	str	r3, [r5, #0]
 80044ae:	f7fd f919 	bl	80016e4 <_kill>
 80044b2:	1c43      	adds	r3, r0, #1
 80044b4:	d102      	bne.n	80044bc <_kill_r+0x1c>
 80044b6:	682b      	ldr	r3, [r5, #0]
 80044b8:	b103      	cbz	r3, 80044bc <_kill_r+0x1c>
 80044ba:	6023      	str	r3, [r4, #0]
 80044bc:	bd38      	pop	{r3, r4, r5, pc}
 80044be:	bf00      	nop
 80044c0:	20000340 	.word	0x20000340

080044c4 <_getpid_r>:
 80044c4:	f7fd b906 	b.w	80016d4 <_getpid>

080044c8 <__swhatbuf_r>:
 80044c8:	b570      	push	{r4, r5, r6, lr}
 80044ca:	460c      	mov	r4, r1
 80044cc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80044d0:	2900      	cmp	r1, #0
 80044d2:	b096      	sub	sp, #88	@ 0x58
 80044d4:	4615      	mov	r5, r2
 80044d6:	461e      	mov	r6, r3
 80044d8:	da0d      	bge.n	80044f6 <__swhatbuf_r+0x2e>
 80044da:	89a3      	ldrh	r3, [r4, #12]
 80044dc:	f013 0f80 	tst.w	r3, #128	@ 0x80
 80044e0:	f04f 0100 	mov.w	r1, #0
 80044e4:	bf14      	ite	ne
 80044e6:	2340      	movne	r3, #64	@ 0x40
 80044e8:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 80044ec:	2000      	movs	r0, #0
 80044ee:	6031      	str	r1, [r6, #0]
 80044f0:	602b      	str	r3, [r5, #0]
 80044f2:	b016      	add	sp, #88	@ 0x58
 80044f4:	bd70      	pop	{r4, r5, r6, pc}
 80044f6:	466a      	mov	r2, sp
 80044f8:	f000 f848 	bl	800458c <_fstat_r>
 80044fc:	2800      	cmp	r0, #0
 80044fe:	dbec      	blt.n	80044da <__swhatbuf_r+0x12>
 8004500:	9901      	ldr	r1, [sp, #4]
 8004502:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8004506:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 800450a:	4259      	negs	r1, r3
 800450c:	4159      	adcs	r1, r3
 800450e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8004512:	e7eb      	b.n	80044ec <__swhatbuf_r+0x24>

08004514 <__smakebuf_r>:
 8004514:	898b      	ldrh	r3, [r1, #12]
 8004516:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004518:	079d      	lsls	r5, r3, #30
 800451a:	4606      	mov	r6, r0
 800451c:	460c      	mov	r4, r1
 800451e:	d507      	bpl.n	8004530 <__smakebuf_r+0x1c>
 8004520:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8004524:	6023      	str	r3, [r4, #0]
 8004526:	6123      	str	r3, [r4, #16]
 8004528:	2301      	movs	r3, #1
 800452a:	6163      	str	r3, [r4, #20]
 800452c:	b003      	add	sp, #12
 800452e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004530:	ab01      	add	r3, sp, #4
 8004532:	466a      	mov	r2, sp
 8004534:	f7ff ffc8 	bl	80044c8 <__swhatbuf_r>
 8004538:	9f00      	ldr	r7, [sp, #0]
 800453a:	4605      	mov	r5, r0
 800453c:	4639      	mov	r1, r7
 800453e:	4630      	mov	r0, r6
 8004540:	f7fe febe 	bl	80032c0 <_malloc_r>
 8004544:	b948      	cbnz	r0, 800455a <__smakebuf_r+0x46>
 8004546:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800454a:	059a      	lsls	r2, r3, #22
 800454c:	d4ee      	bmi.n	800452c <__smakebuf_r+0x18>
 800454e:	f023 0303 	bic.w	r3, r3, #3
 8004552:	f043 0302 	orr.w	r3, r3, #2
 8004556:	81a3      	strh	r3, [r4, #12]
 8004558:	e7e2      	b.n	8004520 <__smakebuf_r+0xc>
 800455a:	89a3      	ldrh	r3, [r4, #12]
 800455c:	6020      	str	r0, [r4, #0]
 800455e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8004562:	81a3      	strh	r3, [r4, #12]
 8004564:	9b01      	ldr	r3, [sp, #4]
 8004566:	e9c4 0704 	strd	r0, r7, [r4, #16]
 800456a:	b15b      	cbz	r3, 8004584 <__smakebuf_r+0x70>
 800456c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8004570:	4630      	mov	r0, r6
 8004572:	f000 f81d 	bl	80045b0 <_isatty_r>
 8004576:	b128      	cbz	r0, 8004584 <__smakebuf_r+0x70>
 8004578:	89a3      	ldrh	r3, [r4, #12]
 800457a:	f023 0303 	bic.w	r3, r3, #3
 800457e:	f043 0301 	orr.w	r3, r3, #1
 8004582:	81a3      	strh	r3, [r4, #12]
 8004584:	89a3      	ldrh	r3, [r4, #12]
 8004586:	431d      	orrs	r5, r3
 8004588:	81a5      	strh	r5, [r4, #12]
 800458a:	e7cf      	b.n	800452c <__smakebuf_r+0x18>

0800458c <_fstat_r>:
 800458c:	b538      	push	{r3, r4, r5, lr}
 800458e:	4d07      	ldr	r5, [pc, #28]	@ (80045ac <_fstat_r+0x20>)
 8004590:	2300      	movs	r3, #0
 8004592:	4604      	mov	r4, r0
 8004594:	4608      	mov	r0, r1
 8004596:	4611      	mov	r1, r2
 8004598:	602b      	str	r3, [r5, #0]
 800459a:	f7fd f903 	bl	80017a4 <_fstat>
 800459e:	1c43      	adds	r3, r0, #1
 80045a0:	d102      	bne.n	80045a8 <_fstat_r+0x1c>
 80045a2:	682b      	ldr	r3, [r5, #0]
 80045a4:	b103      	cbz	r3, 80045a8 <_fstat_r+0x1c>
 80045a6:	6023      	str	r3, [r4, #0]
 80045a8:	bd38      	pop	{r3, r4, r5, pc}
 80045aa:	bf00      	nop
 80045ac:	20000340 	.word	0x20000340

080045b0 <_isatty_r>:
 80045b0:	b538      	push	{r3, r4, r5, lr}
 80045b2:	4d06      	ldr	r5, [pc, #24]	@ (80045cc <_isatty_r+0x1c>)
 80045b4:	2300      	movs	r3, #0
 80045b6:	4604      	mov	r4, r0
 80045b8:	4608      	mov	r0, r1
 80045ba:	602b      	str	r3, [r5, #0]
 80045bc:	f7fd f902 	bl	80017c4 <_isatty>
 80045c0:	1c43      	adds	r3, r0, #1
 80045c2:	d102      	bne.n	80045ca <_isatty_r+0x1a>
 80045c4:	682b      	ldr	r3, [r5, #0]
 80045c6:	b103      	cbz	r3, 80045ca <_isatty_r+0x1a>
 80045c8:	6023      	str	r3, [r4, #0]
 80045ca:	bd38      	pop	{r3, r4, r5, pc}
 80045cc:	20000340 	.word	0x20000340

080045d0 <_init>:
 80045d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80045d2:	bf00      	nop
 80045d4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80045d6:	bc08      	pop	{r3}
 80045d8:	469e      	mov	lr, r3
 80045da:	4770      	bx	lr

080045dc <_fini>:
 80045dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80045de:	bf00      	nop
 80045e0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80045e2:	bc08      	pop	{r3}
 80045e4:	469e      	mov	lr, r3
 80045e6:	4770      	bx	lr
